!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ALT	kern/console.c	223;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
C	kern/console.c	290;"	d	file:
CAPSLOCK	kern/console.c	225;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	14;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONSBUFSIZE	kern/console.c	386;"	d	file:
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	222;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Command::desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
Command::func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
Command::name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/console.c	229;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
EXTPHYSMEM	inc/memlayout.h	94;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon3
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon3
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon3
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon3
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon3
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon3
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Eipdebuginfo::eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
Elf	inc/elf.h	/^struct Elf {$/;"	s
Elf::e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
Elf::e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
Elf::e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
Elf::e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
Elf::e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
Elf::e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
Elf::e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
Elf::e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
Elf::e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
Elf::e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
Elf::e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
Elf::e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
Elf::e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
Elf::e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
Elf::e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c	inherits:object
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Gatedesc::gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
IOPHYSMEM	inc/memlayout.h	93;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	88;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	97;"	d
KSTKGAP	inc/memlayout.h	99;"	d
KSTKSIZE	inc/memlayout.h	98;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=1$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	110;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon3
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	103;"	d
MMIOLIM	inc/memlayout.h	102;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	31;"	d	file:
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	219;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	226;"	d	file:
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OptionParser	gradelib.py	/^from optparse import OptionParser$/;"	i
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Thu Sep 6 11:08:36 EDT 2012$/;"	m
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	138;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
Popen	gradelib.py	/^from subprocess import check_call, Popen$/;"	i
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Proghdr::p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
Proghdr::p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
Proghdr::p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
Proghdr::p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
Proghdr::p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
Proghdr::p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
Pseudodesc::pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
Pseudodesc::pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c	inherits:object
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c	inherits:
SCROLLLOCK	kern/console.c	227;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	221;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Secthdr::sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Segdesc::sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
Segdesc::sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
Segdesc::sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
Segdesc::sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
Segdesc::sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
Segdesc::sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stab::n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
Stab::n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
Stab::n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
Stab::n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
Stab::n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TESTS	gradelib.py	/^TESTS = []$/;"	v
TOP	GNUmakefile	/^TOP = .$/;"	m
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
Taskstate::ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
Taskstate::ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
Taskstate::ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c	inherits:Exception
UDWtype	obj/kern/kernel.asm	/^UDWtype$/;"	l
UENVS	inc/memlayout.h	117;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	105;"	d
UPAGES	inc/memlayout.h	115;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	140;"	d
USTACKTOP	inc/memlayout.h	129;"	d
UTEMP	inc/memlayout.h	135;"	d
UTEXT	inc/memlayout.h	132;"	d
UTOP	inc/memlayout.h	124;"	d
UVPT	inc/memlayout.h	113;"	d
UXSTACKTOP	inc/memlayout.h	126;"	d
V	conf/env.mk	/^V = @$/;"	m
WHITESPACE	kern/monitor.c	109;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__anon1::buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon1	file:	access:public
__anon1::rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon1	file:	access:public
__anon1::wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon1	file:	access:public
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner	access:public
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU	access:public
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient	access:public
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:	access:private
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:	access:private
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:	access:private
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:	access:private
__udivdi3	obj/kern/kernel.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivmoddi4	obj/kern/kernel.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__umoddi3	obj/kern/kernel.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
_panic	inc/assert.h	/^void _panic(const char*, int, const char*, ...) __attribute__((noreturn));$/;"	p	signature:(const char*, int, const char*, ...)
_panic	init.s	/^_panic:$/;"	l
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_warn	inc/assert.h	/^void _warn(const char*, int, const char*, ...);$/;"	p	signature:(const char*, int, const char*, ...)
_warn	init.s	/^_warn:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f	access:public
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f	access:public
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match	access:public
b	obj/kern/kernel.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^            base = 8;$/;"	d
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
bootmain	boot/main.c	/^bootmain(void)$/;"	f	signature:(void)
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient	access:public
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f	signature:(void)
breakpoint	inc/x86.h	/^static __inline void breakpoint(void) __attribute__((always_inline));$/;"	p	signature:(void)
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon1	file:	access:public
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f	access:public
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:	signature:(void)
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:	signature:(int c)
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_call	gradelib.py	/^from subprocess import check_call, Popen$/;"	i
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient	access:public
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f	access:public
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon1	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f	signature:(void)
cons_getc	kern/console.h	/^int cons_getc(void);$/;"	p	signature:(void)
cons_init	kern/console.c	/^cons_init(void)$/;"	f	signature:(void)
cons_init	kern/console.h	/^void cons_init(void);$/;"	p	signature:(void)
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:	signature:(int (*proc)(void))
cons_intr	kern/console.c	/^static void cons_intr(int (*proc)(void));$/;"	p	file:	signature:(int (*proc)(void))
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:	signature:(int c)
cons_putc	kern/console.c	/^static void cons_putc(int c);$/;"	p	file:	signature:(int c)
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient	access:public
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	inc/stdio.h	/^int	cprintf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpuid	inc/x86.h	/^static __inline void cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp);$/;"	p	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cputchar	inc/stdio.h	/^void	cputchar(int c);$/;"	p	signature:(int c)
cputchar	kern/console.c	/^cputchar(int c)$/;"	f	signature:(int c)
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d0	obj/kern/kernel.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/kern/kernel.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/kern/kernel.asm	/^  d0 = dd.s.low;$/;"	d
d1	obj/kern/kernel.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/kern/kernel.asm	/^  d1 = dd.s.high;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f	signature:(uintptr_t addr, struct Eipdebuginfo *info)
debuginfo_eip	kern/kdebug.h	/^int debuginfo_eip(uintptr_t eip, struct Eipdebuginfo *info);$/;"	p	signature:(uintptr_t eip, struct Eipdebuginfo *info)
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:	signature:(void)
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eip	obj/kern/kernel.asm	/^        eip = *(ebp + 1);$/;"	d
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f	access:public
entry	kern/entry.S	/^entry:$/;"	l
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
errno	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 60 11 00       	mov    $0x116000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 60 11 f0       	mov    $0xf0116000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 56 00 00 00       	call   f0100094 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <test_backtrace>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	53                   	push   %ebx$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100047	obj/kern/kernel.asm	/^f0100047:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010004a	obj/kern/kernel.asm	/^f010004a:	53                   	push   %ebx$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	68 a0 19 10 f0       	push   $0xf01019a0$/;"	l
f0100050	obj/kern/kernel.asm	/^f0100050:	e8 bc 09 00 00       	call   f0100a11 <cprintf>$/;"	l
f0100055	obj/kern/kernel.asm	/^f0100055:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100058	obj/kern/kernel.asm	/^f0100058:	85 db                	test   %ebx,%ebx$/;"	l
f010005a	obj/kern/kernel.asm	/^f010005a:	7e 11                	jle    f010006d <test_backtrace+0x2d>$/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f0100062	obj/kern/kernel.asm	/^f0100062:	50                   	push   %eax$/;"	l
f0100063	obj/kern/kernel.asm	/^f0100063:	e8 d8 ff ff ff       	call   f0100040 <test_backtrace>$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	83 c4 10             	add    $0x10,%esp$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	eb 11                	jmp    f010007e <test_backtrace+0x3e>$/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100070	obj/kern/kernel.asm	/^f0100070:	6a 00                	push   $0x0$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	6a 00                	push   $0x0$/;"	l
f0100074	obj/kern/kernel.asm	/^f0100074:	6a 00                	push   $0x0$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	e8 a6 07 00 00       	call   f0100821 <mon_backtrace>$/;"	l
f010007b	obj/kern/kernel.asm	/^f010007b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010007e	obj/kern/kernel.asm	/^f010007e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100081	obj/kern/kernel.asm	/^f0100081:	53                   	push   %ebx$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	68 bc 19 10 f0       	push   $0xf01019bc$/;"	l
f0100087	obj/kern/kernel.asm	/^f0100087:	e8 85 09 00 00       	call   f0100a11 <cprintf>$/;"	l
f010008c	obj/kern/kernel.asm	/^f010008c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010008f	obj/kern/kernel.asm	/^f010008f:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100092	obj/kern/kernel.asm	/^f0100092:	c9                   	leave  $/;"	l
f0100093	obj/kern/kernel.asm	/^f0100093:	c3                   	ret    $/;"	l
f0100094	obj/kern/kernel.asm	/^f0100094 <i386_init>:$/;"	l
f0100094	obj/kern/kernel.asm	/^f0100094:	55                   	push   %ebp$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	89 e5                	mov    %esp,%ebp$/;"	l
f0100097	obj/kern/kernel.asm	/^f0100097:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	b8 44 89 11 f0       	mov    $0xf0118944,%eax$/;"	l
f010009f	obj/kern/kernel.asm	/^f010009f:	2d 00 83 11 f0       	sub    $0xf0118300,%eax$/;"	l
f01000a4	obj/kern/kernel.asm	/^f01000a4:	50                   	push   %eax$/;"	l
f01000a5	obj/kern/kernel.asm	/^f01000a5:	6a 00                	push   $0x0$/;"	l
f01000a7	obj/kern/kernel.asm	/^f01000a7:	68 00 83 11 f0       	push   $0xf0118300$/;"	l
f01000ac	obj/kern/kernel.asm	/^f01000ac:	e8 90 14 00 00       	call   f0101541 <memset>$/;"	l
f01000b1	obj/kern/kernel.asm	/^f01000b1:	e8 6d 04 00 00       	call   f0100523 <cons_init>$/;"	l
f01000b6	obj/kern/kernel.asm	/^f01000b6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01000b9	obj/kern/kernel.asm	/^f01000b9:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f01000be	obj/kern/kernel.asm	/^f01000be:	68 d7 19 10 f0       	push   $0xf01019d7$/;"	l
f01000c3	obj/kern/kernel.asm	/^f01000c3:	e8 49 09 00 00       	call   f0100a11 <cprintf>$/;"	l
f01000c8	obj/kern/kernel.asm	/^f01000c8:	c7 04 24 05 00 00 00 	movl   $0x5,(%esp)$/;"	l
f01000cf	obj/kern/kernel.asm	/^f01000cf:	e8 6c ff ff ff       	call   f0100040 <test_backtrace>$/;"	l
f01000d4	obj/kern/kernel.asm	/^f01000d4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000d7	obj/kern/kernel.asm	/^f01000d7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01000da	obj/kern/kernel.asm	/^f01000da:	6a 00                	push   $0x0$/;"	l
f01000dc	obj/kern/kernel.asm	/^f01000dc:	e8 cb 07 00 00       	call   f01008ac <monitor>$/;"	l
f01000e1	obj/kern/kernel.asm	/^f01000e1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000e4	obj/kern/kernel.asm	/^f01000e4:	eb f1                	jmp    f01000d7 <i386_init+0x43>$/;"	l
f01000e6	obj/kern/kernel.asm	/^f01000e6 <_panic>:$/;"	l
f01000e6	obj/kern/kernel.asm	/^f01000e6:	55                   	push   %ebp$/;"	l
f01000e7	obj/kern/kernel.asm	/^f01000e7:	89 e5                	mov    %esp,%ebp$/;"	l
f01000e9	obj/kern/kernel.asm	/^f01000e9:	56                   	push   %esi$/;"	l
f01000ea	obj/kern/kernel.asm	/^f01000ea:	53                   	push   %ebx$/;"	l
f01000eb	obj/kern/kernel.asm	/^f01000eb:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01000ee	obj/kern/kernel.asm	/^f01000ee:	83 3d 40 89 11 f0 00 	cmpl   $0x0,0xf0118940$/;"	l
f01000f5	obj/kern/kernel.asm	/^f01000f5:	75 37                	jne    f010012e <_panic+0x48>$/;"	l
f01000f7	obj/kern/kernel.asm	/^f01000f7:	89 35 40 89 11 f0    	mov    %esi,0xf0118940$/;"	l
f01000fd	obj/kern/kernel.asm	/^f01000fd:	fa                   	cli    $/;"	l
f01000fe	obj/kern/kernel.asm	/^f01000fe:	fc                   	cld    $/;"	l
f01000ff	obj/kern/kernel.asm	/^f01000ff:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f0100102	obj/kern/kernel.asm	/^f0100102:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100105	obj/kern/kernel.asm	/^f0100105:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100108	obj/kern/kernel.asm	/^f0100108:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010010b	obj/kern/kernel.asm	/^f010010b:	68 f2 19 10 f0       	push   $0xf01019f2$/;"	l
f0100110	obj/kern/kernel.asm	/^f0100110:	e8 fc 08 00 00       	call   f0100a11 <cprintf>$/;"	l
f0100115	obj/kern/kernel.asm	/^f0100115:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100118	obj/kern/kernel.asm	/^f0100118:	53                   	push   %ebx$/;"	l
f0100119	obj/kern/kernel.asm	/^f0100119:	56                   	push   %esi$/;"	l
f010011a	obj/kern/kernel.asm	/^f010011a:	e8 cc 08 00 00       	call   f01009eb <vcprintf>$/;"	l
f010011f	obj/kern/kernel.asm	/^f010011f:	c7 04 24 2e 1a 10 f0 	movl   $0xf0101a2e,(%esp)$/;"	l
f0100126	obj/kern/kernel.asm	/^f0100126:	e8 e6 08 00 00       	call   f0100a11 <cprintf>$/;"	l
f010012b	obj/kern/kernel.asm	/^f010012b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100131	obj/kern/kernel.asm	/^f0100131:	6a 00                	push   $0x0$/;"	l
f0100133	obj/kern/kernel.asm	/^f0100133:	e8 74 07 00 00       	call   f01008ac <monitor>$/;"	l
f0100138	obj/kern/kernel.asm	/^f0100138:	83 c4 10             	add    $0x10,%esp$/;"	l
f010013b	obj/kern/kernel.asm	/^f010013b:	eb f1                	jmp    f010012e <_panic+0x48>$/;"	l
f010013d	obj/kern/kernel.asm	/^f010013d <_warn>:$/;"	l
f010013d	obj/kern/kernel.asm	/^f010013d:	55                   	push   %ebp$/;"	l
f010013e	obj/kern/kernel.asm	/^f010013e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100140	obj/kern/kernel.asm	/^f0100140:	53                   	push   %ebx$/;"	l
f0100141	obj/kern/kernel.asm	/^f0100141:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100144	obj/kern/kernel.asm	/^f0100144:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f0100147	obj/kern/kernel.asm	/^f0100147:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010014a	obj/kern/kernel.asm	/^f010014a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010014d	obj/kern/kernel.asm	/^f010014d:	68 0a 1a 10 f0       	push   $0xf0101a0a$/;"	l
f0100152	obj/kern/kernel.asm	/^f0100152:	e8 ba 08 00 00       	call   f0100a11 <cprintf>$/;"	l
f0100157	obj/kern/kernel.asm	/^f0100157:	83 c4 08             	add    $0x8,%esp$/;"	l
f010015a	obj/kern/kernel.asm	/^f010015a:	53                   	push   %ebx$/;"	l
f010015b	obj/kern/kernel.asm	/^f010015b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010015e	obj/kern/kernel.asm	/^f010015e:	e8 88 08 00 00       	call   f01009eb <vcprintf>$/;"	l
f0100163	obj/kern/kernel.asm	/^f0100163:	c7 04 24 2e 1a 10 f0 	movl   $0xf0101a2e,(%esp)$/;"	l
f010016a	obj/kern/kernel.asm	/^f010016a:	e8 a2 08 00 00       	call   f0100a11 <cprintf>$/;"	l
f010016f	obj/kern/kernel.asm	/^f010016f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100172	obj/kern/kernel.asm	/^f0100172:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	c9                   	leave  $/;"	l
f0100176	obj/kern/kernel.asm	/^f0100176:	c3                   	ret    $/;"	l
f0100178	obj/kern/kernel.asm	/^f0100178 <delay>:$/;"	l
f0100178	obj/kern/kernel.asm	/^f0100178:	55                   	push   %ebp$/;"	l
f0100179	obj/kern/kernel.asm	/^f0100179:	89 e5                	mov    %esp,%ebp$/;"	l
f010017b	obj/kern/kernel.asm	/^f010017b:	ba 84 00 00 00       	mov    $0x84,%edx$/;"	l
f0100180	obj/kern/kernel.asm	/^f0100180:	ec                   	in     (%dx),%al$/;"	l
f0100181	obj/kern/kernel.asm	/^f0100181:	ec                   	in     (%dx),%al$/;"	l
f0100182	obj/kern/kernel.asm	/^f0100182:	ec                   	in     (%dx),%al$/;"	l
f0100183	obj/kern/kernel.asm	/^f0100183:	ec                   	in     (%dx),%al$/;"	l
f0100184	obj/kern/kernel.asm	/^f0100184:	c9                   	leave  $/;"	l
f0100185	obj/kern/kernel.asm	/^f0100185:	c3                   	ret    $/;"	l
f0100186	obj/kern/kernel.asm	/^f0100186 <serial_proc_data>:$/;"	l
f0100186	obj/kern/kernel.asm	/^f0100186:	55                   	push   %ebp$/;"	l
f0100187	obj/kern/kernel.asm	/^f0100187:	89 e5                	mov    %esp,%ebp$/;"	l
f0100189	obj/kern/kernel.asm	/^f0100189:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f010018e	obj/kern/kernel.asm	/^f010018e:	ec                   	in     (%dx),%al$/;"	l
f010018f	obj/kern/kernel.asm	/^f010018f:	a8 01                	test   $0x1,%al$/;"	l
f0100191	obj/kern/kernel.asm	/^f0100191:	74 08                	je     f010019b <serial_proc_data+0x15>$/;"	l
f0100193	obj/kern/kernel.asm	/^f0100193:	b2 f8                	mov    $0xf8,%dl$/;"	l
f0100195	obj/kern/kernel.asm	/^f0100195:	ec                   	in     (%dx),%al$/;"	l
f0100196	obj/kern/kernel.asm	/^f0100196:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100199	obj/kern/kernel.asm	/^f0100199:	eb 05                	jmp    f01001a0 <serial_proc_data+0x1a>$/;"	l
f010019b	obj/kern/kernel.asm	/^f010019b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01001a0	obj/kern/kernel.asm	/^f01001a0:	c9                   	leave  $/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1:	c3                   	ret    $/;"	l
f01001a2	obj/kern/kernel.asm	/^f01001a2 <cons_intr>:$/;"	l
f01001a2	obj/kern/kernel.asm	/^f01001a2:	55                   	push   %ebp$/;"	l
f01001a3	obj/kern/kernel.asm	/^f01001a3:	89 e5                	mov    %esp,%ebp$/;"	l
f01001a5	obj/kern/kernel.asm	/^f01001a5:	53                   	push   %ebx$/;"	l
f01001a6	obj/kern/kernel.asm	/^f01001a6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01001a9	obj/kern/kernel.asm	/^f01001a9:	89 c3                	mov    %eax,%ebx$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	eb 29                	jmp    f01001d6 <cons_intr+0x34>$/;"	l
f01001ad	obj/kern/kernel.asm	/^f01001ad:	85 c0                	test   %eax,%eax$/;"	l
f01001af	obj/kern/kernel.asm	/^f01001af:	74 25                	je     f01001d6 <cons_intr+0x34>$/;"	l
f01001b1	obj/kern/kernel.asm	/^f01001b1:	8b 15 24 85 11 f0    	mov    0xf0118524,%edx$/;"	l
f01001b7	obj/kern/kernel.asm	/^f01001b7:	88 82 20 83 11 f0    	mov    %al,-0xfee7ce0(%edx)$/;"	l
f01001bd	obj/kern/kernel.asm	/^f01001bd:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f01001c0	obj/kern/kernel.asm	/^f01001c0:	a3 24 85 11 f0       	mov    %eax,0xf0118524$/;"	l
f01001c5	obj/kern/kernel.asm	/^f01001c5:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f01001ca	obj/kern/kernel.asm	/^f01001ca:	75 0a                	jne    f01001d6 <cons_intr+0x34>$/;"	l
f01001cc	obj/kern/kernel.asm	/^f01001cc:	c7 05 24 85 11 f0 00 	movl   $0x0,0xf0118524$/;"	l
f01001d3	obj/kern/kernel.asm	/^f01001d3:	00 00 00 $/;"	l
f01001d6	obj/kern/kernel.asm	/^f01001d6:	ff d3                	call   *%ebx$/;"	l
f01001d8	obj/kern/kernel.asm	/^f01001d8:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01001db	obj/kern/kernel.asm	/^f01001db:	75 d0                	jne    f01001ad <cons_intr+0xb>$/;"	l
f01001dd	obj/kern/kernel.asm	/^f01001dd:	83 c4 04             	add    $0x4,%esp$/;"	l
f01001e0	obj/kern/kernel.asm	/^f01001e0:	5b                   	pop    %ebx$/;"	l
f01001e1	obj/kern/kernel.asm	/^f01001e1:	c9                   	leave  $/;"	l
f01001e2	obj/kern/kernel.asm	/^f01001e2:	c3                   	ret    $/;"	l
f01001e3	obj/kern/kernel.asm	/^f01001e3 <cons_putc>:$/;"	l
f01001e3	obj/kern/kernel.asm	/^f01001e3:	55                   	push   %ebp$/;"	l
f01001e4	obj/kern/kernel.asm	/^f01001e4:	89 e5                	mov    %esp,%ebp$/;"	l
f01001e6	obj/kern/kernel.asm	/^f01001e6:	57                   	push   %edi$/;"	l
f01001e7	obj/kern/kernel.asm	/^f01001e7:	56                   	push   %esi$/;"	l
f01001e8	obj/kern/kernel.asm	/^f01001e8:	53                   	push   %ebx$/;"	l
f01001e9	obj/kern/kernel.asm	/^f01001e9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01001ec	obj/kern/kernel.asm	/^f01001ec:	89 c6                	mov    %eax,%esi$/;"	l
f01001ee	obj/kern/kernel.asm	/^f01001ee:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01001f3	obj/kern/kernel.asm	/^f01001f3:	ec                   	in     (%dx),%al$/;"	l
f01001f4	obj/kern/kernel.asm	/^f01001f4:	a8 20                	test   $0x20,%al$/;"	l
f01001f6	obj/kern/kernel.asm	/^f01001f6:	75 19                	jne    f0100211 <cons_putc+0x2e>$/;"	l
f01001f8	obj/kern/kernel.asm	/^f01001f8:	bb 00 32 00 00       	mov    $0x3200,%ebx$/;"	l
f01001fd	obj/kern/kernel.asm	/^f01001fd:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
f0100202	obj/kern/kernel.asm	/^f0100202:	e8 71 ff ff ff       	call   f0100178 <delay>$/;"	l
f0100207	obj/kern/kernel.asm	/^f0100207:	89 fa                	mov    %edi,%edx$/;"	l
f0100209	obj/kern/kernel.asm	/^f0100209:	ec                   	in     (%dx),%al$/;"	l
f010020a	obj/kern/kernel.asm	/^f010020a:	a8 20                	test   $0x20,%al$/;"	l
f010020c	obj/kern/kernel.asm	/^f010020c:	75 03                	jne    f0100211 <cons_putc+0x2e>$/;"	l
f010020e	obj/kern/kernel.asm	/^f010020e:	4b                   	dec    %ebx$/;"	l
f010020f	obj/kern/kernel.asm	/^f010020f:	75 f1                	jne    f0100202 <cons_putc+0x1f>$/;"	l
f0100211	obj/kern/kernel.asm	/^f0100211:	89 f7                	mov    %esi,%edi$/;"	l
f0100213	obj/kern/kernel.asm	/^f0100213:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100218	obj/kern/kernel.asm	/^f0100218:	89 f0                	mov    %esi,%eax$/;"	l
f010021a	obj/kern/kernel.asm	/^f010021a:	ee                   	out    %al,(%dx)$/;"	l
f010021b	obj/kern/kernel.asm	/^f010021b:	b2 79                	mov    $0x79,%dl$/;"	l
f010021d	obj/kern/kernel.asm	/^f010021d:	ec                   	in     (%dx),%al$/;"	l
f010021e	obj/kern/kernel.asm	/^f010021e:	84 c0                	test   %al,%al$/;"	l
f0100220	obj/kern/kernel.asm	/^f0100220:	78 1d                	js     f010023f <cons_putc+0x5c>$/;"	l
f0100222	obj/kern/kernel.asm	/^f0100222:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100227	obj/kern/kernel.asm	/^f0100227:	e8 4c ff ff ff       	call   f0100178 <delay>$/;"	l
f010022c	obj/kern/kernel.asm	/^f010022c:	ba 79 03 00 00       	mov    $0x379,%edx$/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	ec                   	in     (%dx),%al$/;"	l
f0100232	obj/kern/kernel.asm	/^f0100232:	84 c0                	test   %al,%al$/;"	l
f0100234	obj/kern/kernel.asm	/^f0100234:	78 09                	js     f010023f <cons_putc+0x5c>$/;"	l
f0100236	obj/kern/kernel.asm	/^f0100236:	43                   	inc    %ebx$/;"	l
f0100237	obj/kern/kernel.asm	/^f0100237:	81 fb 00 32 00 00    	cmp    $0x3200,%ebx$/;"	l
f010023d	obj/kern/kernel.asm	/^f010023d:	75 e8                	jne    f0100227 <cons_putc+0x44>$/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f0100244	obj/kern/kernel.asm	/^f0100244:	89 f8                	mov    %edi,%eax$/;"	l
f0100246	obj/kern/kernel.asm	/^f0100246:	ee                   	out    %al,(%dx)$/;"	l
f0100247	obj/kern/kernel.asm	/^f0100247:	b2 7a                	mov    $0x7a,%dl$/;"	l
f0100249	obj/kern/kernel.asm	/^f0100249:	b0 0d                	mov    $0xd,%al$/;"	l
f010024b	obj/kern/kernel.asm	/^f010024b:	ee                   	out    %al,(%dx)$/;"	l
f010024c	obj/kern/kernel.asm	/^f010024c:	b0 08                	mov    $0x8,%al$/;"	l
f010024e	obj/kern/kernel.asm	/^f010024e:	ee                   	out    %al,(%dx)$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	a1 00 83 11 f0       	mov    0xf0118300,%eax$/;"	l
f0100254	obj/kern/kernel.asm	/^f0100254:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100257	obj/kern/kernel.asm	/^f0100257:	09 c6                	or     %eax,%esi$/;"	l
f0100259	obj/kern/kernel.asm	/^f0100259:	f7 c6 00 ff ff ff    	test   $0xffffff00,%esi$/;"	l
f010025f	obj/kern/kernel.asm	/^f010025f:	75 06                	jne    f0100267 <cons_putc+0x84>$/;"	l
f0100261	obj/kern/kernel.asm	/^f0100261:	81 ce 00 07 00 00    	or     $0x700,%esi$/;"	l
f0100267	obj/kern/kernel.asm	/^f0100267:	89 f0                	mov    %esi,%eax$/;"	l
f0100269	obj/kern/kernel.asm	/^f0100269:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f010026e	obj/kern/kernel.asm	/^f010026e:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100271	obj/kern/kernel.asm	/^f0100271:	74 78                	je     f01002eb <cons_putc+0x108>$/;"	l
f0100273	obj/kern/kernel.asm	/^f0100273:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100276	obj/kern/kernel.asm	/^f0100276:	7f 0b                	jg     f0100283 <cons_putc+0xa0>$/;"	l
f0100278	obj/kern/kernel.asm	/^f0100278:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f010027b	obj/kern/kernel.asm	/^f010027b:	0f 85 9e 00 00 00    	jne    f010031f <cons_putc+0x13c>$/;"	l
f0100281	obj/kern/kernel.asm	/^f0100281:	eb 10                	jmp    f0100293 <cons_putc+0xb0>$/;"	l
f0100283	obj/kern/kernel.asm	/^f0100283:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0100286	obj/kern/kernel.asm	/^f0100286:	74 39                	je     f01002c1 <cons_putc+0xde>$/;"	l
f0100288	obj/kern/kernel.asm	/^f0100288:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f010028b	obj/kern/kernel.asm	/^f010028b:	0f 85 8e 00 00 00    	jne    f010031f <cons_putc+0x13c>$/;"	l
f0100291	obj/kern/kernel.asm	/^f0100291:	eb 36                	jmp    f01002c9 <cons_putc+0xe6>$/;"	l
f0100293	obj/kern/kernel.asm	/^f0100293:	66 a1 04 83 11 f0    	mov    0xf0118304,%ax$/;"	l
f0100299	obj/kern/kernel.asm	/^f0100299:	66 85 c0             	test   %ax,%ax$/;"	l
f010029c	obj/kern/kernel.asm	/^f010029c:	0f 84 e0 00 00 00    	je     f0100382 <cons_putc+0x19f>$/;"	l
f01002a2	obj/kern/kernel.asm	/^f01002a2:	48                   	dec    %eax$/;"	l
f01002a3	obj/kern/kernel.asm	/^f01002a3:	66 a3 04 83 11 f0    	mov    %ax,0xf0118304$/;"	l
f01002a9	obj/kern/kernel.asm	/^f01002a9:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01002ac	obj/kern/kernel.asm	/^f01002ac:	81 e6 00 ff ff ff    	and    $0xffffff00,%esi$/;"	l
f01002b2	obj/kern/kernel.asm	/^f01002b2:	83 ce 20             	or     $0x20,%esi$/;"	l
f01002b5	obj/kern/kernel.asm	/^f01002b5:	8b 15 08 83 11 f0    	mov    0xf0118308,%edx$/;"	l
f01002bb	obj/kern/kernel.asm	/^f01002bb:	66 89 34 42          	mov    %si,(%edx,%eax,2)$/;"	l
f01002bf	obj/kern/kernel.asm	/^f01002bf:	eb 78                	jmp    f0100339 <cons_putc+0x156>$/;"	l
f01002c1	obj/kern/kernel.asm	/^f01002c1:	66 83 05 04 83 11 f0 	addw   $0x50,0xf0118304$/;"	l
f01002c8	obj/kern/kernel.asm	/^f01002c8:	50 $/;"	l
f01002c9	obj/kern/kernel.asm	/^f01002c9:	66 8b 0d 04 83 11 f0 	mov    0xf0118304,%cx$/;"	l
f01002d0	obj/kern/kernel.asm	/^f01002d0:	bb 50 00 00 00       	mov    $0x50,%ebx$/;"	l
f01002d5	obj/kern/kernel.asm	/^f01002d5:	89 c8                	mov    %ecx,%eax$/;"	l
f01002d7	obj/kern/kernel.asm	/^f01002d7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01002dc	obj/kern/kernel.asm	/^f01002dc:	66 f7 f3             	div    %bx$/;"	l
f01002df	obj/kern/kernel.asm	/^f01002df:	66 29 d1             	sub    %dx,%cx$/;"	l
f01002e2	obj/kern/kernel.asm	/^f01002e2:	66 89 0d 04 83 11 f0 	mov    %cx,0xf0118304$/;"	l
f01002e9	obj/kern/kernel.asm	/^f01002e9:	eb 4e                	jmp    f0100339 <cons_putc+0x156>$/;"	l
f01002eb	obj/kern/kernel.asm	/^f01002eb:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	e8 ee fe ff ff       	call   f01001e3 <cons_putc>$/;"	l
f01002f5	obj/kern/kernel.asm	/^f01002f5:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01002fa	obj/kern/kernel.asm	/^f01002fa:	e8 e4 fe ff ff       	call   f01001e3 <cons_putc>$/;"	l
f01002ff	obj/kern/kernel.asm	/^f01002ff:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100304	obj/kern/kernel.asm	/^f0100304:	e8 da fe ff ff       	call   f01001e3 <cons_putc>$/;"	l
f0100309	obj/kern/kernel.asm	/^f0100309:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010030e	obj/kern/kernel.asm	/^f010030e:	e8 d0 fe ff ff       	call   f01001e3 <cons_putc>$/;"	l
f0100313	obj/kern/kernel.asm	/^f0100313:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100318	obj/kern/kernel.asm	/^f0100318:	e8 c6 fe ff ff       	call   f01001e3 <cons_putc>$/;"	l
f010031d	obj/kern/kernel.asm	/^f010031d:	eb 1a                	jmp    f0100339 <cons_putc+0x156>$/;"	l
f010031f	obj/kern/kernel.asm	/^f010031f:	66 a1 04 83 11 f0    	mov    0xf0118304,%ax$/;"	l
f0100325	obj/kern/kernel.asm	/^f0100325:	0f b7 c8             	movzwl %ax,%ecx$/;"	l
f0100328	obj/kern/kernel.asm	/^f0100328:	8b 15 08 83 11 f0    	mov    0xf0118308,%edx$/;"	l
f010032e	obj/kern/kernel.asm	/^f010032e:	66 89 34 4a          	mov    %si,(%edx,%ecx,2)$/;"	l
f0100332	obj/kern/kernel.asm	/^f0100332:	40                   	inc    %eax$/;"	l
f0100333	obj/kern/kernel.asm	/^f0100333:	66 a3 04 83 11 f0    	mov    %ax,0xf0118304$/;"	l
f0100339	obj/kern/kernel.asm	/^f0100339:	66 81 3d 04 83 11 f0 	cmpw   $0x7cf,0xf0118304$/;"	l
f0100340	obj/kern/kernel.asm	/^f0100340:	cf 07 $/;"	l
f0100342	obj/kern/kernel.asm	/^f0100342:	76 3e                	jbe    f0100382 <cons_putc+0x19f>$/;"	l
f0100344	obj/kern/kernel.asm	/^f0100344:	a1 08 83 11 f0       	mov    0xf0118308,%eax$/;"	l
f0100349	obj/kern/kernel.asm	/^f0100349:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010034c	obj/kern/kernel.asm	/^f010034c:	68 00 0f 00 00       	push   $0xf00$/;"	l
f0100351	obj/kern/kernel.asm	/^f0100351:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f0100357	obj/kern/kernel.asm	/^f0100357:	52                   	push   %edx$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	50                   	push   %eax$/;"	l
f0100359	obj/kern/kernel.asm	/^f0100359:	e8 2d 12 00 00       	call   f010158b <memmove>$/;"	l
f010035e	obj/kern/kernel.asm	/^f010035e:	8b 15 08 83 11 f0    	mov    0xf0118308,%edx$/;"	l
f0100364	obj/kern/kernel.asm	/^f0100364:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100367	obj/kern/kernel.asm	/^f0100367:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f010036c	obj/kern/kernel.asm	/^f010036c:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f0100372	obj/kern/kernel.asm	/^f0100372:	40                   	inc    %eax$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f0100378	obj/kern/kernel.asm	/^f0100378:	75 f2                	jne    f010036c <cons_putc+0x189>$/;"	l
f010037a	obj/kern/kernel.asm	/^f010037a:	66 83 2d 04 83 11 f0 	subw   $0x50,0xf0118304$/;"	l
f0100381	obj/kern/kernel.asm	/^f0100381:	50 $/;"	l
f0100382	obj/kern/kernel.asm	/^f0100382:	8b 0d 0c 83 11 f0    	mov    0xf011830c,%ecx$/;"	l
f0100388	obj/kern/kernel.asm	/^f0100388:	b0 0e                	mov    $0xe,%al$/;"	l
f010038a	obj/kern/kernel.asm	/^f010038a:	89 ca                	mov    %ecx,%edx$/;"	l
f010038c	obj/kern/kernel.asm	/^f010038c:	ee                   	out    %al,(%dx)$/;"	l
f010038d	obj/kern/kernel.asm	/^f010038d:	66 8b 35 04 83 11 f0 	mov    0xf0118304,%si$/;"	l
f0100394	obj/kern/kernel.asm	/^f0100394:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f0100397	obj/kern/kernel.asm	/^f0100397:	89 f0                	mov    %esi,%eax$/;"	l
f0100399	obj/kern/kernel.asm	/^f0100399:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f010039d	obj/kern/kernel.asm	/^f010039d:	89 da                	mov    %ebx,%edx$/;"	l
f010039f	obj/kern/kernel.asm	/^f010039f:	ee                   	out    %al,(%dx)$/;"	l
f01003a0	obj/kern/kernel.asm	/^f01003a0:	b0 0f                	mov    $0xf,%al$/;"	l
f01003a2	obj/kern/kernel.asm	/^f01003a2:	89 ca                	mov    %ecx,%edx$/;"	l
f01003a4	obj/kern/kernel.asm	/^f01003a4:	ee                   	out    %al,(%dx)$/;"	l
f01003a5	obj/kern/kernel.asm	/^f01003a5:	89 f0                	mov    %esi,%eax$/;"	l
f01003a7	obj/kern/kernel.asm	/^f01003a7:	89 da                	mov    %ebx,%edx$/;"	l
f01003a9	obj/kern/kernel.asm	/^f01003a9:	ee                   	out    %al,(%dx)$/;"	l
f01003aa	obj/kern/kernel.asm	/^f01003aa:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01003ad	obj/kern/kernel.asm	/^f01003ad:	5b                   	pop    %ebx$/;"	l
f01003ae	obj/kern/kernel.asm	/^f01003ae:	5e                   	pop    %esi$/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af:	5f                   	pop    %edi$/;"	l
f01003b0	obj/kern/kernel.asm	/^f01003b0:	c9                   	leave  $/;"	l
f01003b1	obj/kern/kernel.asm	/^f01003b1:	c3                   	ret    $/;"	l
f01003b2	obj/kern/kernel.asm	/^f01003b2 <kbd_proc_data>:$/;"	l
f01003b2	obj/kern/kernel.asm	/^f01003b2:	55                   	push   %ebp$/;"	l
f01003b3	obj/kern/kernel.asm	/^f01003b3:	89 e5                	mov    %esp,%ebp$/;"	l
f01003b5	obj/kern/kernel.asm	/^f01003b5:	53                   	push   %ebx$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01003b9	obj/kern/kernel.asm	/^f01003b9:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f01003be	obj/kern/kernel.asm	/^f01003be:	ec                   	in     (%dx),%al$/;"	l
f01003bf	obj/kern/kernel.asm	/^f01003bf:	a8 01                	test   $0x1,%al$/;"	l
f01003c1	obj/kern/kernel.asm	/^f01003c1:	0f 84 dc 00 00 00    	je     f01004a3 <kbd_proc_data+0xf1>$/;"	l
f01003c7	obj/kern/kernel.asm	/^f01003c7:	b2 60                	mov    $0x60,%dl$/;"	l
f01003c9	obj/kern/kernel.asm	/^f01003c9:	ec                   	in     (%dx),%al$/;"	l
f01003ca	obj/kern/kernel.asm	/^f01003ca:	88 c2                	mov    %al,%dl$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	3c e0                	cmp    $0xe0,%al$/;"	l
f01003ce	obj/kern/kernel.asm	/^f01003ce:	75 11                	jne    f01003e1 <kbd_proc_data+0x2f>$/;"	l
f01003d0	obj/kern/kernel.asm	/^f01003d0:	83 0d 28 85 11 f0 40 	orl    $0x40,0xf0118528$/;"	l
f01003d7	obj/kern/kernel.asm	/^f01003d7:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01003dc	obj/kern/kernel.asm	/^f01003dc:	e9 c7 00 00 00       	jmp    f01004a8 <kbd_proc_data+0xf6>$/;"	l
f01003e1	obj/kern/kernel.asm	/^f01003e1:	84 c0                	test   %al,%al$/;"	l
f01003e3	obj/kern/kernel.asm	/^f01003e3:	79 33                	jns    f0100418 <kbd_proc_data+0x66>$/;"	l
f01003e5	obj/kern/kernel.asm	/^f01003e5:	8b 0d 28 85 11 f0    	mov    0xf0118528,%ecx$/;"	l
f01003eb	obj/kern/kernel.asm	/^f01003eb:	f6 c1 40             	test   $0x40,%cl$/;"	l
f01003ee	obj/kern/kernel.asm	/^f01003ee:	75 05                	jne    f01003f5 <kbd_proc_data+0x43>$/;"	l
f01003f0	obj/kern/kernel.asm	/^f01003f0:	88 c2                	mov    %al,%dl$/;"	l
f01003f2	obj/kern/kernel.asm	/^f01003f2:	83 e2 7f             	and    $0x7f,%edx$/;"	l
f01003f5	obj/kern/kernel.asm	/^f01003f5:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01003f8	obj/kern/kernel.asm	/^f01003f8:	8a 82 60 1a 10 f0    	mov    -0xfefe5a0(%edx),%al$/;"	l
f01003fe	obj/kern/kernel.asm	/^f01003fe:	83 c8 40             	or     $0x40,%eax$/;"	l
f0100401	obj/kern/kernel.asm	/^f0100401:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100404	obj/kern/kernel.asm	/^f0100404:	f7 d0                	not    %eax$/;"	l
f0100406	obj/kern/kernel.asm	/^f0100406:	21 c1                	and    %eax,%ecx$/;"	l
f0100408	obj/kern/kernel.asm	/^f0100408:	89 0d 28 85 11 f0    	mov    %ecx,0xf0118528$/;"	l
f010040e	obj/kern/kernel.asm	/^f010040e:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100413	obj/kern/kernel.asm	/^f0100413:	e9 90 00 00 00       	jmp    f01004a8 <kbd_proc_data+0xf6>$/;"	l
f0100418	obj/kern/kernel.asm	/^f0100418:	8b 0d 28 85 11 f0    	mov    0xf0118528,%ecx$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	f6 c1 40             	test   $0x40,%cl$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	74 0e                	je     f0100431 <kbd_proc_data+0x7f>$/;"	l
f0100423	obj/kern/kernel.asm	/^f0100423:	88 c2                	mov    %al,%dl$/;"	l
f0100425	obj/kern/kernel.asm	/^f0100425:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
f0100428	obj/kern/kernel.asm	/^f0100428:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f010042b	obj/kern/kernel.asm	/^f010042b:	89 0d 28 85 11 f0    	mov    %ecx,0xf0118528$/;"	l
f0100431	obj/kern/kernel.asm	/^f0100431:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100434	obj/kern/kernel.asm	/^f0100434:	0f b6 82 60 1a 10 f0 	movzbl -0xfefe5a0(%edx),%eax$/;"	l
f010043b	obj/kern/kernel.asm	/^f010043b:	0b 05 28 85 11 f0    	or     0xf0118528,%eax$/;"	l
f0100441	obj/kern/kernel.asm	/^f0100441:	0f b6 8a 60 1b 10 f0 	movzbl -0xfefe4a0(%edx),%ecx$/;"	l
f0100448	obj/kern/kernel.asm	/^f0100448:	31 c8                	xor    %ecx,%eax$/;"	l
f010044a	obj/kern/kernel.asm	/^f010044a:	a3 28 85 11 f0       	mov    %eax,0xf0118528$/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	89 c1                	mov    %eax,%ecx$/;"	l
f0100451	obj/kern/kernel.asm	/^f0100451:	83 e1 03             	and    $0x3,%ecx$/;"	l
f0100454	obj/kern/kernel.asm	/^f0100454:	8b 0c 8d 60 1c 10 f0 	mov    -0xfefe3a0(,%ecx,4),%ecx$/;"	l
f010045b	obj/kern/kernel.asm	/^f010045b:	0f b6 1c 11          	movzbl (%ecx,%edx,1),%ebx$/;"	l
f010045f	obj/kern/kernel.asm	/^f010045f:	a8 08                	test   $0x8,%al$/;"	l
f0100461	obj/kern/kernel.asm	/^f0100461:	74 18                	je     f010047b <kbd_proc_data+0xc9>$/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	8d 53 9f             	lea    -0x61(%ebx),%edx$/;"	l
f0100466	obj/kern/kernel.asm	/^f0100466:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469:	77 05                	ja     f0100470 <kbd_proc_data+0xbe>$/;"	l
f010046b	obj/kern/kernel.asm	/^f010046b:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	eb 0b                	jmp    f010047b <kbd_proc_data+0xc9>$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	8d 53 bf             	lea    -0x41(%ebx),%edx$/;"	l
f0100473	obj/kern/kernel.asm	/^f0100473:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f0100476	obj/kern/kernel.asm	/^f0100476:	77 03                	ja     f010047b <kbd_proc_data+0xc9>$/;"	l
f0100478	obj/kern/kernel.asm	/^f0100478:	83 c3 20             	add    $0x20,%ebx$/;"	l
f010047b	obj/kern/kernel.asm	/^f010047b:	f7 d0                	not    %eax$/;"	l
f010047d	obj/kern/kernel.asm	/^f010047d:	a8 06                	test   $0x6,%al$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	75 27                	jne    f01004a8 <kbd_proc_data+0xf6>$/;"	l
f0100481	obj/kern/kernel.asm	/^f0100481:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100487	obj/kern/kernel.asm	/^f0100487:	75 1f                	jne    f01004a8 <kbd_proc_data+0xf6>$/;"	l
f0100489	obj/kern/kernel.asm	/^f0100489:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010048c	obj/kern/kernel.asm	/^f010048c:	68 24 1a 10 f0       	push   $0xf0101a24$/;"	l
f0100491	obj/kern/kernel.asm	/^f0100491:	e8 7b 05 00 00       	call   f0100a11 <cprintf>$/;"	l
f0100496	obj/kern/kernel.asm	/^f0100496:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f010049b	obj/kern/kernel.asm	/^f010049b:	b0 03                	mov    $0x3,%al$/;"	l
f010049d	obj/kern/kernel.asm	/^f010049d:	ee                   	out    %al,(%dx)$/;"	l
f010049e	obj/kern/kernel.asm	/^f010049e:	83 c4 10             	add    $0x10,%esp$/;"	l
f01004a1	obj/kern/kernel.asm	/^f01004a1:	eb 05                	jmp    f01004a8 <kbd_proc_data+0xf6>$/;"	l
f01004a3	obj/kern/kernel.asm	/^f01004a3:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f01004a8	obj/kern/kernel.asm	/^f01004a8:	89 d8                	mov    %ebx,%eax$/;"	l
f01004aa	obj/kern/kernel.asm	/^f01004aa:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01004ad	obj/kern/kernel.asm	/^f01004ad:	c9                   	leave  $/;"	l
f01004ae	obj/kern/kernel.asm	/^f01004ae:	c3                   	ret    $/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af <serial_intr>:$/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af:	55                   	push   %ebp$/;"	l
f01004b0	obj/kern/kernel.asm	/^f01004b0:	89 e5                	mov    %esp,%ebp$/;"	l
f01004b2	obj/kern/kernel.asm	/^f01004b2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01004b5	obj/kern/kernel.asm	/^f01004b5:	80 3d 10 83 11 f0 00 	cmpb   $0x0,0xf0118310$/;"	l
f01004bc	obj/kern/kernel.asm	/^f01004bc:	74 0a                	je     f01004c8 <serial_intr+0x19>$/;"	l
f01004be	obj/kern/kernel.asm	/^f01004be:	b8 86 01 10 f0       	mov    $0xf0100186,%eax$/;"	l
f01004c3	obj/kern/kernel.asm	/^f01004c3:	e8 da fc ff ff       	call   f01001a2 <cons_intr>$/;"	l
f01004c8	obj/kern/kernel.asm	/^f01004c8:	c9                   	leave  $/;"	l
f01004c9	obj/kern/kernel.asm	/^f01004c9:	c3                   	ret    $/;"	l
f01004ca	obj/kern/kernel.asm	/^f01004ca <kbd_intr>:$/;"	l
f01004ca	obj/kern/kernel.asm	/^f01004ca:	55                   	push   %ebp$/;"	l
f01004cb	obj/kern/kernel.asm	/^f01004cb:	89 e5                	mov    %esp,%ebp$/;"	l
f01004cd	obj/kern/kernel.asm	/^f01004cd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01004d0	obj/kern/kernel.asm	/^f01004d0:	b8 b2 03 10 f0       	mov    $0xf01003b2,%eax$/;"	l
f01004d5	obj/kern/kernel.asm	/^f01004d5:	e8 c8 fc ff ff       	call   f01001a2 <cons_intr>$/;"	l
f01004da	obj/kern/kernel.asm	/^f01004da:	c9                   	leave  $/;"	l
f01004db	obj/kern/kernel.asm	/^f01004db:	c3                   	ret    $/;"	l
f01004dc	obj/kern/kernel.asm	/^f01004dc <cons_getc>:$/;"	l
f01004dc	obj/kern/kernel.asm	/^f01004dc:	55                   	push   %ebp$/;"	l
f01004dd	obj/kern/kernel.asm	/^f01004dd:	89 e5                	mov    %esp,%ebp$/;"	l
f01004df	obj/kern/kernel.asm	/^f01004df:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01004e2	obj/kern/kernel.asm	/^f01004e2:	e8 c8 ff ff ff       	call   f01004af <serial_intr>$/;"	l
f01004e7	obj/kern/kernel.asm	/^f01004e7:	e8 de ff ff ff       	call   f01004ca <kbd_intr>$/;"	l
f01004ec	obj/kern/kernel.asm	/^f01004ec:	8b 15 20 85 11 f0    	mov    0xf0118520,%edx$/;"	l
f01004f2	obj/kern/kernel.asm	/^f01004f2:	3b 15 24 85 11 f0    	cmp    0xf0118524,%edx$/;"	l
f01004f8	obj/kern/kernel.asm	/^f01004f8:	74 22                	je     f010051c <cons_getc+0x40>$/;"	l
f01004fa	obj/kern/kernel.asm	/^f01004fa:	0f b6 82 20 83 11 f0 	movzbl -0xfee7ce0(%edx),%eax$/;"	l
f0100501	obj/kern/kernel.asm	/^f0100501:	42                   	inc    %edx$/;"	l
f0100502	obj/kern/kernel.asm	/^f0100502:	89 15 20 85 11 f0    	mov    %edx,0xf0118520$/;"	l
f0100508	obj/kern/kernel.asm	/^f0100508:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f010050e	obj/kern/kernel.asm	/^f010050e:	75 11                	jne    f0100521 <cons_getc+0x45>$/;"	l
f0100510	obj/kern/kernel.asm	/^f0100510:	c7 05 20 85 11 f0 00 	movl   $0x0,0xf0118520$/;"	l
f0100517	obj/kern/kernel.asm	/^f0100517:	00 00 00 $/;"	l
f010051a	obj/kern/kernel.asm	/^f010051a:	eb 05                	jmp    f0100521 <cons_getc+0x45>$/;"	l
f010051c	obj/kern/kernel.asm	/^f010051c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100521	obj/kern/kernel.asm	/^f0100521:	c9                   	leave  $/;"	l
f0100522	obj/kern/kernel.asm	/^f0100522:	c3                   	ret    $/;"	l
f0100523	obj/kern/kernel.asm	/^f0100523 <cons_init>:$/;"	l
f0100523	obj/kern/kernel.asm	/^f0100523:	55                   	push   %ebp$/;"	l
f0100524	obj/kern/kernel.asm	/^f0100524:	89 e5                	mov    %esp,%ebp$/;"	l
f0100526	obj/kern/kernel.asm	/^f0100526:	57                   	push   %edi$/;"	l
f0100527	obj/kern/kernel.asm	/^f0100527:	56                   	push   %esi$/;"	l
f0100528	obj/kern/kernel.asm	/^f0100528:	53                   	push   %ebx$/;"	l
f0100529	obj/kern/kernel.asm	/^f0100529:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010052c	obj/kern/kernel.asm	/^f010052c:	66 8b 15 00 80 0b f0 	mov    0xf00b8000,%dx$/;"	l
f0100533	obj/kern/kernel.asm	/^f0100533:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f010053a	obj/kern/kernel.asm	/^f010053a:	5a a5 $/;"	l
f010053c	obj/kern/kernel.asm	/^f010053c:	66 a1 00 80 0b f0    	mov    0xf00b8000,%ax$/;"	l
f0100542	obj/kern/kernel.asm	/^f0100542:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f0100546	obj/kern/kernel.asm	/^f0100546:	74 11                	je     f0100559 <cons_init+0x36>$/;"	l
f0100548	obj/kern/kernel.asm	/^f0100548:	c7 05 0c 83 11 f0 b4 	movl   $0x3b4,0xf011830c$/;"	l
f010054f	obj/kern/kernel.asm	/^f010054f:	03 00 00 $/;"	l
f0100552	obj/kern/kernel.asm	/^f0100552:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f0100557	obj/kern/kernel.asm	/^f0100557:	eb 16                	jmp    f010056f <cons_init+0x4c>$/;"	l
f0100559	obj/kern/kernel.asm	/^f0100559:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f0100560	obj/kern/kernel.asm	/^f0100560:	c7 05 0c 83 11 f0 d4 	movl   $0x3d4,0xf011830c$/;"	l
f0100567	obj/kern/kernel.asm	/^f0100567:	03 00 00 $/;"	l
f010056a	obj/kern/kernel.asm	/^f010056a:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f010056f	obj/kern/kernel.asm	/^f010056f:	8b 0d 0c 83 11 f0    	mov    0xf011830c,%ecx$/;"	l
f0100575	obj/kern/kernel.asm	/^f0100575:	b0 0e                	mov    $0xe,%al$/;"	l
f0100577	obj/kern/kernel.asm	/^f0100577:	89 ca                	mov    %ecx,%edx$/;"	l
f0100579	obj/kern/kernel.asm	/^f0100579:	ee                   	out    %al,(%dx)$/;"	l
f010057a	obj/kern/kernel.asm	/^f010057a:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f010057d	obj/kern/kernel.asm	/^f010057d:	89 da                	mov    %ebx,%edx$/;"	l
f010057f	obj/kern/kernel.asm	/^f010057f:	ec                   	in     (%dx),%al$/;"	l
f0100580	obj/kern/kernel.asm	/^f0100580:	0f b6 f8             	movzbl %al,%edi$/;"	l
f0100583	obj/kern/kernel.asm	/^f0100583:	c1 e7 08             	shl    $0x8,%edi$/;"	l
f0100586	obj/kern/kernel.asm	/^f0100586:	b0 0f                	mov    $0xf,%al$/;"	l
f0100588	obj/kern/kernel.asm	/^f0100588:	89 ca                	mov    %ecx,%edx$/;"	l
f010058a	obj/kern/kernel.asm	/^f010058a:	ee                   	out    %al,(%dx)$/;"	l
f010058b	obj/kern/kernel.asm	/^f010058b:	89 da                	mov    %ebx,%edx$/;"	l
f010058d	obj/kern/kernel.asm	/^f010058d:	ec                   	in     (%dx),%al$/;"	l
f010058e	obj/kern/kernel.asm	/^f010058e:	89 35 08 83 11 f0    	mov    %esi,0xf0118308$/;"	l
f0100594	obj/kern/kernel.asm	/^f0100594:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f0100597	obj/kern/kernel.asm	/^f0100597:	09 df                	or     %ebx,%edi$/;"	l
f0100599	obj/kern/kernel.asm	/^f0100599:	66 89 3d 04 83 11 f0 	mov    %di,0xf0118304$/;"	l
f01005a0	obj/kern/kernel.asm	/^f01005a0:	bb fa 03 00 00       	mov    $0x3fa,%ebx$/;"	l
f01005a5	obj/kern/kernel.asm	/^f01005a5:	b0 00                	mov    $0x0,%al$/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	89 da                	mov    %ebx,%edx$/;"	l
f01005a9	obj/kern/kernel.asm	/^f01005a9:	ee                   	out    %al,(%dx)$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	b2 fb                	mov    $0xfb,%dl$/;"	l
f01005ac	obj/kern/kernel.asm	/^f01005ac:	b0 80                	mov    $0x80,%al$/;"	l
f01005ae	obj/kern/kernel.asm	/^f01005ae:	ee                   	out    %al,(%dx)$/;"	l
f01005af	obj/kern/kernel.asm	/^f01005af:	b9 f8 03 00 00       	mov    $0x3f8,%ecx$/;"	l
f01005b4	obj/kern/kernel.asm	/^f01005b4:	b0 0c                	mov    $0xc,%al$/;"	l
f01005b6	obj/kern/kernel.asm	/^f01005b6:	89 ca                	mov    %ecx,%edx$/;"	l
f01005b8	obj/kern/kernel.asm	/^f01005b8:	ee                   	out    %al,(%dx)$/;"	l
f01005b9	obj/kern/kernel.asm	/^f01005b9:	b2 f9                	mov    $0xf9,%dl$/;"	l
f01005bb	obj/kern/kernel.asm	/^f01005bb:	b0 00                	mov    $0x0,%al$/;"	l
f01005bd	obj/kern/kernel.asm	/^f01005bd:	ee                   	out    %al,(%dx)$/;"	l
f01005be	obj/kern/kernel.asm	/^f01005be:	b2 fb                	mov    $0xfb,%dl$/;"	l
f01005c0	obj/kern/kernel.asm	/^f01005c0:	b0 03                	mov    $0x3,%al$/;"	l
f01005c2	obj/kern/kernel.asm	/^f01005c2:	ee                   	out    %al,(%dx)$/;"	l
f01005c3	obj/kern/kernel.asm	/^f01005c3:	b2 fc                	mov    $0xfc,%dl$/;"	l
f01005c5	obj/kern/kernel.asm	/^f01005c5:	b0 00                	mov    $0x0,%al$/;"	l
f01005c7	obj/kern/kernel.asm	/^f01005c7:	ee                   	out    %al,(%dx)$/;"	l
f01005c8	obj/kern/kernel.asm	/^f01005c8:	b2 f9                	mov    $0xf9,%dl$/;"	l
f01005ca	obj/kern/kernel.asm	/^f01005ca:	b0 01                	mov    $0x1,%al$/;"	l
f01005cc	obj/kern/kernel.asm	/^f01005cc:	ee                   	out    %al,(%dx)$/;"	l
f01005cd	obj/kern/kernel.asm	/^f01005cd:	b2 fd                	mov    $0xfd,%dl$/;"	l
f01005cf	obj/kern/kernel.asm	/^f01005cf:	ec                   	in     (%dx),%al$/;"	l
f01005d0	obj/kern/kernel.asm	/^f01005d0:	3c ff                	cmp    $0xff,%al$/;"	l
f01005d2	obj/kern/kernel.asm	/^f01005d2:	0f 95 45 e7          	setne  -0x19(%ebp)$/;"	l
f01005d6	obj/kern/kernel.asm	/^f01005d6:	8a 45 e7             	mov    -0x19(%ebp),%al$/;"	l
f01005d9	obj/kern/kernel.asm	/^f01005d9:	a2 10 83 11 f0       	mov    %al,0xf0118310$/;"	l
f01005de	obj/kern/kernel.asm	/^f01005de:	89 da                	mov    %ebx,%edx$/;"	l
f01005e0	obj/kern/kernel.asm	/^f01005e0:	ec                   	in     (%dx),%al$/;"	l
f01005e1	obj/kern/kernel.asm	/^f01005e1:	89 ca                	mov    %ecx,%edx$/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	ec                   	in     (%dx),%al$/;"	l
f01005e4	obj/kern/kernel.asm	/^f01005e4:	80 7d e7 00          	cmpb   $0x0,-0x19(%ebp)$/;"	l
f01005e8	obj/kern/kernel.asm	/^f01005e8:	75 10                	jne    f01005fa <cons_init+0xd7>$/;"	l
f01005ea	obj/kern/kernel.asm	/^f01005ea:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01005ed	obj/kern/kernel.asm	/^f01005ed:	68 30 1a 10 f0       	push   $0xf0101a30$/;"	l
f01005f2	obj/kern/kernel.asm	/^f01005f2:	e8 1a 04 00 00       	call   f0100a11 <cprintf>$/;"	l
f01005f7	obj/kern/kernel.asm	/^f01005f7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01005fa	obj/kern/kernel.asm	/^f01005fa:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01005fd	obj/kern/kernel.asm	/^f01005fd:	5b                   	pop    %ebx$/;"	l
f01005fe	obj/kern/kernel.asm	/^f01005fe:	5e                   	pop    %esi$/;"	l
f01005ff	obj/kern/kernel.asm	/^f01005ff:	5f                   	pop    %edi$/;"	l
f0100600	obj/kern/kernel.asm	/^f0100600:	c9                   	leave  $/;"	l
f0100601	obj/kern/kernel.asm	/^f0100601:	c3                   	ret    $/;"	l
f0100602	obj/kern/kernel.asm	/^f0100602 <cputchar>:$/;"	l
f0100602	obj/kern/kernel.asm	/^f0100602:	55                   	push   %ebp$/;"	l
f0100603	obj/kern/kernel.asm	/^f0100603:	89 e5                	mov    %esp,%ebp$/;"	l
f0100605	obj/kern/kernel.asm	/^f0100605:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100608	obj/kern/kernel.asm	/^f0100608:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010060b	obj/kern/kernel.asm	/^f010060b:	e8 d3 fb ff ff       	call   f01001e3 <cons_putc>$/;"	l
f0100610	obj/kern/kernel.asm	/^f0100610:	c9                   	leave  $/;"	l
f0100611	obj/kern/kernel.asm	/^f0100611:	c3                   	ret    $/;"	l
f0100612	obj/kern/kernel.asm	/^f0100612 <getchar>:$/;"	l
f0100612	obj/kern/kernel.asm	/^f0100612:	55                   	push   %ebp$/;"	l
f0100613	obj/kern/kernel.asm	/^f0100613:	89 e5                	mov    %esp,%ebp$/;"	l
f0100615	obj/kern/kernel.asm	/^f0100615:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100618	obj/kern/kernel.asm	/^f0100618:	e8 bf fe ff ff       	call   f01004dc <cons_getc>$/;"	l
f010061d	obj/kern/kernel.asm	/^f010061d:	85 c0                	test   %eax,%eax$/;"	l
f010061f	obj/kern/kernel.asm	/^f010061f:	74 f7                	je     f0100618 <getchar+0x6>$/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	c9                   	leave  $/;"	l
f0100622	obj/kern/kernel.asm	/^f0100622:	c3                   	ret    $/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623 <iscons>:$/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	55                   	push   %ebp$/;"	l
f0100624	obj/kern/kernel.asm	/^f0100624:	89 e5                	mov    %esp,%ebp$/;"	l
f0100626	obj/kern/kernel.asm	/^f0100626:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010062b	obj/kern/kernel.asm	/^f010062b:	c9                   	leave  $/;"	l
f010062c	obj/kern/kernel.asm	/^f010062c:	c3                   	ret    $/;"	l
f010062d	obj/kern/kernel.asm	/^f010062d:	00 00                	add    %al,(%eax)$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630 <mon_kerninfo>:$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	55                   	push   %ebp$/;"	l
f0100631	obj/kern/kernel.asm	/^f0100631:	89 e5                	mov    %esp,%ebp$/;"	l
f0100633	obj/kern/kernel.asm	/^f0100633:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100636	obj/kern/kernel.asm	/^f0100636:	68 70 1c 10 f0       	push   $0xf0101c70$/;"	l
f010063b	obj/kern/kernel.asm	/^f010063b:	e8 d1 03 00 00       	call   f0100a11 <cprintf>$/;"	l
f0100640	obj/kern/kernel.asm	/^f0100640:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100643	obj/kern/kernel.asm	/^f0100643:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f0100648	obj/kern/kernel.asm	/^f0100648:	68 68 1d 10 f0       	push   $0xf0101d68$/;"	l
f010064d	obj/kern/kernel.asm	/^f010064d:	e8 bf 03 00 00       	call   f0100a11 <cprintf>$/;"	l
f0100652	obj/kern/kernel.asm	/^f0100652:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100655	obj/kern/kernel.asm	/^f0100655:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f010065a	obj/kern/kernel.asm	/^f010065a:	68 0c 00 10 f0       	push   $0xf010000c$/;"	l
f010065f	obj/kern/kernel.asm	/^f010065f:	68 90 1d 10 f0       	push   $0xf0101d90$/;"	l
f0100664	obj/kern/kernel.asm	/^f0100664:	e8 a8 03 00 00       	call   f0100a11 <cprintf>$/;"	l
f0100669	obj/kern/kernel.asm	/^f0100669:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010066c	obj/kern/kernel.asm	/^f010066c:	68 90 19 10 00       	push   $0x101990$/;"	l
f0100671	obj/kern/kernel.asm	/^f0100671:	68 90 19 10 f0       	push   $0xf0101990$/;"	l
f0100676	obj/kern/kernel.asm	/^f0100676:	68 b4 1d 10 f0       	push   $0xf0101db4$/;"	l
f010067b	obj/kern/kernel.asm	/^f010067b:	e8 91 03 00 00       	call   f0100a11 <cprintf>$/;"	l
f0100680	obj/kern/kernel.asm	/^f0100680:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100683	obj/kern/kernel.asm	/^f0100683:	68 00 83 11 00       	push   $0x118300$/;"	l
f0100688	obj/kern/kernel.asm	/^f0100688:	68 00 83 11 f0       	push   $0xf0118300$/;"	l
f010068d	obj/kern/kernel.asm	/^f010068d:	68 d8 1d 10 f0       	push   $0xf0101dd8$/;"	l
f0100692	obj/kern/kernel.asm	/^f0100692:	e8 7a 03 00 00       	call   f0100a11 <cprintf>$/;"	l
f0100697	obj/kern/kernel.asm	/^f0100697:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010069a	obj/kern/kernel.asm	/^f010069a:	68 44 89 11 00       	push   $0x118944$/;"	l
f010069f	obj/kern/kernel.asm	/^f010069f:	68 44 89 11 f0       	push   $0xf0118944$/;"	l
f01006a4	obj/kern/kernel.asm	/^f01006a4:	68 fc 1d 10 f0       	push   $0xf0101dfc$/;"	l
f01006a9	obj/kern/kernel.asm	/^f01006a9:	e8 63 03 00 00       	call   f0100a11 <cprintf>$/;"	l
f01006ae	obj/kern/kernel.asm	/^f01006ae:	b8 43 8d 11 f0       	mov    $0xf0118d43,%eax$/;"	l
f01006b3	obj/kern/kernel.asm	/^f01006b3:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f01006b8	obj/kern/kernel.asm	/^f01006b8:	83 c4 08             	add    $0x8,%esp$/;"	l
f01006bb	obj/kern/kernel.asm	/^f01006bb:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f01006c0	obj/kern/kernel.asm	/^f01006c0:	89 c2                	mov    %eax,%edx$/;"	l
f01006c2	obj/kern/kernel.asm	/^f01006c2:	85 c0                	test   %eax,%eax$/;"	l
f01006c4	obj/kern/kernel.asm	/^f01006c4:	79 06                	jns    f01006cc <mon_kerninfo+0x9c>$/;"	l
f01006c6	obj/kern/kernel.asm	/^f01006c6:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f01006cc	obj/kern/kernel.asm	/^f01006cc:	c1 fa 0a             	sar    $0xa,%edx$/;"	l
f01006cf	obj/kern/kernel.asm	/^f01006cf:	52                   	push   %edx$/;"	l
f01006d0	obj/kern/kernel.asm	/^f01006d0:	68 20 1e 10 f0       	push   $0xf0101e20$/;"	l
f01006d5	obj/kern/kernel.asm	/^f01006d5:	e8 37 03 00 00       	call   f0100a11 <cprintf>$/;"	l
f01006da	obj/kern/kernel.asm	/^f01006da:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006df	obj/kern/kernel.asm	/^f01006df:	c9                   	leave  $/;"	l
f01006e0	obj/kern/kernel.asm	/^f01006e0:	c3                   	ret    $/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1 <mon_help>:$/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	55                   	push   %ebp$/;"	l
f01006e2	obj/kern/kernel.asm	/^f01006e2:	89 e5                	mov    %esp,%ebp$/;"	l
f01006e4	obj/kern/kernel.asm	/^f01006e4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	ff 35 a4 20 10 f0    	pushl  0xf01020a4$/;"	l
f01006ed	obj/kern/kernel.asm	/^f01006ed:	ff 35 a0 20 10 f0    	pushl  0xf01020a0$/;"	l
f01006f3	obj/kern/kernel.asm	/^f01006f3:	68 89 1c 10 f0       	push   $0xf0101c89$/;"	l
f01006f8	obj/kern/kernel.asm	/^f01006f8:	e8 14 03 00 00       	call   f0100a11 <cprintf>$/;"	l
f01006fd	obj/kern/kernel.asm	/^f01006fd:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100700	obj/kern/kernel.asm	/^f0100700:	ff 35 b0 20 10 f0    	pushl  0xf01020b0$/;"	l
f0100706	obj/kern/kernel.asm	/^f0100706:	ff 35 ac 20 10 f0    	pushl  0xf01020ac$/;"	l
f010070c	obj/kern/kernel.asm	/^f010070c:	68 89 1c 10 f0       	push   $0xf0101c89$/;"	l
f0100711	obj/kern/kernel.asm	/^f0100711:	e8 fb 02 00 00       	call   f0100a11 <cprintf>$/;"	l
f0100716	obj/kern/kernel.asm	/^f0100716:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100719	obj/kern/kernel.asm	/^f0100719:	ff 35 bc 20 10 f0    	pushl  0xf01020bc$/;"	l
f010071f	obj/kern/kernel.asm	/^f010071f:	ff 35 b8 20 10 f0    	pushl  0xf01020b8$/;"	l
f0100725	obj/kern/kernel.asm	/^f0100725:	68 89 1c 10 f0       	push   $0xf0101c89$/;"	l
f010072a	obj/kern/kernel.asm	/^f010072a:	e8 e2 02 00 00       	call   f0100a11 <cprintf>$/;"	l
f010072f	obj/kern/kernel.asm	/^f010072f:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100732	obj/kern/kernel.asm	/^f0100732:	ff 35 c8 20 10 f0    	pushl  0xf01020c8$/;"	l
f0100738	obj/kern/kernel.asm	/^f0100738:	ff 35 c4 20 10 f0    	pushl  0xf01020c4$/;"	l
f010073e	obj/kern/kernel.asm	/^f010073e:	68 89 1c 10 f0       	push   $0xf0101c89$/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	e8 c9 02 00 00       	call   f0100a11 <cprintf>$/;"	l
f0100748	obj/kern/kernel.asm	/^f0100748:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010074d	obj/kern/kernel.asm	/^f010074d:	c9                   	leave  $/;"	l
f010074e	obj/kern/kernel.asm	/^f010074e:	c3                   	ret    $/;"	l
f010074f	obj/kern/kernel.asm	/^f010074f <mon_setcolor>:$/;"	l
f010074f	obj/kern/kernel.asm	/^f010074f:	55                   	push   %ebp$/;"	l
f0100750	obj/kern/kernel.asm	/^f0100750:	89 e5                	mov    %esp,%ebp$/;"	l
f0100752	obj/kern/kernel.asm	/^f0100752:	56                   	push   %esi$/;"	l
f0100753	obj/kern/kernel.asm	/^f0100753:	53                   	push   %ebx$/;"	l
f0100754	obj/kern/kernel.asm	/^f0100754:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100757	obj/kern/kernel.asm	/^f0100757:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)$/;"	l
f010075b	obj/kern/kernel.asm	/^f010075b:	74 66                	je     f01007c3 <mon_setcolor+0x74>$/;"	l
f010075d	obj/kern/kernel.asm	/^f010075d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100760	obj/kern/kernel.asm	/^f0100760:	68 4c 1e 10 f0       	push   $0xf0101e4c$/;"	l
f0100765	obj/kern/kernel.asm	/^f0100765:	e8 a7 02 00 00       	call   f0100a11 <cprintf>$/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a:	c7 04 24 7c 1e 10 f0 	movl   $0xf0101e7c,(%esp)$/;"	l
f0100771	obj/kern/kernel.asm	/^f0100771:	e8 9b 02 00 00       	call   f0100a11 <cprintf>$/;"	l
f0100776	obj/kern/kernel.asm	/^f0100776:	c7 04 24 9c 1e 10 f0 	movl   $0xf0101e9c,(%esp)$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	e8 8f 02 00 00       	call   f0100a11 <cprintf>$/;"	l
f0100782	obj/kern/kernel.asm	/^f0100782:	c7 04 24 d0 1e 10 f0 	movl   $0xf0101ed0,(%esp)$/;"	l
f0100789	obj/kern/kernel.asm	/^f0100789:	e8 83 02 00 00       	call   f0100a11 <cprintf>$/;"	l
f010078e	obj/kern/kernel.asm	/^f010078e:	c7 04 24 14 1f 10 f0 	movl   $0xf0101f14,(%esp)$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	e8 77 02 00 00       	call   f0100a11 <cprintf>$/;"	l
f010079a	obj/kern/kernel.asm	/^f010079a:	c7 04 24 92 1c 10 f0 	movl   $0xf0101c92,(%esp)$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	e8 6b 02 00 00       	call   f0100a11 <cprintf>$/;"	l
f01007a6	obj/kern/kernel.asm	/^f01007a6:	c7 04 24 58 1f 10 f0 	movl   $0xf0101f58,(%esp)$/;"	l
f01007ad	obj/kern/kernel.asm	/^f01007ad:	e8 5f 02 00 00       	call   f0100a11 <cprintf>$/;"	l
f01007b2	obj/kern/kernel.asm	/^f01007b2:	c7 04 24 84 1f 10 f0 	movl   $0xf0101f84,(%esp)$/;"	l
f01007b9	obj/kern/kernel.asm	/^f01007b9:	e8 53 02 00 00       	call   f0100a11 <cprintf>$/;"	l
f01007be	obj/kern/kernel.asm	/^f01007be:	83 c4 10             	add    $0x10,%esp$/;"	l
f01007c1	obj/kern/kernel.asm	/^f01007c1:	eb 52                	jmp    f0100815 <mon_setcolor+0xc6>$/;"	l
f01007c3	obj/kern/kernel.asm	/^f01007c3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6:	ff 73 04             	pushl  0x4(%ebx)$/;"	l
f01007c9	obj/kern/kernel.asm	/^f01007c9:	e8 aa 0b 00 00       	call   f0101378 <strlen>$/;"	l
f01007ce	obj/kern/kernel.asm	/^f01007ce:	83 c4 10             	add    $0x10,%esp$/;"	l
f01007d1	obj/kern/kernel.asm	/^f01007d1:	48                   	dec    %eax$/;"	l
f01007d2	obj/kern/kernel.asm	/^f01007d2:	78 26                	js     f01007fa <mon_setcolor+0xab>$/;"	l
f01007d4	obj/kern/kernel.asm	/^f01007d4:	8b 73 04             	mov    0x4(%ebx),%esi$/;"	l
f01007d7	obj/kern/kernel.asm	/^f01007d7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01007dc	obj/kern/kernel.asm	/^f01007dc:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01007e1	obj/kern/kernel.asm	/^f01007e1:	80 3c 06 31          	cmpb   $0x31,(%esi,%eax,1)$/;"	l
f01007e5	obj/kern/kernel.asm	/^f01007e5:	0f 94 c3             	sete   %bl$/;"	l
f01007e8	obj/kern/kernel.asm	/^f01007e8:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	d3 e3                	shl    %cl,%ebx$/;"	d
f01007ed	obj/kern/kernel.asm	/^f01007ed:	01 da                	add    %ebx,%edx$/;"	l
f01007ef	obj/kern/kernel.asm	/^f01007ef:	48                   	dec    %eax$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	78 0d                	js     f01007ff <mon_setcolor+0xb0>$/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	41                   	inc    %ecx$/;"	l
f01007f3	obj/kern/kernel.asm	/^f01007f3:	83 f9 08             	cmp    $0x8,%ecx$/;"	l
f01007f6	obj/kern/kernel.asm	/^f01007f6:	75 e9                	jne    f01007e1 <mon_setcolor+0x92>$/;"	l
f01007f8	obj/kern/kernel.asm	/^f01007f8:	eb 05                	jmp    f01007ff <mon_setcolor+0xb0>$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01007ff	obj/kern/kernel.asm	/^f01007ff:	89 15 00 83 11 f0    	mov    %edx,0xf0118300$/;"	l
f0100805	obj/kern/kernel.asm	/^f0100805:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100808	obj/kern/kernel.asm	/^f0100808:	68 b8 1f 10 f0       	push   $0xf0101fb8$/;"	l
f010080d	obj/kern/kernel.asm	/^f010080d:	e8 ff 01 00 00       	call   f0100a11 <cprintf>$/;"	l
f0100812	obj/kern/kernel.asm	/^f0100812:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100815	obj/kern/kernel.asm	/^f0100815:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010081d	obj/kern/kernel.asm	/^f010081d:	5b                   	pop    %ebx$/;"	l
f010081e	obj/kern/kernel.asm	/^f010081e:	5e                   	pop    %esi$/;"	l
f010081f	obj/kern/kernel.asm	/^f010081f:	c9                   	leave  $/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820:	c3                   	ret    $/;"	l
f0100821	obj/kern/kernel.asm	/^f0100821 <mon_backtrace>:$/;"	l
f0100821	obj/kern/kernel.asm	/^f0100821:	55                   	push   %ebp$/;"	l
f0100822	obj/kern/kernel.asm	/^f0100822:	89 e5                	mov    %esp,%ebp$/;"	l
f0100824	obj/kern/kernel.asm	/^f0100824:	57                   	push   %edi$/;"	l
f0100825	obj/kern/kernel.asm	/^f0100825:	56                   	push   %esi$/;"	l
f0100826	obj/kern/kernel.asm	/^f0100826:	53                   	push   %ebx$/;"	l
f0100827	obj/kern/kernel.asm	/^f0100827:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010082a	obj/kern/kernel.asm	/^f010082a:	89 e8                	mov    %ebp,%eax$/;"	l
f010082c	obj/kern/kernel.asm	/^f010082c:	89 c6                	mov    %eax,%esi$/;"	l
f010082e	obj/kern/kernel.asm	/^f010082e:	85 c0                	test   %eax,%eax$/;"	l
f0100830	obj/kern/kernel.asm	/^f0100830:	74 6d                	je     f010089f <mon_backtrace+0x7e>$/;"	l
f0100832	obj/kern/kernel.asm	/^f0100832:	8d 7d d0             	lea    -0x30(%ebp),%edi$/;"	l
f0100835	obj/kern/kernel.asm	/^f0100835:	8b 5e 04             	mov    0x4(%esi),%ebx$/;"	l
f0100838	obj/kern/kernel.asm	/^f0100838:	ff 76 18             	pushl  0x18(%esi)$/;"	l
f010083b	obj/kern/kernel.asm	/^f010083b:	ff 76 14             	pushl  0x14(%esi)$/;"	l
f010083e	obj/kern/kernel.asm	/^f010083e:	ff 76 10             	pushl  0x10(%esi)$/;"	l
f0100841	obj/kern/kernel.asm	/^f0100841:	ff 76 0c             	pushl  0xc(%esi)$/;"	l
f0100844	obj/kern/kernel.asm	/^f0100844:	ff 76 08             	pushl  0x8(%esi)$/;"	l
f0100847	obj/kern/kernel.asm	/^f0100847:	53                   	push   %ebx$/;"	l
f0100848	obj/kern/kernel.asm	/^f0100848:	56                   	push   %esi$/;"	l
f0100849	obj/kern/kernel.asm	/^f0100849:	68 dc 1f 10 f0       	push   $0xf0101fdc$/;"	l
f010084e	obj/kern/kernel.asm	/^f010084e:	e8 be 01 00 00       	call   f0100a11 <cprintf>$/;"	l
f0100853	obj/kern/kernel.asm	/^f0100853:	83 c4 18             	add    $0x18,%esp$/;"	l
f0100856	obj/kern/kernel.asm	/^f0100856:	57                   	push   %edi$/;"	l
f0100857	obj/kern/kernel.asm	/^f0100857:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f010085a	obj/kern/kernel.asm	/^f010085a:	e8 ee 02 00 00       	call   f0100b4d <debuginfo_eip>$/;"	l
f010085f	obj/kern/kernel.asm	/^f010085f:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100862	obj/kern/kernel.asm	/^f0100862:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0100865	obj/kern/kernel.asm	/^f0100865:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0100868	obj/kern/kernel.asm	/^f0100868:	68 ae 1c 10 f0       	push   $0xf0101cae$/;"	l
f010086d	obj/kern/kernel.asm	/^f010086d:	e8 9f 01 00 00       	call   f0100a11 <cprintf>$/;"	l
f0100872	obj/kern/kernel.asm	/^f0100872:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100875	obj/kern/kernel.asm	/^f0100875:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0100878	obj/kern/kernel.asm	/^f0100878:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f010087b	obj/kern/kernel.asm	/^f010087b:	68 be 1c 10 f0       	push   $0xf0101cbe$/;"	l
f0100880	obj/kern/kernel.asm	/^f0100880:	e8 8c 01 00 00       	call   f0100a11 <cprintf>$/;"	l
f0100885	obj/kern/kernel.asm	/^f0100885:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100888	obj/kern/kernel.asm	/^f0100888:	2b 5d e0             	sub    -0x20(%ebp),%ebx$/;"	l
f010088b	obj/kern/kernel.asm	/^f010088b:	53                   	push   %ebx$/;"	l
f010088c	obj/kern/kernel.asm	/^f010088c:	68 c3 1c 10 f0       	push   $0xf0101cc3$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	e8 7b 01 00 00       	call   f0100a11 <cprintf>$/;"	l
f0100896	obj/kern/kernel.asm	/^f0100896:	8b 36                	mov    (%esi),%esi$/;"	l
f0100898	obj/kern/kernel.asm	/^f0100898:	83 c4 10             	add    $0x10,%esp$/;"	l
f010089b	obj/kern/kernel.asm	/^f010089b:	85 f6                	test   %esi,%esi$/;"	l
f010089d	obj/kern/kernel.asm	/^f010089d:	75 96                	jne    f0100835 <mon_backtrace+0x14>$/;"	l
f010089f	obj/kern/kernel.asm	/^f010089f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008a4	obj/kern/kernel.asm	/^f01008a4:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01008a7	obj/kern/kernel.asm	/^f01008a7:	5b                   	pop    %ebx$/;"	l
f01008a8	obj/kern/kernel.asm	/^f01008a8:	5e                   	pop    %esi$/;"	l
f01008a9	obj/kern/kernel.asm	/^f01008a9:	5f                   	pop    %edi$/;"	l
f01008aa	obj/kern/kernel.asm	/^f01008aa:	c9                   	leave  $/;"	l
f01008ab	obj/kern/kernel.asm	/^f01008ab:	c3                   	ret    $/;"	l
f01008ac	obj/kern/kernel.asm	/^f01008ac <monitor>:$/;"	l
f01008ac	obj/kern/kernel.asm	/^f01008ac:	55                   	push   %ebp$/;"	l
f01008ad	obj/kern/kernel.asm	/^f01008ad:	89 e5                	mov    %esp,%ebp$/;"	l
f01008af	obj/kern/kernel.asm	/^f01008af:	57                   	push   %edi$/;"	l
f01008b0	obj/kern/kernel.asm	/^f01008b0:	56                   	push   %esi$/;"	l
f01008b1	obj/kern/kernel.asm	/^f01008b1:	53                   	push   %ebx$/;"	l
f01008b2	obj/kern/kernel.asm	/^f01008b2:	83 ec 58             	sub    $0x58,%esp$/;"	l
f01008b5	obj/kern/kernel.asm	/^f01008b5:	68 14 20 10 f0       	push   $0xf0102014$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	e8 52 01 00 00       	call   f0100a11 <cprintf>$/;"	l
f01008bf	obj/kern/kernel.asm	/^f01008bf:	c7 04 24 38 20 10 f0 	movl   $0xf0102038,(%esp)$/;"	l
f01008c6	obj/kern/kernel.asm	/^f01008c6:	e8 46 01 00 00       	call   f0100a11 <cprintf>$/;"	l
f01008cb	obj/kern/kernel.asm	/^f01008cb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008ce	obj/kern/kernel.asm	/^f01008ce:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01008d1	obj/kern/kernel.asm	/^f01008d1:	68 c8 1c 10 f0       	push   $0xf0101cc8$/;"	l
f01008d6	obj/kern/kernel.asm	/^f01008d6:	e8 cd 09 00 00       	call   f01012a8 <readline>$/;"	l
f01008db	obj/kern/kernel.asm	/^f01008db:	89 c3                	mov    %eax,%ebx$/;"	l
f01008dd	obj/kern/kernel.asm	/^f01008dd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008e0	obj/kern/kernel.asm	/^f01008e0:	85 c0                	test   %eax,%eax$/;"	l
f01008e2	obj/kern/kernel.asm	/^f01008e2:	74 ea                	je     f01008ce <monitor+0x22>$/;"	l
f01008e4	obj/kern/kernel.asm	/^f01008e4:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f01008eb	obj/kern/kernel.asm	/^f01008eb:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01008f0	obj/kern/kernel.asm	/^f01008f0:	eb 04                	jmp    f01008f6 <monitor+0x4a>$/;"	l
f01008f2	obj/kern/kernel.asm	/^f01008f2:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f01008f5	obj/kern/kernel.asm	/^f01008f5:	43                   	inc    %ebx$/;"	l
f01008f6	obj/kern/kernel.asm	/^f01008f6:	8a 03                	mov    (%ebx),%al$/;"	l
f01008f8	obj/kern/kernel.asm	/^f01008f8:	84 c0                	test   %al,%al$/;"	l
f01008fa	obj/kern/kernel.asm	/^f01008fa:	74 64                	je     f0100960 <monitor+0xb4>$/;"	l
f01008fc	obj/kern/kernel.asm	/^f01008fc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	0f be c0             	movsbl %al,%eax$/;"	l
f0100902	obj/kern/kernel.asm	/^f0100902:	50                   	push   %eax$/;"	l
f0100903	obj/kern/kernel.asm	/^f0100903:	68 cc 1c 10 f0       	push   $0xf0101ccc$/;"	l
f0100908	obj/kern/kernel.asm	/^f0100908:	e8 e4 0b 00 00       	call   f01014f1 <strchr>$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100910	obj/kern/kernel.asm	/^f0100910:	85 c0                	test   %eax,%eax$/;"	l
f0100912	obj/kern/kernel.asm	/^f0100912:	75 de                	jne    f01008f2 <monitor+0x46>$/;"	l
f0100914	obj/kern/kernel.asm	/^f0100914:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100917	obj/kern/kernel.asm	/^f0100917:	74 47                	je     f0100960 <monitor+0xb4>$/;"	l
f0100919	obj/kern/kernel.asm	/^f0100919:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f010091c	obj/kern/kernel.asm	/^f010091c:	75 14                	jne    f0100932 <monitor+0x86>$/;"	l
f010091e	obj/kern/kernel.asm	/^f010091e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100921	obj/kern/kernel.asm	/^f0100921:	6a 10                	push   $0x10$/;"	l
f0100923	obj/kern/kernel.asm	/^f0100923:	68 d1 1c 10 f0       	push   $0xf0101cd1$/;"	l
f0100928	obj/kern/kernel.asm	/^f0100928:	e8 e4 00 00 00       	call   f0100a11 <cprintf>$/;"	l
f010092d	obj/kern/kernel.asm	/^f010092d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100930	obj/kern/kernel.asm	/^f0100930:	eb 9c                	jmp    f01008ce <monitor+0x22>$/;"	l
f0100932	obj/kern/kernel.asm	/^f0100932:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100936	obj/kern/kernel.asm	/^f0100936:	46                   	inc    %esi$/;"	l
f0100937	obj/kern/kernel.asm	/^f0100937:	8a 03                	mov    (%ebx),%al$/;"	l
f0100939	obj/kern/kernel.asm	/^f0100939:	84 c0                	test   %al,%al$/;"	l
f010093b	obj/kern/kernel.asm	/^f010093b:	75 09                	jne    f0100946 <monitor+0x9a>$/;"	l
f010093d	obj/kern/kernel.asm	/^f010093d:	eb b7                	jmp    f01008f6 <monitor+0x4a>$/;"	l
f010093f	obj/kern/kernel.asm	/^f010093f:	43                   	inc    %ebx$/;"	l
f0100940	obj/kern/kernel.asm	/^f0100940:	8a 03                	mov    (%ebx),%al$/;"	l
f0100942	obj/kern/kernel.asm	/^f0100942:	84 c0                	test   %al,%al$/;"	l
f0100944	obj/kern/kernel.asm	/^f0100944:	74 b0                	je     f01008f6 <monitor+0x4a>$/;"	l
f0100946	obj/kern/kernel.asm	/^f0100946:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100949	obj/kern/kernel.asm	/^f0100949:	0f be c0             	movsbl %al,%eax$/;"	l
f010094c	obj/kern/kernel.asm	/^f010094c:	50                   	push   %eax$/;"	l
f010094d	obj/kern/kernel.asm	/^f010094d:	68 cc 1c 10 f0       	push   $0xf0101ccc$/;"	l
f0100952	obj/kern/kernel.asm	/^f0100952:	e8 9a 0b 00 00       	call   f01014f1 <strchr>$/;"	l
f0100957	obj/kern/kernel.asm	/^f0100957:	83 c4 10             	add    $0x10,%esp$/;"	l
f010095a	obj/kern/kernel.asm	/^f010095a:	85 c0                	test   %eax,%eax$/;"	l
f010095c	obj/kern/kernel.asm	/^f010095c:	74 e1                	je     f010093f <monitor+0x93>$/;"	l
f010095e	obj/kern/kernel.asm	/^f010095e:	eb 96                	jmp    f01008f6 <monitor+0x4a>$/;"	l
f0100960	obj/kern/kernel.asm	/^f0100960:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100967	obj/kern/kernel.asm	/^f0100967:	00 $/;"	l
f0100968	obj/kern/kernel.asm	/^f0100968:	85 f6                	test   %esi,%esi$/;"	l
f010096a	obj/kern/kernel.asm	/^f010096a:	0f 84 5e ff ff ff    	je     f01008ce <monitor+0x22>$/;"	l
f0100970	obj/kern/kernel.asm	/^f0100970:	bb a0 20 10 f0       	mov    $0xf01020a0,%ebx$/;"	l
f0100975	obj/kern/kernel.asm	/^f0100975:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010097a	obj/kern/kernel.asm	/^f010097a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010097d	obj/kern/kernel.asm	/^f010097d:	ff 33                	pushl  (%ebx)$/;"	l
f010097f	obj/kern/kernel.asm	/^f010097f:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100982	obj/kern/kernel.asm	/^f0100982:	e8 fc 0a 00 00       	call   f0101483 <strcmp>$/;"	l
f0100987	obj/kern/kernel.asm	/^f0100987:	83 c4 10             	add    $0x10,%esp$/;"	l
f010098a	obj/kern/kernel.asm	/^f010098a:	85 c0                	test   %eax,%eax$/;"	l
f010098c	obj/kern/kernel.asm	/^f010098c:	75 20                	jne    f01009ae <monitor+0x102>$/;"	l
f010098e	obj/kern/kernel.asm	/^f010098e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100991	obj/kern/kernel.asm	/^f0100991:	6b ff 0c             	imul   $0xc,%edi,%edi$/;"	l
f0100994	obj/kern/kernel.asm	/^f0100994:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100997	obj/kern/kernel.asm	/^f0100997:	8d 45 a8             	lea    -0x58(%ebp),%eax$/;"	l
f010099a	obj/kern/kernel.asm	/^f010099a:	50                   	push   %eax$/;"	l
f010099b	obj/kern/kernel.asm	/^f010099b:	56                   	push   %esi$/;"	l
f010099c	obj/kern/kernel.asm	/^f010099c:	ff 97 a8 20 10 f0    	call   *-0xfefdf58(%edi)$/;"	l
f01009a2	obj/kern/kernel.asm	/^f01009a2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009a5	obj/kern/kernel.asm	/^f01009a5:	85 c0                	test   %eax,%eax$/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	78 26                	js     f01009cf <monitor+0x123>$/;"	l
f01009a9	obj/kern/kernel.asm	/^f01009a9:	e9 20 ff ff ff       	jmp    f01008ce <monitor+0x22>$/;"	l
f01009ae	obj/kern/kernel.asm	/^f01009ae:	47                   	inc    %edi$/;"	l
f01009af	obj/kern/kernel.asm	/^f01009af:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f01009b2	obj/kern/kernel.asm	/^f01009b2:	83 ff 04             	cmp    $0x4,%edi$/;"	l
f01009b5	obj/kern/kernel.asm	/^f01009b5:	75 c3                	jne    f010097a <monitor+0xce>$/;"	l
f01009b7	obj/kern/kernel.asm	/^f01009b7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009ba	obj/kern/kernel.asm	/^f01009ba:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f01009bd	obj/kern/kernel.asm	/^f01009bd:	68 ee 1c 10 f0       	push   $0xf0101cee$/;"	l
f01009c2	obj/kern/kernel.asm	/^f01009c2:	e8 4a 00 00 00       	call   f0100a11 <cprintf>$/;"	l
f01009c7	obj/kern/kernel.asm	/^f01009c7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009ca	obj/kern/kernel.asm	/^f01009ca:	e9 ff fe ff ff       	jmp    f01008ce <monitor+0x22>$/;"	l
f01009cf	obj/kern/kernel.asm	/^f01009cf:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01009d2	obj/kern/kernel.asm	/^f01009d2:	5b                   	pop    %ebx$/;"	l
f01009d3	obj/kern/kernel.asm	/^f01009d3:	5e                   	pop    %esi$/;"	l
f01009d4	obj/kern/kernel.asm	/^f01009d4:	5f                   	pop    %edi$/;"	l
f01009d5	obj/kern/kernel.asm	/^f01009d5:	c9                   	leave  $/;"	l
f01009d6	obj/kern/kernel.asm	/^f01009d6:	c3                   	ret    $/;"	l
f01009d8	obj/kern/kernel.asm	/^f01009d8 <putch>:$/;"	l
f01009d8	obj/kern/kernel.asm	/^f01009d8:	55                   	push   %ebp$/;"	l
f01009d9	obj/kern/kernel.asm	/^f01009d9:	89 e5                	mov    %esp,%ebp$/;"	l
f01009db	obj/kern/kernel.asm	/^f01009db:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01009de	obj/kern/kernel.asm	/^f01009de:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01009e1	obj/kern/kernel.asm	/^f01009e1:	e8 1c fc ff ff       	call   f0100602 <cputchar>$/;"	l
f01009e6	obj/kern/kernel.asm	/^f01009e6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009e9	obj/kern/kernel.asm	/^f01009e9:	c9                   	leave  $/;"	l
f01009ea	obj/kern/kernel.asm	/^f01009ea:	c3                   	ret    $/;"	l
f01009eb	obj/kern/kernel.asm	/^f01009eb <vcprintf>:$/;"	l
f01009eb	obj/kern/kernel.asm	/^f01009eb:	55                   	push   %ebp$/;"	l
f01009ec	obj/kern/kernel.asm	/^f01009ec:	89 e5                	mov    %esp,%ebp$/;"	l
f01009ee	obj/kern/kernel.asm	/^f01009ee:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01009f1	obj/kern/kernel.asm	/^f01009f1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01009f8	obj/kern/kernel.asm	/^f01009f8:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01009fb	obj/kern/kernel.asm	/^f01009fb:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01009fe	obj/kern/kernel.asm	/^f01009fe:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0100a01	obj/kern/kernel.asm	/^f0100a01:	50                   	push   %eax$/;"	l
f0100a02	obj/kern/kernel.asm	/^f0100a02:	68 d8 09 10 f0       	push   $0xf01009d8$/;"	l
f0100a07	obj/kern/kernel.asm	/^f0100a07:	e8 9d 04 00 00       	call   f0100ea9 <vprintfmt>$/;"	l
f0100a0c	obj/kern/kernel.asm	/^f0100a0c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100a0f	obj/kern/kernel.asm	/^f0100a0f:	c9                   	leave  $/;"	l
f0100a10	obj/kern/kernel.asm	/^f0100a10:	c3                   	ret    $/;"	l
f0100a11	obj/kern/kernel.asm	/^f0100a11 <cprintf>:$/;"	l
f0100a11	obj/kern/kernel.asm	/^f0100a11:	55                   	push   %ebp$/;"	l
f0100a12	obj/kern/kernel.asm	/^f0100a12:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a14	obj/kern/kernel.asm	/^f0100a14:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100a17	obj/kern/kernel.asm	/^f0100a17:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0100a1a	obj/kern/kernel.asm	/^f0100a1a:	50                   	push   %eax$/;"	l
f0100a1b	obj/kern/kernel.asm	/^f0100a1b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100a1e	obj/kern/kernel.asm	/^f0100a1e:	e8 c8 ff ff ff       	call   f01009eb <vcprintf>$/;"	l
f0100a23	obj/kern/kernel.asm	/^f0100a23:	c9                   	leave  $/;"	l
f0100a24	obj/kern/kernel.asm	/^f0100a24:	c3                   	ret    $/;"	l
f0100a25	obj/kern/kernel.asm	/^f0100a25:	00 00                	add    %al,(%eax)$/;"	l
f0100a28	obj/kern/kernel.asm	/^f0100a28 <stab_binsearch>:$/;"	l
f0100a28	obj/kern/kernel.asm	/^f0100a28:	55                   	push   %ebp$/;"	l
f0100a29	obj/kern/kernel.asm	/^f0100a29:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a2b	obj/kern/kernel.asm	/^f0100a2b:	57                   	push   %edi$/;"	l
f0100a2c	obj/kern/kernel.asm	/^f0100a2c:	56                   	push   %esi$/;"	l
f0100a2d	obj/kern/kernel.asm	/^f0100a2d:	53                   	push   %ebx$/;"	l
f0100a2e	obj/kern/kernel.asm	/^f0100a2e:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100a31	obj/kern/kernel.asm	/^f0100a31:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0100a34	obj/kern/kernel.asm	/^f0100a34:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
f0100a37	obj/kern/kernel.asm	/^f0100a37:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0100a3a	obj/kern/kernel.asm	/^f0100a3a:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100a3d	obj/kern/kernel.asm	/^f0100a3d:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0100a3f	obj/kern/kernel.asm	/^f0100a3f:	8b 01                	mov    (%ecx),%eax$/;"	l
f0100a41	obj/kern/kernel.asm	/^f0100a41:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100a46	obj/kern/kernel.asm	/^f0100a46:	0f 8f 97 00 00 00    	jg     f0100ae3 <stab_binsearch+0xbb>$/;"	l
f0100a4c	obj/kern/kernel.asm	/^f0100a4c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0100a56	obj/kern/kernel.asm	/^f0100a56:	01 d8                	add    %ebx,%eax$/;"	l
f0100a58	obj/kern/kernel.asm	/^f0100a58:	89 c7                	mov    %eax,%edi$/;"	l
f0100a5a	obj/kern/kernel.asm	/^f0100a5a:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f0100a5d	obj/kern/kernel.asm	/^f0100a5d:	01 c7                	add    %eax,%edi$/;"	l
f0100a5f	obj/kern/kernel.asm	/^f0100a5f:	d1 ff                	sar    %edi$/;"	d
f0100a61	obj/kern/kernel.asm	/^f0100a61:	39 df                	cmp    %ebx,%edi$/;"	l
f0100a63	obj/kern/kernel.asm	/^f0100a63:	7c 31                	jl     f0100a96 <stab_binsearch+0x6e>$/;"	l
f0100a65	obj/kern/kernel.asm	/^f0100a65:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0100a68	obj/kern/kernel.asm	/^f0100a68:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0100a6b	obj/kern/kernel.asm	/^f0100a6b:	0f b6 44 82 04       	movzbl 0x4(%edx,%eax,4),%eax$/;"	l
f0100a70	obj/kern/kernel.asm	/^f0100a70:	39 f0                	cmp    %esi,%eax$/;"	l
f0100a72	obj/kern/kernel.asm	/^f0100a72:	0f 84 b3 00 00 00    	je     f0100b2b <stab_binsearch+0x103>$/;"	l
f0100a78	obj/kern/kernel.asm	/^f0100a78:	8d 44 7f fd          	lea    -0x3(%edi,%edi,2),%eax$/;"	l
f0100a7c	obj/kern/kernel.asm	/^f0100a7c:	8d 54 82 04          	lea    0x4(%edx,%eax,4),%edx$/;"	l
f0100a80	obj/kern/kernel.asm	/^f0100a80:	89 f8                	mov    %edi,%eax$/;"	l
f0100a82	obj/kern/kernel.asm	/^f0100a82:	48                   	dec    %eax$/;"	l
f0100a83	obj/kern/kernel.asm	/^f0100a83:	39 d8                	cmp    %ebx,%eax$/;"	l
f0100a85	obj/kern/kernel.asm	/^f0100a85:	7c 0f                	jl     f0100a96 <stab_binsearch+0x6e>$/;"	l
f0100a87	obj/kern/kernel.asm	/^f0100a87:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0100a8a	obj/kern/kernel.asm	/^f0100a8a:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0100a8d	obj/kern/kernel.asm	/^f0100a8d:	39 f1                	cmp    %esi,%ecx$/;"	l
f0100a8f	obj/kern/kernel.asm	/^f0100a8f:	75 f1                	jne    f0100a82 <stab_binsearch+0x5a>$/;"	l
f0100a91	obj/kern/kernel.asm	/^f0100a91:	e9 97 00 00 00       	jmp    f0100b2d <stab_binsearch+0x105>$/;"	l
f0100a96	obj/kern/kernel.asm	/^f0100a96:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0100a99	obj/kern/kernel.asm	/^f0100a99:	eb 39                	jmp    f0100ad4 <stab_binsearch+0xac>$/;"	l
f0100a9b	obj/kern/kernel.asm	/^f0100a9b:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f0100a9e	obj/kern/kernel.asm	/^f0100a9e:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100aa0	obj/kern/kernel.asm	/^f0100aa0:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0100aa3	obj/kern/kernel.asm	/^f0100aa3:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0100aaa	obj/kern/kernel.asm	/^f0100aaa:	eb 28                	jmp    f0100ad4 <stab_binsearch+0xac>$/;"	l
f0100aac	obj/kern/kernel.asm	/^f0100aac:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0100aaf	obj/kern/kernel.asm	/^f0100aaf:	76 12                	jbe    f0100ac3 <stab_binsearch+0x9b>$/;"	l
f0100ab1	obj/kern/kernel.asm	/^f0100ab1:	48                   	dec    %eax$/;"	l
f0100ab2	obj/kern/kernel.asm	/^f0100ab2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0100ab5	obj/kern/kernel.asm	/^f0100ab5:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0100ab8	obj/kern/kernel.asm	/^f0100ab8:	89 02                	mov    %eax,(%edx)$/;"	l
f0100aba	obj/kern/kernel.asm	/^f0100aba:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1:	eb 11                	jmp    f0100ad4 <stab_binsearch+0xac>$/;"	l
f0100ac3	obj/kern/kernel.asm	/^f0100ac3:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f0100ac6	obj/kern/kernel.asm	/^f0100ac6:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100ac8	obj/kern/kernel.asm	/^f0100ac8:	ff 45 0c             	incl   0xc(%ebp)$/;"	l
f0100acb	obj/kern/kernel.asm	/^f0100acb:	89 c3                	mov    %eax,%ebx$/;"	l
f0100acd	obj/kern/kernel.asm	/^f0100acd:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0100ad4	obj/kern/kernel.asm	/^f0100ad4:	39 5d ec             	cmp    %ebx,-0x14(%ebp)$/;"	l
f0100ad7	obj/kern/kernel.asm	/^f0100ad7:	0f 8d 76 ff ff ff    	jge    f0100a53 <stab_binsearch+0x2b>$/;"	l
f0100add	obj/kern/kernel.asm	/^f0100add:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0100ae1	obj/kern/kernel.asm	/^f0100ae1:	75 0d                	jne    f0100af0 <stab_binsearch+0xc8>$/;"	l
f0100ae3	obj/kern/kernel.asm	/^f0100ae3:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f0100ae6	obj/kern/kernel.asm	/^f0100ae6:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100ae8	obj/kern/kernel.asm	/^f0100ae8:	48                   	dec    %eax$/;"	l
f0100ae9	obj/kern/kernel.asm	/^f0100ae9:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0100aec	obj/kern/kernel.asm	/^f0100aec:	89 02                	mov    %eax,(%edx)$/;"	l
f0100aee	obj/kern/kernel.asm	/^f0100aee:	eb 55                	jmp    f0100b45 <stab_binsearch+0x11d>$/;"	l
f0100af0	obj/kern/kernel.asm	/^f0100af0:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0100af3	obj/kern/kernel.asm	/^f0100af3:	8b 01                	mov    (%ecx),%eax$/;"	l
f0100af5	obj/kern/kernel.asm	/^f0100af5:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f0100af8	obj/kern/kernel.asm	/^f0100af8:	8b 0b                	mov    (%ebx),%ecx$/;"	l
f0100afa	obj/kern/kernel.asm	/^f0100afa:	39 c1                	cmp    %eax,%ecx$/;"	l
f0100afc	obj/kern/kernel.asm	/^f0100afc:	7d 26                	jge    f0100b24 <stab_binsearch+0xfc>$/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
f0100b04	obj/kern/kernel.asm	/^f0100b04:	0f b6 54 93 04       	movzbl 0x4(%ebx,%edx,4),%edx$/;"	l
f0100b09	obj/kern/kernel.asm	/^f0100b09:	39 f2                	cmp    %esi,%edx$/;"	l
f0100b0b	obj/kern/kernel.asm	/^f0100b0b:	74 17                	je     f0100b24 <stab_binsearch+0xfc>$/;"	l
f0100b0d	obj/kern/kernel.asm	/^f0100b0d:	8d 54 40 fd          	lea    -0x3(%eax,%eax,2),%edx$/;"	l
f0100b11	obj/kern/kernel.asm	/^f0100b11:	8d 54 93 04          	lea    0x4(%ebx,%edx,4),%edx$/;"	l
f0100b15	obj/kern/kernel.asm	/^f0100b15:	48                   	dec    %eax$/;"	l
f0100b16	obj/kern/kernel.asm	/^f0100b16:	39 c1                	cmp    %eax,%ecx$/;"	l
f0100b18	obj/kern/kernel.asm	/^f0100b18:	7d 0a                	jge    f0100b24 <stab_binsearch+0xfc>$/;"	l
f0100b1a	obj/kern/kernel.asm	/^f0100b1a:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0100b1d	obj/kern/kernel.asm	/^f0100b1d:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0100b20	obj/kern/kernel.asm	/^f0100b20:	39 f3                	cmp    %esi,%ebx$/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22:	75 f1                	jne    f0100b15 <stab_binsearch+0xed>$/;"	l
f0100b24	obj/kern/kernel.asm	/^f0100b24:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0100b27	obj/kern/kernel.asm	/^f0100b27:	89 02                	mov    %eax,(%edx)$/;"	l
f0100b29	obj/kern/kernel.asm	/^f0100b29:	eb 1a                	jmp    f0100b45 <stab_binsearch+0x11d>$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	89 f8                	mov    %edi,%eax$/;"	l
f0100b2d	obj/kern/kernel.asm	/^f0100b2d:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0100b30	obj/kern/kernel.asm	/^f0100b30:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
f0100b33	obj/kern/kernel.asm	/^f0100b33:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0100b37	obj/kern/kernel.asm	/^f0100b37:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0100b3a	obj/kern/kernel.asm	/^f0100b3a:	0f 82 5b ff ff ff    	jb     f0100a9b <stab_binsearch+0x73>$/;"	l
f0100b40	obj/kern/kernel.asm	/^f0100b40:	e9 67 ff ff ff       	jmp    f0100aac <stab_binsearch+0x84>$/;"	l
f0100b45	obj/kern/kernel.asm	/^f0100b45:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100b48	obj/kern/kernel.asm	/^f0100b48:	5b                   	pop    %ebx$/;"	l
f0100b49	obj/kern/kernel.asm	/^f0100b49:	5e                   	pop    %esi$/;"	l
f0100b4a	obj/kern/kernel.asm	/^f0100b4a:	5f                   	pop    %edi$/;"	l
f0100b4b	obj/kern/kernel.asm	/^f0100b4b:	c9                   	leave  $/;"	l
f0100b4c	obj/kern/kernel.asm	/^f0100b4c:	c3                   	ret    $/;"	l
f0100b4d	obj/kern/kernel.asm	/^f0100b4d <debuginfo_eip>:$/;"	l
f0100b4d	obj/kern/kernel.asm	/^f0100b4d:	55                   	push   %ebp$/;"	l
f0100b4e	obj/kern/kernel.asm	/^f0100b4e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b50	obj/kern/kernel.asm	/^f0100b50:	57                   	push   %edi$/;"	l
f0100b51	obj/kern/kernel.asm	/^f0100b51:	56                   	push   %esi$/;"	l
f0100b52	obj/kern/kernel.asm	/^f0100b52:	53                   	push   %ebx$/;"	l
f0100b53	obj/kern/kernel.asm	/^f0100b53:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100b56	obj/kern/kernel.asm	/^f0100b56:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100b59	obj/kern/kernel.asm	/^f0100b59:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100b5c	obj/kern/kernel.asm	/^f0100b5c:	c7 03 d0 20 10 f0    	movl   $0xf01020d0,(%ebx)$/;"	l
f0100b62	obj/kern/kernel.asm	/^f0100b62:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f0100b69	obj/kern/kernel.asm	/^f0100b69:	c7 43 08 d0 20 10 f0 	movl   $0xf01020d0,0x8(%ebx)$/;"	l
f0100b70	obj/kern/kernel.asm	/^f0100b70:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f0100b77	obj/kern/kernel.asm	/^f0100b77:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0100b7a	obj/kern/kernel.asm	/^f0100b7a:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f0100b81	obj/kern/kernel.asm	/^f0100b81:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0100b87	obj/kern/kernel.asm	/^f0100b87:	76 12                	jbe    f0100b9b <debuginfo_eip+0x4e>$/;"	l
f0100b89	obj/kern/kernel.asm	/^f0100b89:	b8 d6 dd 10 f0       	mov    $0xf010ddd6,%eax$/;"	l
f0100b8e	obj/kern/kernel.asm	/^f0100b8e:	3d 79 6a 10 f0       	cmp    $0xf0106a79,%eax$/;"	l
f0100b93	obj/kern/kernel.asm	/^f0100b93:	0f 86 90 01 00 00    	jbe    f0100d29 <debuginfo_eip+0x1dc>$/;"	l
f0100b99	obj/kern/kernel.asm	/^f0100b99:	eb 14                	jmp    f0100baf <debuginfo_eip+0x62>$/;"	l
f0100b9b	obj/kern/kernel.asm	/^f0100b9b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	68 da 20 10 f0       	push   $0xf01020da$/;"	l
f0100ba3	obj/kern/kernel.asm	/^f0100ba3:	6a 7f                	push   $0x7f$/;"	l
f0100ba5	obj/kern/kernel.asm	/^f0100ba5:	68 e7 20 10 f0       	push   $0xf01020e7$/;"	l
f0100baa	obj/kern/kernel.asm	/^f0100baa:	e8 37 f5 ff ff       	call   f01000e6 <_panic>$/;"	l
f0100baf	obj/kern/kernel.asm	/^f0100baf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100bb4	obj/kern/kernel.asm	/^f0100bb4:	80 3d d5 dd 10 f0 00 	cmpb   $0x0,0xf010ddd5$/;"	l
f0100bbb	obj/kern/kernel.asm	/^f0100bbb:	0f 85 74 01 00 00    	jne    f0100d35 <debuginfo_eip+0x1e8>$/;"	l
f0100bc1	obj/kern/kernel.asm	/^f0100bc1:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0100bc8	obj/kern/kernel.asm	/^f0100bc8:	b8 78 6a 10 f0       	mov    $0xf0106a78,%eax$/;"	l
f0100bcd	obj/kern/kernel.asm	/^f0100bcd:	2d 08 23 10 f0       	sub    $0xf0102308,%eax$/;"	l
f0100bd2	obj/kern/kernel.asm	/^f0100bd2:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0100bd5	obj/kern/kernel.asm	/^f0100bd5:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0100bdb	obj/kern/kernel.asm	/^f0100bdb:	48                   	dec    %eax$/;"	l
f0100bdc	obj/kern/kernel.asm	/^f0100bdc:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0100bdf	obj/kern/kernel.asm	/^f0100bdf:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100be2	obj/kern/kernel.asm	/^f0100be2:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0100be5	obj/kern/kernel.asm	/^f0100be5:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0100be8	obj/kern/kernel.asm	/^f0100be8:	56                   	push   %esi$/;"	l
f0100be9	obj/kern/kernel.asm	/^f0100be9:	6a 64                	push   $0x64$/;"	l
f0100beb	obj/kern/kernel.asm	/^f0100beb:	b8 08 23 10 f0       	mov    $0xf0102308,%eax$/;"	l
f0100bf0	obj/kern/kernel.asm	/^f0100bf0:	e8 33 fe ff ff       	call   f0100a28 <stab_binsearch>$/;"	l
f0100bf5	obj/kern/kernel.asm	/^f0100bf5:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0100bf8	obj/kern/kernel.asm	/^f0100bf8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100bfb	obj/kern/kernel.asm	/^f0100bfb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100c00	obj/kern/kernel.asm	/^f0100c00:	85 d2                	test   %edx,%edx$/;"	l
f0100c02	obj/kern/kernel.asm	/^f0100c02:	0f 84 2d 01 00 00    	je     f0100d35 <debuginfo_eip+0x1e8>$/;"	l
f0100c08	obj/kern/kernel.asm	/^f0100c08:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0100c0b	obj/kern/kernel.asm	/^f0100c0b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100c0e	obj/kern/kernel.asm	/^f0100c0e:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100c11	obj/kern/kernel.asm	/^f0100c11:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100c14	obj/kern/kernel.asm	/^f0100c14:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0100c17	obj/kern/kernel.asm	/^f0100c17:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100c1a	obj/kern/kernel.asm	/^f0100c1a:	56                   	push   %esi$/;"	l
f0100c1b	obj/kern/kernel.asm	/^f0100c1b:	6a 24                	push   $0x24$/;"	l
f0100c1d	obj/kern/kernel.asm	/^f0100c1d:	b8 08 23 10 f0       	mov    $0xf0102308,%eax$/;"	l
f0100c22	obj/kern/kernel.asm	/^f0100c22:	e8 01 fe ff ff       	call   f0100a28 <stab_binsearch>$/;"	l
f0100c27	obj/kern/kernel.asm	/^f0100c27:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0100c2a	obj/kern/kernel.asm	/^f0100c2a:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100c2d	obj/kern/kernel.asm	/^f0100c2d:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0100c30	obj/kern/kernel.asm	/^f0100c30:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c33	obj/kern/kernel.asm	/^f0100c33:	39 c7                	cmp    %eax,%edi$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	7f 32                	jg     f0100c69 <debuginfo_eip+0x11c>$/;"	l
f0100c37	obj/kern/kernel.asm	/^f0100c37:	89 f9                	mov    %edi,%ecx$/;"	l
f0100c39	obj/kern/kernel.asm	/^f0100c39:	6b c7 0c             	imul   $0xc,%edi,%eax$/;"	l
f0100c3c	obj/kern/kernel.asm	/^f0100c3c:	8b 80 08 23 10 f0    	mov    -0xfefdcf8(%eax),%eax$/;"	l
f0100c42	obj/kern/kernel.asm	/^f0100c42:	ba d6 dd 10 f0       	mov    $0xf010ddd6,%edx$/;"	l
f0100c47	obj/kern/kernel.asm	/^f0100c47:	81 ea 79 6a 10 f0    	sub    $0xf0106a79,%edx$/;"	l
f0100c4d	obj/kern/kernel.asm	/^f0100c4d:	39 d0                	cmp    %edx,%eax$/;"	l
f0100c4f	obj/kern/kernel.asm	/^f0100c4f:	73 08                	jae    f0100c59 <debuginfo_eip+0x10c>$/;"	l
f0100c51	obj/kern/kernel.asm	/^f0100c51:	05 79 6a 10 f0       	add    $0xf0106a79,%eax$/;"	l
f0100c56	obj/kern/kernel.asm	/^f0100c56:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0100c59	obj/kern/kernel.asm	/^f0100c59:	6b c9 0c             	imul   $0xc,%ecx,%ecx$/;"	l
f0100c5c	obj/kern/kernel.asm	/^f0100c5c:	8b 81 10 23 10 f0    	mov    -0xfefdcf0(%ecx),%eax$/;"	l
f0100c62	obj/kern/kernel.asm	/^f0100c62:	89 43 10             	mov    %eax,0x10(%ebx)$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	29 c6                	sub    %eax,%esi$/;"	l
f0100c67	obj/kern/kernel.asm	/^f0100c67:	eb 0c                	jmp    f0100c75 <debuginfo_eip+0x128>$/;"	l
f0100c69	obj/kern/kernel.asm	/^f0100c69:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0100c6c	obj/kern/kernel.asm	/^f0100c6c:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100c6f	obj/kern/kernel.asm	/^f0100c6f:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0100c72	obj/kern/kernel.asm	/^f0100c72:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0100c75	obj/kern/kernel.asm	/^f0100c75:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100c78	obj/kern/kernel.asm	/^f0100c78:	6a 3a                	push   $0x3a$/;"	l
f0100c7a	obj/kern/kernel.asm	/^f0100c7a:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0100c7d	obj/kern/kernel.asm	/^f0100c7d:	e8 9d 08 00 00       	call   f010151f <strfind>$/;"	l
f0100c82	obj/kern/kernel.asm	/^f0100c82:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f0100c85	obj/kern/kernel.asm	/^f0100c85:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f0100c88	obj/kern/kernel.asm	/^f0100c88:	89 7d dc             	mov    %edi,-0x24(%ebp)$/;"	l
f0100c8b	obj/kern/kernel.asm	/^f0100c8b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0100c8e	obj/kern/kernel.asm	/^f0100c8e:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100c94	obj/kern/kernel.asm	/^f0100c94:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0100c97	obj/kern/kernel.asm	/^f0100c97:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100c9a	obj/kern/kernel.asm	/^f0100c9a:	56                   	push   %esi$/;"	l
f0100c9b	obj/kern/kernel.asm	/^f0100c9b:	6a 44                	push   $0x44$/;"	l
f0100c9d	obj/kern/kernel.asm	/^f0100c9d:	b8 08 23 10 f0       	mov    $0xf0102308,%eax$/;"	l
f0100ca2	obj/kern/kernel.asm	/^f0100ca2:	e8 81 fd ff ff       	call   f0100a28 <stab_binsearch>$/;"	l
f0100ca7	obj/kern/kernel.asm	/^f0100ca7:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100caa	obj/kern/kernel.asm	/^f0100caa:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100cad	obj/kern/kernel.asm	/^f0100cad:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100cb2	obj/kern/kernel.asm	/^f0100cb2:	3b 55 d8             	cmp    -0x28(%ebp),%edx$/;"	l
f0100cb5	obj/kern/kernel.asm	/^f0100cb5:	7f 7e                	jg     f0100d35 <debuginfo_eip+0x1e8>$/;"	l
f0100cb7	obj/kern/kernel.asm	/^f0100cb7:	6b c2 0c             	imul   $0xc,%edx,%eax$/;"	l
f0100cba	obj/kern/kernel.asm	/^f0100cba:	05 08 23 10 f0       	add    $0xf0102308,%eax$/;"	l
f0100cbf	obj/kern/kernel.asm	/^f0100cbf:	0f b7 48 06          	movzwl 0x6(%eax),%ecx$/;"	l
f0100cc3	obj/kern/kernel.asm	/^f0100cc3:	89 4b 04             	mov    %ecx,0x4(%ebx)$/;"	l
f0100cc6	obj/kern/kernel.asm	/^f0100cc6:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0100cc9	obj/kern/kernel.asm	/^f0100cc9:	83 c0 08             	add    $0x8,%eax$/;"	l
f0100ccc	obj/kern/kernel.asm	/^f0100ccc:	eb 04                	jmp    f0100cd2 <debuginfo_eip+0x185>$/;"	l
f0100cce	obj/kern/kernel.asm	/^f0100cce:	4a                   	dec    %edx$/;"	l
f0100ccf	obj/kern/kernel.asm	/^f0100ccf:	83 e8 0c             	sub    $0xc,%eax$/;"	l
f0100cd2	obj/kern/kernel.asm	/^f0100cd2:	39 f2                	cmp    %esi,%edx$/;"	l
f0100cd4	obj/kern/kernel.asm	/^f0100cd4:	7c 1b                	jl     f0100cf1 <debuginfo_eip+0x1a4>$/;"	l
f0100cd6	obj/kern/kernel.asm	/^f0100cd6:	8a 48 fc             	mov    -0x4(%eax),%cl$/;"	l
f0100cd9	obj/kern/kernel.asm	/^f0100cd9:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0100cdc	obj/kern/kernel.asm	/^f0100cdc:	74 5f                	je     f0100d3d <debuginfo_eip+0x1f0>$/;"	l
f0100cde	obj/kern/kernel.asm	/^f0100cde:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f0100ce1	obj/kern/kernel.asm	/^f0100ce1:	75 eb                	jne    f0100cce <debuginfo_eip+0x181>$/;"	l
f0100ce3	obj/kern/kernel.asm	/^f0100ce3:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0100ce6	obj/kern/kernel.asm	/^f0100ce6:	74 e6                	je     f0100cce <debuginfo_eip+0x181>$/;"	l
f0100ce8	obj/kern/kernel.asm	/^f0100ce8:	eb 53                	jmp    f0100d3d <debuginfo_eip+0x1f0>$/;"	l
f0100cea	obj/kern/kernel.asm	/^f0100cea:	05 79 6a 10 f0       	add    $0xf0106a79,%eax$/;"	l
f0100cef	obj/kern/kernel.asm	/^f0100cef:	89 03                	mov    %eax,(%ebx)$/;"	l
f0100cf1	obj/kern/kernel.asm	/^f0100cf1:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100cf4	obj/kern/kernel.asm	/^f0100cf4:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0100cf7	obj/kern/kernel.asm	/^f0100cf7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100cfc	obj/kern/kernel.asm	/^f0100cfc:	39 ca                	cmp    %ecx,%edx$/;"	l
f0100cfe	obj/kern/kernel.asm	/^f0100cfe:	7d 35                	jge    f0100d35 <debuginfo_eip+0x1e8>$/;"	l
f0100d00	obj/kern/kernel.asm	/^f0100d00:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f0100d03	obj/kern/kernel.asm	/^f0100d03:	6b d0 0c             	imul   $0xc,%eax,%edx$/;"	l
f0100d06	obj/kern/kernel.asm	/^f0100d06:	81 c2 0c 23 10 f0    	add    $0xf010230c,%edx$/;"	l
f0100d0c	obj/kern/kernel.asm	/^f0100d0c:	89 ce                	mov    %ecx,%esi$/;"	l
f0100d0e	obj/kern/kernel.asm	/^f0100d0e:	eb 04                	jmp    f0100d14 <debuginfo_eip+0x1c7>$/;"	l
f0100d10	obj/kern/kernel.asm	/^f0100d10:	ff 43 14             	incl   0x14(%ebx)$/;"	l
f0100d13	obj/kern/kernel.asm	/^f0100d13:	40                   	inc    %eax$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	39 f0                	cmp    %esi,%eax$/;"	l
f0100d16	obj/kern/kernel.asm	/^f0100d16:	7d 18                	jge    f0100d30 <debuginfo_eip+0x1e3>$/;"	l
f0100d18	obj/kern/kernel.asm	/^f0100d18:	8a 0a                	mov    (%edx),%cl$/;"	l
f0100d1a	obj/kern/kernel.asm	/^f0100d1a:	83 c2 0c             	add    $0xc,%edx$/;"	l
f0100d1d	obj/kern/kernel.asm	/^f0100d1d:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f0100d20	obj/kern/kernel.asm	/^f0100d20:	74 ee                	je     f0100d10 <debuginfo_eip+0x1c3>$/;"	l
f0100d22	obj/kern/kernel.asm	/^f0100d22:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d27	obj/kern/kernel.asm	/^f0100d27:	eb 0c                	jmp    f0100d35 <debuginfo_eip+0x1e8>$/;"	l
f0100d29	obj/kern/kernel.asm	/^f0100d29:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100d2e	obj/kern/kernel.asm	/^f0100d2e:	eb 05                	jmp    f0100d35 <debuginfo_eip+0x1e8>$/;"	l
f0100d30	obj/kern/kernel.asm	/^f0100d30:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d35	obj/kern/kernel.asm	/^f0100d35:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100d38	obj/kern/kernel.asm	/^f0100d38:	5b                   	pop    %ebx$/;"	l
f0100d39	obj/kern/kernel.asm	/^f0100d39:	5e                   	pop    %esi$/;"	l
f0100d3a	obj/kern/kernel.asm	/^f0100d3a:	5f                   	pop    %edi$/;"	l
f0100d3b	obj/kern/kernel.asm	/^f0100d3b:	c9                   	leave  $/;"	l
f0100d3c	obj/kern/kernel.asm	/^f0100d3c:	c3                   	ret    $/;"	l
f0100d3d	obj/kern/kernel.asm	/^f0100d3d:	6b d2 0c             	imul   $0xc,%edx,%edx$/;"	l
f0100d40	obj/kern/kernel.asm	/^f0100d40:	8b 82 08 23 10 f0    	mov    -0xfefdcf8(%edx),%eax$/;"	l
f0100d46	obj/kern/kernel.asm	/^f0100d46:	ba d6 dd 10 f0       	mov    $0xf010ddd6,%edx$/;"	l
f0100d4b	obj/kern/kernel.asm	/^f0100d4b:	81 ea 79 6a 10 f0    	sub    $0xf0106a79,%edx$/;"	l
f0100d51	obj/kern/kernel.asm	/^f0100d51:	39 d0                	cmp    %edx,%eax$/;"	l
f0100d53	obj/kern/kernel.asm	/^f0100d53:	72 95                	jb     f0100cea <debuginfo_eip+0x19d>$/;"	l
f0100d55	obj/kern/kernel.asm	/^f0100d55:	eb 9a                	jmp    f0100cf1 <debuginfo_eip+0x1a4>$/;"	l
f0100d58	obj/kern/kernel.asm	/^f0100d58 <printnum>:$/;"	l
f0100d58	obj/kern/kernel.asm	/^f0100d58:	55                   	push   %ebp$/;"	l
f0100d59	obj/kern/kernel.asm	/^f0100d59:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d5b	obj/kern/kernel.asm	/^f0100d5b:	57                   	push   %edi$/;"	l
f0100d5c	obj/kern/kernel.asm	/^f0100d5c:	56                   	push   %esi$/;"	l
f0100d5d	obj/kern/kernel.asm	/^f0100d5d:	53                   	push   %ebx$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100d61	obj/kern/kernel.asm	/^f0100d61:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100d64	obj/kern/kernel.asm	/^f0100d64:	89 d6                	mov    %edx,%esi$/;"	l
f0100d66	obj/kern/kernel.asm	/^f0100d66:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100d69	obj/kern/kernel.asm	/^f0100d69:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100d6c	obj/kern/kernel.asm	/^f0100d6c:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100d6f	obj/kern/kernel.asm	/^f0100d6f:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0100d72	obj/kern/kernel.asm	/^f0100d72:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100d75	obj/kern/kernel.asm	/^f0100d75:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0100d78	obj/kern/kernel.asm	/^f0100d78:	8b 7d 18             	mov    0x18(%ebp),%edi$/;"	l
f0100d7b	obj/kern/kernel.asm	/^f0100d7b:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100d7e	obj/kern/kernel.asm	/^f0100d7e:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
f0100d85	obj/kern/kernel.asm	/^f0100d85:	39 55 d4             	cmp    %edx,-0x2c(%ebp)$/;"	l
f0100d88	obj/kern/kernel.asm	/^f0100d88:	72 0c                	jb     f0100d96 <printnum+0x3e>$/;"	l
f0100d8a	obj/kern/kernel.asm	/^f0100d8a:	3b 45 d8             	cmp    -0x28(%ebp),%eax$/;"	l
f0100d8d	obj/kern/kernel.asm	/^f0100d8d:	76 07                	jbe    f0100d96 <printnum+0x3e>$/;"	l
f0100d8f	obj/kern/kernel.asm	/^f0100d8f:	4b                   	dec    %ebx$/;"	l
f0100d90	obj/kern/kernel.asm	/^f0100d90:	85 db                	test   %ebx,%ebx$/;"	l
f0100d92	obj/kern/kernel.asm	/^f0100d92:	7f 31                	jg     f0100dc5 <printnum+0x6d>$/;"	l
f0100d94	obj/kern/kernel.asm	/^f0100d94:	eb 3f                	jmp    f0100dd5 <printnum+0x7d>$/;"	l
f0100d96	obj/kern/kernel.asm	/^f0100d96:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100d99	obj/kern/kernel.asm	/^f0100d99:	57                   	push   %edi$/;"	l
f0100d9a	obj/kern/kernel.asm	/^f0100d9a:	4b                   	dec    %ebx$/;"	l
f0100d9b	obj/kern/kernel.asm	/^f0100d9b:	53                   	push   %ebx$/;"	l
f0100d9c	obj/kern/kernel.asm	/^f0100d9c:	50                   	push   %eax$/;"	l
f0100d9d	obj/kern/kernel.asm	/^f0100d9d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100da0	obj/kern/kernel.asm	/^f0100da0:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0100da3	obj/kern/kernel.asm	/^f0100da3:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0100da6	obj/kern/kernel.asm	/^f0100da6:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0100da9	obj/kern/kernel.asm	/^f0100da9:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0100dac	obj/kern/kernel.asm	/^f0100dac:	e8 97 09 00 00       	call   f0101748 <__udivdi3>$/;"	l
f0100db1	obj/kern/kernel.asm	/^f0100db1:	83 c4 18             	add    $0x18,%esp$/;"	l
f0100db4	obj/kern/kernel.asm	/^f0100db4:	52                   	push   %edx$/;"	l
f0100db5	obj/kern/kernel.asm	/^f0100db5:	50                   	push   %eax$/;"	l
f0100db6	obj/kern/kernel.asm	/^f0100db6:	89 f2                	mov    %esi,%edx$/;"	l
f0100db8	obj/kern/kernel.asm	/^f0100db8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100dbb	obj/kern/kernel.asm	/^f0100dbb:	e8 98 ff ff ff       	call   f0100d58 <printnum>$/;"	l
f0100dc0	obj/kern/kernel.asm	/^f0100dc0:	83 c4 20             	add    $0x20,%esp$/;"	l
f0100dc3	obj/kern/kernel.asm	/^f0100dc3:	eb 10                	jmp    f0100dd5 <printnum+0x7d>$/;"	l
f0100dc5	obj/kern/kernel.asm	/^f0100dc5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100dc8	obj/kern/kernel.asm	/^f0100dc8:	56                   	push   %esi$/;"	l
f0100dc9	obj/kern/kernel.asm	/^f0100dc9:	57                   	push   %edi$/;"	l
f0100dca	obj/kern/kernel.asm	/^f0100dca:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f0100dcd	obj/kern/kernel.asm	/^f0100dcd:	4b                   	dec    %ebx$/;"	l
f0100dce	obj/kern/kernel.asm	/^f0100dce:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100dd1	obj/kern/kernel.asm	/^f0100dd1:	85 db                	test   %ebx,%ebx$/;"	l
f0100dd3	obj/kern/kernel.asm	/^f0100dd3:	7f f0                	jg     f0100dc5 <printnum+0x6d>$/;"	l
f0100dd5	obj/kern/kernel.asm	/^f0100dd5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100dd8	obj/kern/kernel.asm	/^f0100dd8:	56                   	push   %esi$/;"	l
f0100dd9	obj/kern/kernel.asm	/^f0100dd9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100ddc	obj/kern/kernel.asm	/^f0100ddc:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0100ddf	obj/kern/kernel.asm	/^f0100ddf:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0100de2	obj/kern/kernel.asm	/^f0100de2:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0100de5	obj/kern/kernel.asm	/^f0100de5:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0100de8	obj/kern/kernel.asm	/^f0100de8:	e8 77 0a 00 00       	call   f0101864 <__umoddi3>$/;"	l
f0100ded	obj/kern/kernel.asm	/^f0100ded:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100df0	obj/kern/kernel.asm	/^f0100df0:	0f be 80 f5 20 10 f0 	movsbl -0xfefdf0b(%eax),%eax$/;"	l
f0100df7	obj/kern/kernel.asm	/^f0100df7:	50                   	push   %eax$/;"	l
f0100df8	obj/kern/kernel.asm	/^f0100df8:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f0100dfb	obj/kern/kernel.asm	/^f0100dfb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100dfe	obj/kern/kernel.asm	/^f0100dfe:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100e01	obj/kern/kernel.asm	/^f0100e01:	5b                   	pop    %ebx$/;"	l
f0100e02	obj/kern/kernel.asm	/^f0100e02:	5e                   	pop    %esi$/;"	l
f0100e03	obj/kern/kernel.asm	/^f0100e03:	5f                   	pop    %edi$/;"	l
f0100e04	obj/kern/kernel.asm	/^f0100e04:	c9                   	leave  $/;"	l
f0100e05	obj/kern/kernel.asm	/^f0100e05:	c3                   	ret    $/;"	l
f0100e06	obj/kern/kernel.asm	/^f0100e06 <getuint>:$/;"	l
f0100e06	obj/kern/kernel.asm	/^f0100e06:	55                   	push   %ebp$/;"	l
f0100e07	obj/kern/kernel.asm	/^f0100e07:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e09	obj/kern/kernel.asm	/^f0100e09:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0100e0c	obj/kern/kernel.asm	/^f0100e0c:	7e 0e                	jle    f0100e1c <getuint+0x16>$/;"	l
f0100e0e	obj/kern/kernel.asm	/^f0100e0e:	8b 10                	mov    (%eax),%edx$/;"	l
f0100e10	obj/kern/kernel.asm	/^f0100e10:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0100e13	obj/kern/kernel.asm	/^f0100e13:	89 08                	mov    %ecx,(%eax)$/;"	l
f0100e15	obj/kern/kernel.asm	/^f0100e15:	8b 02                	mov    (%edx),%eax$/;"	l
f0100e17	obj/kern/kernel.asm	/^f0100e17:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0100e1a	obj/kern/kernel.asm	/^f0100e1a:	eb 22                	jmp    f0100e3e <getuint+0x38>$/;"	l
f0100e1c	obj/kern/kernel.asm	/^f0100e1c:	85 d2                	test   %edx,%edx$/;"	l
f0100e1e	obj/kern/kernel.asm	/^f0100e1e:	74 10                	je     f0100e30 <getuint+0x2a>$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	8b 10                	mov    (%eax),%edx$/;"	l
f0100e22	obj/kern/kernel.asm	/^f0100e22:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0100e25	obj/kern/kernel.asm	/^f0100e25:	89 08                	mov    %ecx,(%eax)$/;"	l
f0100e27	obj/kern/kernel.asm	/^f0100e27:	8b 02                	mov    (%edx),%eax$/;"	l
f0100e29	obj/kern/kernel.asm	/^f0100e29:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100e2e	obj/kern/kernel.asm	/^f0100e2e:	eb 0e                	jmp    f0100e3e <getuint+0x38>$/;"	l
f0100e30	obj/kern/kernel.asm	/^f0100e30:	8b 10                	mov    (%eax),%edx$/;"	l
f0100e32	obj/kern/kernel.asm	/^f0100e32:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0100e35	obj/kern/kernel.asm	/^f0100e35:	89 08                	mov    %ecx,(%eax)$/;"	l
f0100e37	obj/kern/kernel.asm	/^f0100e37:	8b 02                	mov    (%edx),%eax$/;"	l
f0100e39	obj/kern/kernel.asm	/^f0100e39:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100e3e	obj/kern/kernel.asm	/^f0100e3e:	c9                   	leave  $/;"	l
f0100e3f	obj/kern/kernel.asm	/^f0100e3f:	c3                   	ret    $/;"	l
f0100e40	obj/kern/kernel.asm	/^f0100e40 <getint>:$/;"	l
f0100e40	obj/kern/kernel.asm	/^f0100e40:	55                   	push   %ebp$/;"	l
f0100e41	obj/kern/kernel.asm	/^f0100e41:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e43	obj/kern/kernel.asm	/^f0100e43:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0100e46	obj/kern/kernel.asm	/^f0100e46:	7e 0e                	jle    f0100e56 <getint+0x16>$/;"	l
f0100e48	obj/kern/kernel.asm	/^f0100e48:	8b 10                	mov    (%eax),%edx$/;"	l
f0100e4a	obj/kern/kernel.asm	/^f0100e4a:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0100e4d	obj/kern/kernel.asm	/^f0100e4d:	89 08                	mov    %ecx,(%eax)$/;"	l
f0100e4f	obj/kern/kernel.asm	/^f0100e4f:	8b 02                	mov    (%edx),%eax$/;"	l
f0100e51	obj/kern/kernel.asm	/^f0100e51:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0100e54	obj/kern/kernel.asm	/^f0100e54:	eb 1a                	jmp    f0100e70 <getint+0x30>$/;"	l
f0100e56	obj/kern/kernel.asm	/^f0100e56:	85 d2                	test   %edx,%edx$/;"	l
f0100e58	obj/kern/kernel.asm	/^f0100e58:	74 0c                	je     f0100e66 <getint+0x26>$/;"	l
f0100e5a	obj/kern/kernel.asm	/^f0100e5a:	8b 10                	mov    (%eax),%edx$/;"	l
f0100e5c	obj/kern/kernel.asm	/^f0100e5c:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0100e5f	obj/kern/kernel.asm	/^f0100e5f:	89 08                	mov    %ecx,(%eax)$/;"	l
f0100e61	obj/kern/kernel.asm	/^f0100e61:	8b 02                	mov    (%edx),%eax$/;"	l
f0100e63	obj/kern/kernel.asm	/^f0100e63:	99                   	cltd   $/;"	l
f0100e64	obj/kern/kernel.asm	/^f0100e64:	eb 0a                	jmp    f0100e70 <getint+0x30>$/;"	l
f0100e66	obj/kern/kernel.asm	/^f0100e66:	8b 10                	mov    (%eax),%edx$/;"	l
f0100e68	obj/kern/kernel.asm	/^f0100e68:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0100e6b	obj/kern/kernel.asm	/^f0100e6b:	89 08                	mov    %ecx,(%eax)$/;"	l
f0100e6d	obj/kern/kernel.asm	/^f0100e6d:	8b 02                	mov    (%edx),%eax$/;"	l
f0100e6f	obj/kern/kernel.asm	/^f0100e6f:	99                   	cltd   $/;"	l
f0100e70	obj/kern/kernel.asm	/^f0100e70:	c9                   	leave  $/;"	l
f0100e71	obj/kern/kernel.asm	/^f0100e71:	c3                   	ret    $/;"	l
f0100e72	obj/kern/kernel.asm	/^f0100e72 <sprintputch>:$/;"	l
f0100e72	obj/kern/kernel.asm	/^f0100e72:	55                   	push   %ebp$/;"	l
f0100e73	obj/kern/kernel.asm	/^f0100e73:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e75	obj/kern/kernel.asm	/^f0100e75:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100e78	obj/kern/kernel.asm	/^f0100e78:	ff 40 08             	incl   0x8(%eax)$/;"	l
f0100e7b	obj/kern/kernel.asm	/^f0100e7b:	8b 10                	mov    (%eax),%edx$/;"	l
f0100e7d	obj/kern/kernel.asm	/^f0100e7d:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0100e80	obj/kern/kernel.asm	/^f0100e80:	73 08                	jae    f0100e8a <sprintputch+0x18>$/;"	l
f0100e82	obj/kern/kernel.asm	/^f0100e82:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0100e85	obj/kern/kernel.asm	/^f0100e85:	88 0a                	mov    %cl,(%edx)$/;"	l
f0100e87	obj/kern/kernel.asm	/^f0100e87:	42                   	inc    %edx$/;"	l
f0100e88	obj/kern/kernel.asm	/^f0100e88:	89 10                	mov    %edx,(%eax)$/;"	l
f0100e8a	obj/kern/kernel.asm	/^f0100e8a:	c9                   	leave  $/;"	l
f0100e8b	obj/kern/kernel.asm	/^f0100e8b:	c3                   	ret    $/;"	l
f0100e8c	obj/kern/kernel.asm	/^f0100e8c <printfmt>:$/;"	l
f0100e8c	obj/kern/kernel.asm	/^f0100e8c:	55                   	push   %ebp$/;"	l
f0100e8d	obj/kern/kernel.asm	/^f0100e8d:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e8f	obj/kern/kernel.asm	/^f0100e8f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e92	obj/kern/kernel.asm	/^f0100e92:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0100e95	obj/kern/kernel.asm	/^f0100e95:	50                   	push   %eax$/;"	l
f0100e96	obj/kern/kernel.asm	/^f0100e96:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100e99	obj/kern/kernel.asm	/^f0100e99:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100e9c	obj/kern/kernel.asm	/^f0100e9c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100e9f	obj/kern/kernel.asm	/^f0100e9f:	e8 05 00 00 00       	call   f0100ea9 <vprintfmt>$/;"	l
f0100ea4	obj/kern/kernel.asm	/^f0100ea4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ea7	obj/kern/kernel.asm	/^f0100ea7:	c9                   	leave  $/;"	l
f0100ea8	obj/kern/kernel.asm	/^f0100ea8:	c3                   	ret    $/;"	l
f0100ea9	obj/kern/kernel.asm	/^f0100ea9 <vprintfmt>:$/;"	l
f0100ea9	obj/kern/kernel.asm	/^f0100ea9:	55                   	push   %ebp$/;"	l
f0100eaa	obj/kern/kernel.asm	/^f0100eaa:	89 e5                	mov    %esp,%ebp$/;"	l
f0100eac	obj/kern/kernel.asm	/^f0100eac:	57                   	push   %edi$/;"	l
f0100ead	obj/kern/kernel.asm	/^f0100ead:	56                   	push   %esi$/;"	l
f0100eae	obj/kern/kernel.asm	/^f0100eae:	53                   	push   %ebx$/;"	l
f0100eaf	obj/kern/kernel.asm	/^f0100eaf:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100eb2	obj/kern/kernel.asm	/^f0100eb2:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0100eb5	obj/kern/kernel.asm	/^f0100eb5:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0100eb8	obj/kern/kernel.asm	/^f0100eb8:	eb 13                	jmp    f0100ecd <vprintfmt+0x24>$/;"	l
f0100eba	obj/kern/kernel.asm	/^f0100eba:	85 c0                	test   %eax,%eax$/;"	l
f0100ebc	obj/kern/kernel.asm	/^f0100ebc:	0f 84 6d 03 00 00    	je     f010122f <vprintfmt+0x386>$/;"	l
f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ec5	obj/kern/kernel.asm	/^f0100ec5:	57                   	push   %edi$/;"	l
f0100ec6	obj/kern/kernel.asm	/^f0100ec6:	50                   	push   %eax$/;"	l
f0100ec7	obj/kern/kernel.asm	/^f0100ec7:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0100eca	obj/kern/kernel.asm	/^f0100eca:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ecd	obj/kern/kernel.asm	/^f0100ecd:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0100ed0	obj/kern/kernel.asm	/^f0100ed0:	46                   	inc    %esi$/;"	l
f0100ed1	obj/kern/kernel.asm	/^f0100ed1:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0100ed4	obj/kern/kernel.asm	/^f0100ed4:	75 e4                	jne    f0100eba <vprintfmt+0x11>$/;"	l
f0100ed6	obj/kern/kernel.asm	/^f0100ed6:	c6 45 dc 20          	movb   $0x20,-0x24(%ebp)$/;"	l
f0100eda	obj/kern/kernel.asm	/^f0100eda:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0100ee1	obj/kern/kernel.asm	/^f0100ee1:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f0100ee8	obj/kern/kernel.asm	/^f0100ee8:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
f0100eef	obj/kern/kernel.asm	/^f0100eef:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0100ef4	obj/kern/kernel.asm	/^f0100ef4:	eb 28                	jmp    f0100f1e <vprintfmt+0x75>$/;"	l
f0100ef6	obj/kern/kernel.asm	/^f0100ef6:	89 de                	mov    %ebx,%esi$/;"	l
f0100ef8	obj/kern/kernel.asm	/^f0100ef8:	c6 45 dc 2d          	movb   $0x2d,-0x24(%ebp)$/;"	l
f0100efc	obj/kern/kernel.asm	/^f0100efc:	eb 20                	jmp    f0100f1e <vprintfmt+0x75>$/;"	l
f0100efe	obj/kern/kernel.asm	/^f0100efe:	89 de                	mov    %ebx,%esi$/;"	l
f0100f00	obj/kern/kernel.asm	/^f0100f00:	c6 45 dc 30          	movb   $0x30,-0x24(%ebp)$/;"	l
f0100f04	obj/kern/kernel.asm	/^f0100f04:	eb 18                	jmp    f0100f1e <vprintfmt+0x75>$/;"	l
f0100f06	obj/kern/kernel.asm	/^f0100f06:	89 de                	mov    %ebx,%esi$/;"	l
f0100f08	obj/kern/kernel.asm	/^f0100f08:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	eb 0d                	jmp    f0100f1e <vprintfmt+0x75>$/;"	l
f0100f11	obj/kern/kernel.asm	/^f0100f11:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0100f14	obj/kern/kernel.asm	/^f0100f14:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100f17	obj/kern/kernel.asm	/^f0100f17:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f0100f1e	obj/kern/kernel.asm	/^f0100f1e:	8a 06                	mov    (%esi),%al$/;"	l
f0100f20	obj/kern/kernel.asm	/^f0100f20:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0100f23	obj/kern/kernel.asm	/^f0100f23:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0100f26	obj/kern/kernel.asm	/^f0100f26:	83 e8 23             	sub    $0x23,%eax$/;"	l
f0100f29	obj/kern/kernel.asm	/^f0100f29:	3c 55                	cmp    $0x55,%al$/;"	l
f0100f2b	obj/kern/kernel.asm	/^f0100f2b:	0f 87 e0 02 00 00    	ja     f0101211 <vprintfmt+0x368>$/;"	l
f0100f31	obj/kern/kernel.asm	/^f0100f31:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100f34	obj/kern/kernel.asm	/^f0100f34:	ff 24 85 84 21 10 f0 	jmp    *-0xfefde7c(,%eax,4)$/;"	l
f0100f3b	obj/kern/kernel.asm	/^f0100f3b:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0100f3e	obj/kern/kernel.asm	/^f0100f3e:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0100f41	obj/kern/kernel.asm	/^f0100f41:	0f be 03             	movsbl (%ebx),%eax$/;"	l
f0100f44	obj/kern/kernel.asm	/^f0100f44:	8d 50 d0             	lea    -0x30(%eax),%edx$/;"	l
f0100f47	obj/kern/kernel.asm	/^f0100f47:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f0100f4a	obj/kern/kernel.asm	/^f0100f4a:	77 44                	ja     f0100f90 <vprintfmt+0xe7>$/;"	l
f0100f4c	obj/kern/kernel.asm	/^f0100f4c:	89 de                	mov    %ebx,%esi$/;"	l
f0100f4e	obj/kern/kernel.asm	/^f0100f4e:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0100f51	obj/kern/kernel.asm	/^f0100f51:	46                   	inc    %esi$/;"	l
f0100f52	obj/kern/kernel.asm	/^f0100f52:	8d 14 92             	lea    (%edx,%edx,4),%edx$/;"	l
f0100f55	obj/kern/kernel.asm	/^f0100f55:	8d 54 50 d0          	lea    -0x30(%eax,%edx,2),%edx$/;"	l
f0100f59	obj/kern/kernel.asm	/^f0100f59:	0f be 06             	movsbl (%esi),%eax$/;"	l
f0100f5c	obj/kern/kernel.asm	/^f0100f5c:	8d 58 d0             	lea    -0x30(%eax),%ebx$/;"	l
f0100f5f	obj/kern/kernel.asm	/^f0100f5f:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f0100f62	obj/kern/kernel.asm	/^f0100f62:	76 ed                	jbe    f0100f51 <vprintfmt+0xa8>$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0100f67	obj/kern/kernel.asm	/^f0100f67:	eb 29                	jmp    f0100f92 <vprintfmt+0xe9>$/;"	l
f0100f69	obj/kern/kernel.asm	/^f0100f69:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100f6c	obj/kern/kernel.asm	/^f0100f6c:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0100f6f	obj/kern/kernel.asm	/^f0100f6f:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0100f72	obj/kern/kernel.asm	/^f0100f72:	8b 00                	mov    (%eax),%eax$/;"	l
f0100f74	obj/kern/kernel.asm	/^f0100f74:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0100f77	obj/kern/kernel.asm	/^f0100f77:	89 de                	mov    %ebx,%esi$/;"	l
f0100f79	obj/kern/kernel.asm	/^f0100f79:	eb 17                	jmp    f0100f92 <vprintfmt+0xe9>$/;"	l
f0100f7b	obj/kern/kernel.asm	/^f0100f7b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0100f7f	obj/kern/kernel.asm	/^f0100f7f:	78 85                	js     f0100f06 <vprintfmt+0x5d>$/;"	l
f0100f81	obj/kern/kernel.asm	/^f0100f81:	89 de                	mov    %ebx,%esi$/;"	l
f0100f83	obj/kern/kernel.asm	/^f0100f83:	eb 99                	jmp    f0100f1e <vprintfmt+0x75>$/;"	l
f0100f85	obj/kern/kernel.asm	/^f0100f85:	89 de                	mov    %ebx,%esi$/;"	l
f0100f87	obj/kern/kernel.asm	/^f0100f87:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)$/;"	l
f0100f8e	obj/kern/kernel.asm	/^f0100f8e:	eb 8e                	jmp    f0100f1e <vprintfmt+0x75>$/;"	l
f0100f90	obj/kern/kernel.asm	/^f0100f90:	89 de                	mov    %ebx,%esi$/;"	l
f0100f92	obj/kern/kernel.asm	/^f0100f92:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0100f96	obj/kern/kernel.asm	/^f0100f96:	79 86                	jns    f0100f1e <vprintfmt+0x75>$/;"	l
f0100f98	obj/kern/kernel.asm	/^f0100f98:	e9 74 ff ff ff       	jmp    f0100f11 <vprintfmt+0x68>$/;"	l
f0100f9d	obj/kern/kernel.asm	/^f0100f9d:	41                   	inc    %ecx$/;"	l
f0100f9e	obj/kern/kernel.asm	/^f0100f9e:	89 de                	mov    %ebx,%esi$/;"	l
f0100fa0	obj/kern/kernel.asm	/^f0100fa0:	e9 79 ff ff ff       	jmp    f0100f1e <vprintfmt+0x75>$/;"	l
f0100fa5	obj/kern/kernel.asm	/^f0100fa5:	89 5d d8             	mov    %ebx,-0x28(%ebp)$/;"	l
f0100fa8	obj/kern/kernel.asm	/^f0100fa8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100fab	obj/kern/kernel.asm	/^f0100fab:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0100fae	obj/kern/kernel.asm	/^f0100fae:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0100fb1	obj/kern/kernel.asm	/^f0100fb1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100fb4	obj/kern/kernel.asm	/^f0100fb4:	57                   	push   %edi$/;"	l
f0100fb5	obj/kern/kernel.asm	/^f0100fb5:	ff 30                	pushl  (%eax)$/;"	l
f0100fb7	obj/kern/kernel.asm	/^f0100fb7:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0100fba	obj/kern/kernel.asm	/^f0100fba:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fbd	obj/kern/kernel.asm	/^f0100fbd:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f0100fc0	obj/kern/kernel.asm	/^f0100fc0:	e9 08 ff ff ff       	jmp    f0100ecd <vprintfmt+0x24>$/;"	l
f0100fc5	obj/kern/kernel.asm	/^f0100fc5:	89 5d d8             	mov    %ebx,-0x28(%ebp)$/;"	l
f0100fc8	obj/kern/kernel.asm	/^f0100fc8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100fcb	obj/kern/kernel.asm	/^f0100fcb:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0100fce	obj/kern/kernel.asm	/^f0100fce:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0100fd1	obj/kern/kernel.asm	/^f0100fd1:	8b 00                	mov    (%eax),%eax$/;"	l
f0100fd3	obj/kern/kernel.asm	/^f0100fd3:	85 c0                	test   %eax,%eax$/;"	l
f0100fd5	obj/kern/kernel.asm	/^f0100fd5:	79 02                	jns    f0100fd9 <vprintfmt+0x130>$/;"	l
f0100fd7	obj/kern/kernel.asm	/^f0100fd7:	f7 d8                	neg    %eax$/;"	l
f0100fd9	obj/kern/kernel.asm	/^f0100fd9:	89 c2                	mov    %eax,%edx$/;"	l
f0100fdb	obj/kern/kernel.asm	/^f0100fdb:	83 f8 06             	cmp    $0x6,%eax$/;"	l
f0100fde	obj/kern/kernel.asm	/^f0100fde:	7f 0b                	jg     f0100feb <vprintfmt+0x142>$/;"	l
f0100fe0	obj/kern/kernel.asm	/^f0100fe0:	8b 04 85 dc 22 10 f0 	mov    -0xfefdd24(,%eax,4),%eax$/;"	l
f0100fe7	obj/kern/kernel.asm	/^f0100fe7:	85 c0                	test   %eax,%eax$/;"	l
f0100fe9	obj/kern/kernel.asm	/^f0100fe9:	75 1a                	jne    f0101005 <vprintfmt+0x15c>$/;"	l
f0100feb	obj/kern/kernel.asm	/^f0100feb:	52                   	push   %edx$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	68 0d 21 10 f0       	push   $0xf010210d$/;"	l
f0100ff1	obj/kern/kernel.asm	/^f0100ff1:	57                   	push   %edi$/;"	l
f0100ff2	obj/kern/kernel.asm	/^f0100ff2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100ff5	obj/kern/kernel.asm	/^f0100ff5:	e8 92 fe ff ff       	call   f0100e8c <printfmt>$/;"	l
f0100ffa	obj/kern/kernel.asm	/^f0100ffa:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ffd	obj/kern/kernel.asm	/^f0100ffd:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f0101000	obj/kern/kernel.asm	/^f0101000:	e9 c8 fe ff ff       	jmp    f0100ecd <vprintfmt+0x24>$/;"	l
f0101005	obj/kern/kernel.asm	/^f0101005:	50                   	push   %eax$/;"	l
f0101006	obj/kern/kernel.asm	/^f0101006:	68 16 21 10 f0       	push   $0xf0102116$/;"	l
f010100b	obj/kern/kernel.asm	/^f010100b:	57                   	push   %edi$/;"	l
f010100c	obj/kern/kernel.asm	/^f010100c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010100f	obj/kern/kernel.asm	/^f010100f:	e8 78 fe ff ff       	call   f0100e8c <printfmt>$/;"	l
f0101014	obj/kern/kernel.asm	/^f0101014:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101017	obj/kern/kernel.asm	/^f0101017:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f010101a	obj/kern/kernel.asm	/^f010101a:	e9 ae fe ff ff       	jmp    f0100ecd <vprintfmt+0x24>$/;"	l
f010101f	obj/kern/kernel.asm	/^f010101f:	89 5d d8             	mov    %ebx,-0x28(%ebp)$/;"	l
f0101022	obj/kern/kernel.asm	/^f0101022:	89 de                	mov    %ebx,%esi$/;"	l
f0101024	obj/kern/kernel.asm	/^f0101024:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101027	obj/kern/kernel.asm	/^f0101027:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f010102a	obj/kern/kernel.asm	/^f010102a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010102d	obj/kern/kernel.asm	/^f010102d:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0101030	obj/kern/kernel.asm	/^f0101030:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0101033	obj/kern/kernel.asm	/^f0101033:	8b 00                	mov    (%eax),%eax$/;"	l
f0101035	obj/kern/kernel.asm	/^f0101035:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101038	obj/kern/kernel.asm	/^f0101038:	85 c0                	test   %eax,%eax$/;"	l
f010103a	obj/kern/kernel.asm	/^f010103a:	75 07                	jne    f0101043 <vprintfmt+0x19a>$/;"	l
f010103c	obj/kern/kernel.asm	/^f010103c:	c7 45 d0 06 21 10 f0 	movl   $0xf0102106,-0x30(%ebp)$/;"	l
f0101043	obj/kern/kernel.asm	/^f0101043:	85 db                	test   %ebx,%ebx$/;"	l
f0101045	obj/kern/kernel.asm	/^f0101045:	7e 42                	jle    f0101089 <vprintfmt+0x1e0>$/;"	l
f0101047	obj/kern/kernel.asm	/^f0101047:	80 7d dc 2d          	cmpb   $0x2d,-0x24(%ebp)$/;"	l
f010104b	obj/kern/kernel.asm	/^f010104b:	74 3c                	je     f0101089 <vprintfmt+0x1e0>$/;"	l
f010104d	obj/kern/kernel.asm	/^f010104d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101050	obj/kern/kernel.asm	/^f0101050:	51                   	push   %ecx$/;"	l
f0101051	obj/kern/kernel.asm	/^f0101051:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0101054	obj/kern/kernel.asm	/^f0101054:	e8 3f 03 00 00       	call   f0101398 <strnlen>$/;"	l
f0101059	obj/kern/kernel.asm	/^f0101059:	29 c3                	sub    %eax,%ebx$/;"	l
f010105b	obj/kern/kernel.asm	/^f010105b:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101061	obj/kern/kernel.asm	/^f0101061:	85 db                	test   %ebx,%ebx$/;"	l
f0101063	obj/kern/kernel.asm	/^f0101063:	7e 24                	jle    f0101089 <vprintfmt+0x1e0>$/;"	l
f0101065	obj/kern/kernel.asm	/^f0101065:	0f be 5d dc          	movsbl -0x24(%ebp),%ebx$/;"	l
f0101069	obj/kern/kernel.asm	/^f0101069:	89 75 dc             	mov    %esi,-0x24(%ebp)$/;"	l
f010106c	obj/kern/kernel.asm	/^f010106c:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f010106f	obj/kern/kernel.asm	/^f010106f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101072	obj/kern/kernel.asm	/^f0101072:	57                   	push   %edi$/;"	l
f0101073	obj/kern/kernel.asm	/^f0101073:	53                   	push   %ebx$/;"	l
f0101074	obj/kern/kernel.asm	/^f0101074:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101077	obj/kern/kernel.asm	/^f0101077:	4e                   	dec    %esi$/;"	l
f0101078	obj/kern/kernel.asm	/^f0101078:	83 c4 10             	add    $0x10,%esp$/;"	l
f010107b	obj/kern/kernel.asm	/^f010107b:	85 f6                	test   %esi,%esi$/;"	l
f010107d	obj/kern/kernel.asm	/^f010107d:	7f f0                	jg     f010106f <vprintfmt+0x1c6>$/;"	l
f010107f	obj/kern/kernel.asm	/^f010107f:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0101089	obj/kern/kernel.asm	/^f0101089:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f010108c	obj/kern/kernel.asm	/^f010108c:	0f be 02             	movsbl (%edx),%eax$/;"	l
f010108f	obj/kern/kernel.asm	/^f010108f:	85 c0                	test   %eax,%eax$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	75 47                	jne    f01010da <vprintfmt+0x231>$/;"	l
f0101093	obj/kern/kernel.asm	/^f0101093:	eb 37                	jmp    f01010cc <vprintfmt+0x223>$/;"	l
f0101095	obj/kern/kernel.asm	/^f0101095:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0101099	obj/kern/kernel.asm	/^f0101099:	74 16                	je     f01010b1 <vprintfmt+0x208>$/;"	l
f010109b	obj/kern/kernel.asm	/^f010109b:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f010109e	obj/kern/kernel.asm	/^f010109e:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f01010a1	obj/kern/kernel.asm	/^f01010a1:	76 0e                	jbe    f01010b1 <vprintfmt+0x208>$/;"	l
f01010a3	obj/kern/kernel.asm	/^f01010a3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01010a6	obj/kern/kernel.asm	/^f01010a6:	57                   	push   %edi$/;"	l
f01010a7	obj/kern/kernel.asm	/^f01010a7:	6a 3f                	push   $0x3f$/;"	l
f01010a9	obj/kern/kernel.asm	/^f01010a9:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	eb 0b                	jmp    f01010bc <vprintfmt+0x213>$/;"	l
f01010b1	obj/kern/kernel.asm	/^f01010b1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01010b4	obj/kern/kernel.asm	/^f01010b4:	57                   	push   %edi$/;"	l
f01010b5	obj/kern/kernel.asm	/^f01010b5:	50                   	push   %eax$/;"	l
f01010b6	obj/kern/kernel.asm	/^f01010b6:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01010b9	obj/kern/kernel.asm	/^f01010b9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010bc	obj/kern/kernel.asm	/^f01010bc:	ff 4d e4             	decl   -0x1c(%ebp)$/;"	l
f01010bf	obj/kern/kernel.asm	/^f01010bf:	0f be 03             	movsbl (%ebx),%eax$/;"	l
f01010c2	obj/kern/kernel.asm	/^f01010c2:	85 c0                	test   %eax,%eax$/;"	l
f01010c4	obj/kern/kernel.asm	/^f01010c4:	74 03                	je     f01010c9 <vprintfmt+0x220>$/;"	l
f01010c6	obj/kern/kernel.asm	/^f01010c6:	43                   	inc    %ebx$/;"	l
f01010c7	obj/kern/kernel.asm	/^f01010c7:	eb 1b                	jmp    f01010e4 <vprintfmt+0x23b>$/;"	l
f01010c9	obj/kern/kernel.asm	/^f01010c9:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
f01010cc	obj/kern/kernel.asm	/^f01010cc:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01010d0	obj/kern/kernel.asm	/^f01010d0:	7f 1e                	jg     f01010f0 <vprintfmt+0x247>$/;"	l
f01010d2	obj/kern/kernel.asm	/^f01010d2:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f01010d5	obj/kern/kernel.asm	/^f01010d5:	e9 f3 fd ff ff       	jmp    f0100ecd <vprintfmt+0x24>$/;"	l
f01010da	obj/kern/kernel.asm	/^f01010da:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f01010dd	obj/kern/kernel.asm	/^f01010dd:	43                   	inc    %ebx$/;"	l
f01010de	obj/kern/kernel.asm	/^f01010de:	89 75 dc             	mov    %esi,-0x24(%ebp)$/;"	l
f01010e1	obj/kern/kernel.asm	/^f01010e1:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f01010e4	obj/kern/kernel.asm	/^f01010e4:	85 f6                	test   %esi,%esi$/;"	l
f01010e6	obj/kern/kernel.asm	/^f01010e6:	78 ad                	js     f0101095 <vprintfmt+0x1ec>$/;"	l
f01010e8	obj/kern/kernel.asm	/^f01010e8:	4e                   	dec    %esi$/;"	l
f01010e9	obj/kern/kernel.asm	/^f01010e9:	79 aa                	jns    f0101095 <vprintfmt+0x1ec>$/;"	l
f01010eb	obj/kern/kernel.asm	/^f01010eb:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
f01010ee	obj/kern/kernel.asm	/^f01010ee:	eb dc                	jmp    f01010cc <vprintfmt+0x223>$/;"	l
f01010f0	obj/kern/kernel.asm	/^f01010f0:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01010f3	obj/kern/kernel.asm	/^f01010f3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01010f6	obj/kern/kernel.asm	/^f01010f6:	57                   	push   %edi$/;"	l
f01010f7	obj/kern/kernel.asm	/^f01010f7:	6a 20                	push   $0x20$/;"	l
f01010f9	obj/kern/kernel.asm	/^f01010f9:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01010fc	obj/kern/kernel.asm	/^f01010fc:	4b                   	dec    %ebx$/;"	l
f01010fd	obj/kern/kernel.asm	/^f01010fd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101100	obj/kern/kernel.asm	/^f0101100:	85 db                	test   %ebx,%ebx$/;"	l
f0101102	obj/kern/kernel.asm	/^f0101102:	7f ef                	jg     f01010f3 <vprintfmt+0x24a>$/;"	l
f0101104	obj/kern/kernel.asm	/^f0101104:	e9 c4 fd ff ff       	jmp    f0100ecd <vprintfmt+0x24>$/;"	l
f0101109	obj/kern/kernel.asm	/^f0101109:	89 5d d8             	mov    %ebx,-0x28(%ebp)$/;"	l
f010110c	obj/kern/kernel.asm	/^f010110c:	89 ca                	mov    %ecx,%edx$/;"	l
f010110e	obj/kern/kernel.asm	/^f010110e:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0101111	obj/kern/kernel.asm	/^f0101111:	e8 2a fd ff ff       	call   f0100e40 <getint>$/;"	l
f0101116	obj/kern/kernel.asm	/^f0101116:	89 c3                	mov    %eax,%ebx$/;"	l
f0101118	obj/kern/kernel.asm	/^f0101118:	89 d6                	mov    %edx,%esi$/;"	l
f010111a	obj/kern/kernel.asm	/^f010111a:	85 d2                	test   %edx,%edx$/;"	l
f010111c	obj/kern/kernel.asm	/^f010111c:	78 0a                	js     f0101128 <vprintfmt+0x27f>$/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101123	obj/kern/kernel.asm	/^f0101123:	e9 b0 00 00 00       	jmp    f01011d8 <vprintfmt+0x32f>$/;"	l
f0101128	obj/kern/kernel.asm	/^f0101128:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010112b	obj/kern/kernel.asm	/^f010112b:	57                   	push   %edi$/;"	l
f010112c	obj/kern/kernel.asm	/^f010112c:	6a 2d                	push   $0x2d$/;"	l
f010112e	obj/kern/kernel.asm	/^f010112e:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101131	obj/kern/kernel.asm	/^f0101131:	f7 db                	neg    %ebx$/;"	l
f0101133	obj/kern/kernel.asm	/^f0101133:	83 d6 00             	adc    $0x0,%esi$/;"	l
f0101136	obj/kern/kernel.asm	/^f0101136:	f7 de                	neg    %esi$/;"	l
f0101138	obj/kern/kernel.asm	/^f0101138:	83 c4 10             	add    $0x10,%esp$/;"	l
f010113b	obj/kern/kernel.asm	/^f010113b:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101140	obj/kern/kernel.asm	/^f0101140:	e9 93 00 00 00       	jmp    f01011d8 <vprintfmt+0x32f>$/;"	l
f0101145	obj/kern/kernel.asm	/^f0101145:	89 5d d8             	mov    %ebx,-0x28(%ebp)$/;"	l
f0101148	obj/kern/kernel.asm	/^f0101148:	89 ca                	mov    %ecx,%edx$/;"	l
f010114a	obj/kern/kernel.asm	/^f010114a:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010114d	obj/kern/kernel.asm	/^f010114d:	e8 b4 fc ff ff       	call   f0100e06 <getuint>$/;"	l
f0101152	obj/kern/kernel.asm	/^f0101152:	89 c3                	mov    %eax,%ebx$/;"	l
f0101154	obj/kern/kernel.asm	/^f0101154:	89 d6                	mov    %edx,%esi$/;"	l
f0101156	obj/kern/kernel.asm	/^f0101156:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010115b	obj/kern/kernel.asm	/^f010115b:	eb 7b                	jmp    f01011d8 <vprintfmt+0x32f>$/;"	l
f010115d	obj/kern/kernel.asm	/^f010115d:	89 5d d8             	mov    %ebx,-0x28(%ebp)$/;"	l
f0101160	obj/kern/kernel.asm	/^f0101160:	89 ca                	mov    %ecx,%edx$/;"	l
f0101162	obj/kern/kernel.asm	/^f0101162:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0101165	obj/kern/kernel.asm	/^f0101165:	e8 d6 fc ff ff       	call   f0100e40 <getint>$/;"	l
f010116a	obj/kern/kernel.asm	/^f010116a:	89 c3                	mov    %eax,%ebx$/;"	l
f010116c	obj/kern/kernel.asm	/^f010116c:	89 d6                	mov    %edx,%esi$/;"	l
f010116e	obj/kern/kernel.asm	/^f010116e:	85 d2                	test   %edx,%edx$/;"	l
f0101170	obj/kern/kernel.asm	/^f0101170:	78 07                	js     f0101179 <vprintfmt+0x2d0>$/;"	l
f0101172	obj/kern/kernel.asm	/^f0101172:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0101177	obj/kern/kernel.asm	/^f0101177:	eb 5f                	jmp    f01011d8 <vprintfmt+0x32f>$/;"	l
f0101179	obj/kern/kernel.asm	/^f0101179:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010117c	obj/kern/kernel.asm	/^f010117c:	57                   	push   %edi$/;"	l
f010117d	obj/kern/kernel.asm	/^f010117d:	6a 2d                	push   $0x2d$/;"	l
f010117f	obj/kern/kernel.asm	/^f010117f:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101182	obj/kern/kernel.asm	/^f0101182:	f7 db                	neg    %ebx$/;"	l
f0101184	obj/kern/kernel.asm	/^f0101184:	83 d6 00             	adc    $0x0,%esi$/;"	l
f0101187	obj/kern/kernel.asm	/^f0101187:	f7 de                	neg    %esi$/;"	l
f0101189	obj/kern/kernel.asm	/^f0101189:	83 c4 10             	add    $0x10,%esp$/;"	l
f010118c	obj/kern/kernel.asm	/^f010118c:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0101191	obj/kern/kernel.asm	/^f0101191:	eb 45                	jmp    f01011d8 <vprintfmt+0x32f>$/;"	l
f0101193	obj/kern/kernel.asm	/^f0101193:	89 5d d8             	mov    %ebx,-0x28(%ebp)$/;"	l
f0101196	obj/kern/kernel.asm	/^f0101196:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101199	obj/kern/kernel.asm	/^f0101199:	57                   	push   %edi$/;"	l
f010119a	obj/kern/kernel.asm	/^f010119a:	6a 30                	push   $0x30$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010119f	obj/kern/kernel.asm	/^f010119f:	83 c4 08             	add    $0x8,%esp$/;"	l
f01011a2	obj/kern/kernel.asm	/^f01011a2:	57                   	push   %edi$/;"	l
f01011a3	obj/kern/kernel.asm	/^f01011a3:	6a 78                	push   $0x78$/;"	l
f01011a5	obj/kern/kernel.asm	/^f01011a5:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01011a8	obj/kern/kernel.asm	/^f01011a8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01011ab	obj/kern/kernel.asm	/^f01011ab:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01011ae	obj/kern/kernel.asm	/^f01011ae:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	8b 18                	mov    (%eax),%ebx$/;"	l
f01011b3	obj/kern/kernel.asm	/^f01011b3:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01011b8	obj/kern/kernel.asm	/^f01011b8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011bb	obj/kern/kernel.asm	/^f01011bb:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01011c0	obj/kern/kernel.asm	/^f01011c0:	eb 16                	jmp    f01011d8 <vprintfmt+0x32f>$/;"	l
f01011c2	obj/kern/kernel.asm	/^f01011c2:	89 5d d8             	mov    %ebx,-0x28(%ebp)$/;"	l
f01011c5	obj/kern/kernel.asm	/^f01011c5:	89 ca                	mov    %ecx,%edx$/;"	l
f01011c7	obj/kern/kernel.asm	/^f01011c7:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01011ca	obj/kern/kernel.asm	/^f01011ca:	e8 37 fc ff ff       	call   f0100e06 <getuint>$/;"	l
f01011cf	obj/kern/kernel.asm	/^f01011cf:	89 c3                	mov    %eax,%ebx$/;"	l
f01011d1	obj/kern/kernel.asm	/^f01011d1:	89 d6                	mov    %edx,%esi$/;"	l
f01011d3	obj/kern/kernel.asm	/^f01011d3:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01011d8	obj/kern/kernel.asm	/^f01011d8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01011db	obj/kern/kernel.asm	/^f01011db:	0f be 55 dc          	movsbl -0x24(%ebp),%edx$/;"	l
f01011df	obj/kern/kernel.asm	/^f01011df:	52                   	push   %edx$/;"	l
f01011e0	obj/kern/kernel.asm	/^f01011e0:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f01011e3	obj/kern/kernel.asm	/^f01011e3:	50                   	push   %eax$/;"	l
f01011e4	obj/kern/kernel.asm	/^f01011e4:	56                   	push   %esi$/;"	l
f01011e5	obj/kern/kernel.asm	/^f01011e5:	53                   	push   %ebx$/;"	l
f01011e6	obj/kern/kernel.asm	/^f01011e6:	89 fa                	mov    %edi,%edx$/;"	l
f01011e8	obj/kern/kernel.asm	/^f01011e8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01011eb	obj/kern/kernel.asm	/^f01011eb:	e8 68 fb ff ff       	call   f0100d58 <printnum>$/;"	l
f01011f0	obj/kern/kernel.asm	/^f01011f0:	83 c4 20             	add    $0x20,%esp$/;"	l
f01011f3	obj/kern/kernel.asm	/^f01011f3:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f01011f6	obj/kern/kernel.asm	/^f01011f6:	e9 d2 fc ff ff       	jmp    f0100ecd <vprintfmt+0x24>$/;"	l
f01011fb	obj/kern/kernel.asm	/^f01011fb:	89 5d d8             	mov    %ebx,-0x28(%ebp)$/;"	l
f01011fe	obj/kern/kernel.asm	/^f01011fe:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101201	obj/kern/kernel.asm	/^f0101201:	57                   	push   %edi$/;"	l
f0101202	obj/kern/kernel.asm	/^f0101202:	52                   	push   %edx$/;"	l
f0101203	obj/kern/kernel.asm	/^f0101203:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101206	obj/kern/kernel.asm	/^f0101206:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101209	obj/kern/kernel.asm	/^f0101209:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f010120c	obj/kern/kernel.asm	/^f010120c:	e9 bc fc ff ff       	jmp    f0100ecd <vprintfmt+0x24>$/;"	l
f0101211	obj/kern/kernel.asm	/^f0101211:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	57                   	push   %edi$/;"	l
f0101215	obj/kern/kernel.asm	/^f0101215:	6a 25                	push   $0x25$/;"	l
f0101217	obj/kern/kernel.asm	/^f0101217:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010121a	obj/kern/kernel.asm	/^f010121a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010121d	obj/kern/kernel.asm	/^f010121d:	eb 02                	jmp    f0101221 <vprintfmt+0x378>$/;"	l
f010121f	obj/kern/kernel.asm	/^f010121f:	89 c6                	mov    %eax,%esi$/;"	l
f0101221	obj/kern/kernel.asm	/^f0101221:	8d 46 ff             	lea    -0x1(%esi),%eax$/;"	l
f0101224	obj/kern/kernel.asm	/^f0101224:	80 7e ff 25          	cmpb   $0x25,-0x1(%esi)$/;"	l
f0101228	obj/kern/kernel.asm	/^f0101228:	75 f5                	jne    f010121f <vprintfmt+0x376>$/;"	l
f010122a	obj/kern/kernel.asm	/^f010122a:	e9 9e fc ff ff       	jmp    f0100ecd <vprintfmt+0x24>$/;"	l
f010122f	obj/kern/kernel.asm	/^f010122f:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	5b                   	pop    %ebx$/;"	l
f0101233	obj/kern/kernel.asm	/^f0101233:	5e                   	pop    %esi$/;"	l
f0101234	obj/kern/kernel.asm	/^f0101234:	5f                   	pop    %edi$/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235:	c9                   	leave  $/;"	l
f0101236	obj/kern/kernel.asm	/^f0101236:	c3                   	ret    $/;"	l
f0101237	obj/kern/kernel.asm	/^f0101237 <vsnprintf>:$/;"	l
f0101237	obj/kern/kernel.asm	/^f0101237:	55                   	push   %ebp$/;"	l
f0101238	obj/kern/kernel.asm	/^f0101238:	89 e5                	mov    %esp,%ebp$/;"	l
f010123a	obj/kern/kernel.asm	/^f010123a:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010123d	obj/kern/kernel.asm	/^f010123d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101243	obj/kern/kernel.asm	/^f0101243:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0101246	obj/kern/kernel.asm	/^f0101246:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f010124a	obj/kern/kernel.asm	/^f010124a:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f010124d	obj/kern/kernel.asm	/^f010124d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0101254	obj/kern/kernel.asm	/^f0101254:	85 c0                	test   %eax,%eax$/;"	l
f0101256	obj/kern/kernel.asm	/^f0101256:	74 26                	je     f010127e <vsnprintf+0x47>$/;"	l
f0101258	obj/kern/kernel.asm	/^f0101258:	85 d2                	test   %edx,%edx$/;"	l
f010125a	obj/kern/kernel.asm	/^f010125a:	7e 29                	jle    f0101285 <vsnprintf+0x4e>$/;"	l
f010125c	obj/kern/kernel.asm	/^f010125c:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f010125f	obj/kern/kernel.asm	/^f010125f:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0101262	obj/kern/kernel.asm	/^f0101262:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0101265	obj/kern/kernel.asm	/^f0101265:	50                   	push   %eax$/;"	l
f0101266	obj/kern/kernel.asm	/^f0101266:	68 72 0e 10 f0       	push   $0xf0100e72$/;"	l
f010126b	obj/kern/kernel.asm	/^f010126b:	e8 39 fc ff ff       	call   f0100ea9 <vprintfmt>$/;"	l
f0101270	obj/kern/kernel.asm	/^f0101270:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0101273	obj/kern/kernel.asm	/^f0101273:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0101276	obj/kern/kernel.asm	/^f0101276:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101279	obj/kern/kernel.asm	/^f0101279:	83 c4 10             	add    $0x10,%esp$/;"	l
f010127c	obj/kern/kernel.asm	/^f010127c:	eb 0c                	jmp    f010128a <vsnprintf+0x53>$/;"	l
f010127e	obj/kern/kernel.asm	/^f010127e:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0101283	obj/kern/kernel.asm	/^f0101283:	eb 05                	jmp    f010128a <vsnprintf+0x53>$/;"	l
f0101285	obj/kern/kernel.asm	/^f0101285:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010128a	obj/kern/kernel.asm	/^f010128a:	c9                   	leave  $/;"	l
f010128b	obj/kern/kernel.asm	/^f010128b:	c3                   	ret    $/;"	l
f010128c	obj/kern/kernel.asm	/^f010128c <snprintf>:$/;"	l
f010128c	obj/kern/kernel.asm	/^f010128c:	55                   	push   %ebp$/;"	l
f010128d	obj/kern/kernel.asm	/^f010128d:	89 e5                	mov    %esp,%ebp$/;"	l
f010128f	obj/kern/kernel.asm	/^f010128f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101292	obj/kern/kernel.asm	/^f0101292:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0101295	obj/kern/kernel.asm	/^f0101295:	50                   	push   %eax$/;"	l
f0101296	obj/kern/kernel.asm	/^f0101296:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0101299	obj/kern/kernel.asm	/^f0101299:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010129c	obj/kern/kernel.asm	/^f010129c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010129f	obj/kern/kernel.asm	/^f010129f:	e8 93 ff ff ff       	call   f0101237 <vsnprintf>$/;"	l
f01012a4	obj/kern/kernel.asm	/^f01012a4:	c9                   	leave  $/;"	l
f01012a5	obj/kern/kernel.asm	/^f01012a5:	c3                   	ret    $/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8 <readline>:$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	55                   	push   %ebp$/;"	l
f01012a9	obj/kern/kernel.asm	/^f01012a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01012ab	obj/kern/kernel.asm	/^f01012ab:	57                   	push   %edi$/;"	l
f01012ac	obj/kern/kernel.asm	/^f01012ac:	56                   	push   %esi$/;"	l
f01012ad	obj/kern/kernel.asm	/^f01012ad:	53                   	push   %ebx$/;"	l
f01012ae	obj/kern/kernel.asm	/^f01012ae:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01012b1	obj/kern/kernel.asm	/^f01012b1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01012b4	obj/kern/kernel.asm	/^f01012b4:	85 c0                	test   %eax,%eax$/;"	l
f01012b6	obj/kern/kernel.asm	/^f01012b6:	74 11                	je     f01012c9 <readline+0x21>$/;"	l
f01012b8	obj/kern/kernel.asm	/^f01012b8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb:	50                   	push   %eax$/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	68 16 21 10 f0       	push   $0xf0102116$/;"	l
f01012c1	obj/kern/kernel.asm	/^f01012c1:	e8 4b f7 ff ff       	call   f0100a11 <cprintf>$/;"	l
f01012c6	obj/kern/kernel.asm	/^f01012c6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01012c9	obj/kern/kernel.asm	/^f01012c9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01012cc	obj/kern/kernel.asm	/^f01012cc:	6a 00                	push   $0x0$/;"	l
f01012ce	obj/kern/kernel.asm	/^f01012ce:	e8 50 f3 ff ff       	call   f0100623 <iscons>$/;"	l
f01012d3	obj/kern/kernel.asm	/^f01012d3:	89 c7                	mov    %eax,%edi$/;"	l
f01012d5	obj/kern/kernel.asm	/^f01012d5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01012d8	obj/kern/kernel.asm	/^f01012d8:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01012dd	obj/kern/kernel.asm	/^f01012dd:	e8 30 f3 ff ff       	call   f0100612 <getchar>$/;"	l
f01012e2	obj/kern/kernel.asm	/^f01012e2:	89 c3                	mov    %eax,%ebx$/;"	l
f01012e4	obj/kern/kernel.asm	/^f01012e4:	85 c0                	test   %eax,%eax$/;"	l
f01012e6	obj/kern/kernel.asm	/^f01012e6:	79 18                	jns    f0101300 <readline+0x58>$/;"	l
f01012e8	obj/kern/kernel.asm	/^f01012e8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01012eb	obj/kern/kernel.asm	/^f01012eb:	50                   	push   %eax$/;"	l
f01012ec	obj/kern/kernel.asm	/^f01012ec:	68 f8 22 10 f0       	push   $0xf01022f8$/;"	l
f01012f1	obj/kern/kernel.asm	/^f01012f1:	e8 1b f7 ff ff       	call   f0100a11 <cprintf>$/;"	l
f01012f6	obj/kern/kernel.asm	/^f01012f6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01012f9	obj/kern/kernel.asm	/^f01012f9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01012fe	obj/kern/kernel.asm	/^f01012fe:	eb 6f                	jmp    f010136f <readline+0xc7>$/;"	l
f0101300	obj/kern/kernel.asm	/^f0101300:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	74 05                	je     f010130a <readline+0x62>$/;"	l
f0101305	obj/kern/kernel.asm	/^f0101305:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f0101308	obj/kern/kernel.asm	/^f0101308:	75 18                	jne    f0101322 <readline+0x7a>$/;"	l
f010130a	obj/kern/kernel.asm	/^f010130a:	85 f6                	test   %esi,%esi$/;"	l
f010130c	obj/kern/kernel.asm	/^f010130c:	7e 14                	jle    f0101322 <readline+0x7a>$/;"	l
f010130e	obj/kern/kernel.asm	/^f010130e:	85 ff                	test   %edi,%edi$/;"	l
f0101310	obj/kern/kernel.asm	/^f0101310:	74 0d                	je     f010131f <readline+0x77>$/;"	l
f0101312	obj/kern/kernel.asm	/^f0101312:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101315	obj/kern/kernel.asm	/^f0101315:	6a 08                	push   $0x8$/;"	l
f0101317	obj/kern/kernel.asm	/^f0101317:	e8 e6 f2 ff ff       	call   f0100602 <cputchar>$/;"	l
f010131c	obj/kern/kernel.asm	/^f010131c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010131f	obj/kern/kernel.asm	/^f010131f:	4e                   	dec    %esi$/;"	l
f0101320	obj/kern/kernel.asm	/^f0101320:	eb bb                	jmp    f01012dd <readline+0x35>$/;"	l
f0101322	obj/kern/kernel.asm	/^f0101322:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0101325	obj/kern/kernel.asm	/^f0101325:	7e 21                	jle    f0101348 <readline+0xa0>$/;"	l
f0101327	obj/kern/kernel.asm	/^f0101327:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f010132d	obj/kern/kernel.asm	/^f010132d:	7f 19                	jg     f0101348 <readline+0xa0>$/;"	l
f010132f	obj/kern/kernel.asm	/^f010132f:	85 ff                	test   %edi,%edi$/;"	l
f0101331	obj/kern/kernel.asm	/^f0101331:	74 0c                	je     f010133f <readline+0x97>$/;"	l
f0101333	obj/kern/kernel.asm	/^f0101333:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101336	obj/kern/kernel.asm	/^f0101336:	53                   	push   %ebx$/;"	l
f0101337	obj/kern/kernel.asm	/^f0101337:	e8 c6 f2 ff ff       	call   f0100602 <cputchar>$/;"	l
f010133c	obj/kern/kernel.asm	/^f010133c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010133f	obj/kern/kernel.asm	/^f010133f:	88 9e 40 85 11 f0    	mov    %bl,-0xfee7ac0(%esi)$/;"	l
f0101345	obj/kern/kernel.asm	/^f0101345:	46                   	inc    %esi$/;"	l
f0101346	obj/kern/kernel.asm	/^f0101346:	eb 95                	jmp    f01012dd <readline+0x35>$/;"	l
f0101348	obj/kern/kernel.asm	/^f0101348:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f010134b	obj/kern/kernel.asm	/^f010134b:	74 05                	je     f0101352 <readline+0xaa>$/;"	l
f010134d	obj/kern/kernel.asm	/^f010134d:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f0101350	obj/kern/kernel.asm	/^f0101350:	75 8b                	jne    f01012dd <readline+0x35>$/;"	l
f0101352	obj/kern/kernel.asm	/^f0101352:	85 ff                	test   %edi,%edi$/;"	l
f0101354	obj/kern/kernel.asm	/^f0101354:	74 0d                	je     f0101363 <readline+0xbb>$/;"	l
f0101356	obj/kern/kernel.asm	/^f0101356:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101359	obj/kern/kernel.asm	/^f0101359:	6a 0a                	push   $0xa$/;"	l
f010135b	obj/kern/kernel.asm	/^f010135b:	e8 a2 f2 ff ff       	call   f0100602 <cputchar>$/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101363	obj/kern/kernel.asm	/^f0101363:	c6 86 40 85 11 f0 00 	movb   $0x0,-0xfee7ac0(%esi)$/;"	l
f010136a	obj/kern/kernel.asm	/^f010136a:	b8 40 85 11 f0       	mov    $0xf0118540,%eax$/;"	l
f010136f	obj/kern/kernel.asm	/^f010136f:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101372	obj/kern/kernel.asm	/^f0101372:	5b                   	pop    %ebx$/;"	l
f0101373	obj/kern/kernel.asm	/^f0101373:	5e                   	pop    %esi$/;"	l
f0101374	obj/kern/kernel.asm	/^f0101374:	5f                   	pop    %edi$/;"	l
f0101375	obj/kern/kernel.asm	/^f0101375:	c9                   	leave  $/;"	l
f0101376	obj/kern/kernel.asm	/^f0101376:	c3                   	ret    $/;"	l
f0101378	obj/kern/kernel.asm	/^f0101378 <strlen>:$/;"	l
f0101378	obj/kern/kernel.asm	/^f0101378:	55                   	push   %ebp$/;"	l
f0101379	obj/kern/kernel.asm	/^f0101379:	89 e5                	mov    %esp,%ebp$/;"	l
f010137b	obj/kern/kernel.asm	/^f010137b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010137e	obj/kern/kernel.asm	/^f010137e:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f0101381	obj/kern/kernel.asm	/^f0101381:	74 0e                	je     f0101391 <strlen+0x19>$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101388	obj/kern/kernel.asm	/^f0101388:	40                   	inc    %eax$/;"	l
f0101389	obj/kern/kernel.asm	/^f0101389:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f010138d	obj/kern/kernel.asm	/^f010138d:	75 f9                	jne    f0101388 <strlen+0x10>$/;"	l
f010138f	obj/kern/kernel.asm	/^f010138f:	eb 05                	jmp    f0101396 <strlen+0x1e>$/;"	l
f0101391	obj/kern/kernel.asm	/^f0101391:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101396	obj/kern/kernel.asm	/^f0101396:	c9                   	leave  $/;"	l
f0101397	obj/kern/kernel.asm	/^f0101397:	c3                   	ret    $/;"	l
f0101398	obj/kern/kernel.asm	/^f0101398 <strnlen>:$/;"	l
f0101398	obj/kern/kernel.asm	/^f0101398:	55                   	push   %ebp$/;"	l
f0101399	obj/kern/kernel.asm	/^f0101399:	89 e5                	mov    %esp,%ebp$/;"	l
f010139b	obj/kern/kernel.asm	/^f010139b:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010139e	obj/kern/kernel.asm	/^f010139e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01013a1	obj/kern/kernel.asm	/^f01013a1:	85 d2                	test   %edx,%edx$/;"	l
f01013a3	obj/kern/kernel.asm	/^f01013a3:	74 17                	je     f01013bc <strnlen+0x24>$/;"	l
f01013a5	obj/kern/kernel.asm	/^f01013a5:	80 39 00             	cmpb   $0x0,(%ecx)$/;"	l
f01013a8	obj/kern/kernel.asm	/^f01013a8:	74 19                	je     f01013c3 <strnlen+0x2b>$/;"	l
f01013aa	obj/kern/kernel.asm	/^f01013aa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01013af	obj/kern/kernel.asm	/^f01013af:	40                   	inc    %eax$/;"	l
f01013b0	obj/kern/kernel.asm	/^f01013b0:	39 d0                	cmp    %edx,%eax$/;"	l
f01013b2	obj/kern/kernel.asm	/^f01013b2:	74 14                	je     f01013c8 <strnlen+0x30>$/;"	l
f01013b4	obj/kern/kernel.asm	/^f01013b4:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)$/;"	l
f01013b8	obj/kern/kernel.asm	/^f01013b8:	75 f5                	jne    f01013af <strnlen+0x17>$/;"	l
f01013ba	obj/kern/kernel.asm	/^f01013ba:	eb 0c                	jmp    f01013c8 <strnlen+0x30>$/;"	l
f01013bc	obj/kern/kernel.asm	/^f01013bc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01013c1	obj/kern/kernel.asm	/^f01013c1:	eb 05                	jmp    f01013c8 <strnlen+0x30>$/;"	l
f01013c3	obj/kern/kernel.asm	/^f01013c3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01013c8	obj/kern/kernel.asm	/^f01013c8:	c9                   	leave  $/;"	l
f01013c9	obj/kern/kernel.asm	/^f01013c9:	c3                   	ret    $/;"	l
f01013ca	obj/kern/kernel.asm	/^f01013ca <strcpy>:$/;"	l
f01013ca	obj/kern/kernel.asm	/^f01013ca:	55                   	push   %ebp$/;"	l
f01013cb	obj/kern/kernel.asm	/^f01013cb:	89 e5                	mov    %esp,%ebp$/;"	l
f01013cd	obj/kern/kernel.asm	/^f01013cd:	53                   	push   %ebx$/;"	l
f01013ce	obj/kern/kernel.asm	/^f01013ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01013d1	obj/kern/kernel.asm	/^f01013d1:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01013d4	obj/kern/kernel.asm	/^f01013d4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01013d9	obj/kern/kernel.asm	/^f01013d9:	8a 0c 13             	mov    (%ebx,%edx,1),%cl$/;"	l
f01013dc	obj/kern/kernel.asm	/^f01013dc:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
f01013df	obj/kern/kernel.asm	/^f01013df:	42                   	inc    %edx$/;"	l
f01013e0	obj/kern/kernel.asm	/^f01013e0:	84 c9                	test   %cl,%cl$/;"	l
f01013e2	obj/kern/kernel.asm	/^f01013e2:	75 f5                	jne    f01013d9 <strcpy+0xf>$/;"	l
f01013e4	obj/kern/kernel.asm	/^f01013e4:	5b                   	pop    %ebx$/;"	l
f01013e5	obj/kern/kernel.asm	/^f01013e5:	c9                   	leave  $/;"	l
f01013e6	obj/kern/kernel.asm	/^f01013e6:	c3                   	ret    $/;"	l
f01013e7	obj/kern/kernel.asm	/^f01013e7 <strcat>:$/;"	l
f01013e7	obj/kern/kernel.asm	/^f01013e7:	55                   	push   %ebp$/;"	l
f01013e8	obj/kern/kernel.asm	/^f01013e8:	89 e5                	mov    %esp,%ebp$/;"	l
f01013ea	obj/kern/kernel.asm	/^f01013ea:	53                   	push   %ebx$/;"	l
f01013eb	obj/kern/kernel.asm	/^f01013eb:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01013ee	obj/kern/kernel.asm	/^f01013ee:	53                   	push   %ebx$/;"	l
f01013ef	obj/kern/kernel.asm	/^f01013ef:	e8 84 ff ff ff       	call   f0101378 <strlen>$/;"	l
f01013f4	obj/kern/kernel.asm	/^f01013f4:	83 c4 04             	add    $0x4,%esp$/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01013fa	obj/kern/kernel.asm	/^f01013fa:	8d 04 03             	lea    (%ebx,%eax,1),%eax$/;"	l
f01013fd	obj/kern/kernel.asm	/^f01013fd:	50                   	push   %eax$/;"	l
f01013fe	obj/kern/kernel.asm	/^f01013fe:	e8 c7 ff ff ff       	call   f01013ca <strcpy>$/;"	l
f0101403	obj/kern/kernel.asm	/^f0101403:	89 d8                	mov    %ebx,%eax$/;"	l
f0101405	obj/kern/kernel.asm	/^f0101405:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0101408	obj/kern/kernel.asm	/^f0101408:	c9                   	leave  $/;"	l
f0101409	obj/kern/kernel.asm	/^f0101409:	c3                   	ret    $/;"	l
f010140a	obj/kern/kernel.asm	/^f010140a <strncpy>:$/;"	l
f010140a	obj/kern/kernel.asm	/^f010140a:	55                   	push   %ebp$/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	89 e5                	mov    %esp,%ebp$/;"	l
f010140d	obj/kern/kernel.asm	/^f010140d:	56                   	push   %esi$/;"	l
f010140e	obj/kern/kernel.asm	/^f010140e:	53                   	push   %ebx$/;"	l
f010140f	obj/kern/kernel.asm	/^f010140f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101412	obj/kern/kernel.asm	/^f0101412:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101415	obj/kern/kernel.asm	/^f0101415:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0101418	obj/kern/kernel.asm	/^f0101418:	85 f6                	test   %esi,%esi$/;"	l
f010141a	obj/kern/kernel.asm	/^f010141a:	74 15                	je     f0101431 <strncpy+0x27>$/;"	l
f010141c	obj/kern/kernel.asm	/^f010141c:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101421	obj/kern/kernel.asm	/^f0101421:	8a 1a                	mov    (%edx),%bl$/;"	l
f0101423	obj/kern/kernel.asm	/^f0101423:	88 1c 08             	mov    %bl,(%eax,%ecx,1)$/;"	l
f0101426	obj/kern/kernel.asm	/^f0101426:	80 3a 01             	cmpb   $0x1,(%edx)$/;"	l
f0101429	obj/kern/kernel.asm	/^f0101429:	83 da ff             	sbb    $0xffffffff,%edx$/;"	l
f010142c	obj/kern/kernel.asm	/^f010142c:	41                   	inc    %ecx$/;"	l
f010142d	obj/kern/kernel.asm	/^f010142d:	39 ce                	cmp    %ecx,%esi$/;"	l
f010142f	obj/kern/kernel.asm	/^f010142f:	77 f0                	ja     f0101421 <strncpy+0x17>$/;"	l
f0101431	obj/kern/kernel.asm	/^f0101431:	5b                   	pop    %ebx$/;"	l
f0101432	obj/kern/kernel.asm	/^f0101432:	5e                   	pop    %esi$/;"	l
f0101433	obj/kern/kernel.asm	/^f0101433:	c9                   	leave  $/;"	l
f0101434	obj/kern/kernel.asm	/^f0101434:	c3                   	ret    $/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435 <strlcpy>:$/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435:	55                   	push   %ebp$/;"	l
f0101436	obj/kern/kernel.asm	/^f0101436:	89 e5                	mov    %esp,%ebp$/;"	l
f0101438	obj/kern/kernel.asm	/^f0101438:	57                   	push   %edi$/;"	l
f0101439	obj/kern/kernel.asm	/^f0101439:	56                   	push   %esi$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	53                   	push   %ebx$/;"	l
f010143b	obj/kern/kernel.asm	/^f010143b:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010143e	obj/kern/kernel.asm	/^f010143e:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101441	obj/kern/kernel.asm	/^f0101441:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0101444	obj/kern/kernel.asm	/^f0101444:	85 f6                	test   %esi,%esi$/;"	l
f0101446	obj/kern/kernel.asm	/^f0101446:	74 32                	je     f010147a <strlcpy+0x45>$/;"	l
f0101448	obj/kern/kernel.asm	/^f0101448:	83 fe 01             	cmp    $0x1,%esi$/;"	l
f010144b	obj/kern/kernel.asm	/^f010144b:	74 22                	je     f010146f <strlcpy+0x3a>$/;"	l
f010144d	obj/kern/kernel.asm	/^f010144d:	8a 0b                	mov    (%ebx),%cl$/;"	l
f010144f	obj/kern/kernel.asm	/^f010144f:	84 c9                	test   %cl,%cl$/;"	l
f0101451	obj/kern/kernel.asm	/^f0101451:	74 20                	je     f0101473 <strlcpy+0x3e>$/;"	l
f0101453	obj/kern/kernel.asm	/^f0101453:	89 f8                	mov    %edi,%eax$/;"	l
f0101455	obj/kern/kernel.asm	/^f0101455:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010145a	obj/kern/kernel.asm	/^f010145a:	83 ee 02             	sub    $0x2,%esi$/;"	l
f010145d	obj/kern/kernel.asm	/^f010145d:	88 08                	mov    %cl,(%eax)$/;"	l
f010145f	obj/kern/kernel.asm	/^f010145f:	40                   	inc    %eax$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	39 f2                	cmp    %esi,%edx$/;"	l
f0101462	obj/kern/kernel.asm	/^f0101462:	74 11                	je     f0101475 <strlcpy+0x40>$/;"	l
f0101464	obj/kern/kernel.asm	/^f0101464:	8a 4c 13 01          	mov    0x1(%ebx,%edx,1),%cl$/;"	l
f0101468	obj/kern/kernel.asm	/^f0101468:	42                   	inc    %edx$/;"	l
f0101469	obj/kern/kernel.asm	/^f0101469:	84 c9                	test   %cl,%cl$/;"	l
f010146b	obj/kern/kernel.asm	/^f010146b:	75 f0                	jne    f010145d <strlcpy+0x28>$/;"	l
f010146d	obj/kern/kernel.asm	/^f010146d:	eb 06                	jmp    f0101475 <strlcpy+0x40>$/;"	l
f010146f	obj/kern/kernel.asm	/^f010146f:	89 f8                	mov    %edi,%eax$/;"	l
f0101471	obj/kern/kernel.asm	/^f0101471:	eb 02                	jmp    f0101475 <strlcpy+0x40>$/;"	l
f0101473	obj/kern/kernel.asm	/^f0101473:	89 f8                	mov    %edi,%eax$/;"	l
f0101475	obj/kern/kernel.asm	/^f0101475:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0101478	obj/kern/kernel.asm	/^f0101478:	eb 02                	jmp    f010147c <strlcpy+0x47>$/;"	l
f010147a	obj/kern/kernel.asm	/^f010147a:	89 f8                	mov    %edi,%eax$/;"	l
f010147c	obj/kern/kernel.asm	/^f010147c:	29 f8                	sub    %edi,%eax$/;"	l
f010147e	obj/kern/kernel.asm	/^f010147e:	5b                   	pop    %ebx$/;"	l
f010147f	obj/kern/kernel.asm	/^f010147f:	5e                   	pop    %esi$/;"	l
f0101480	obj/kern/kernel.asm	/^f0101480:	5f                   	pop    %edi$/;"	l
f0101481	obj/kern/kernel.asm	/^f0101481:	c9                   	leave  $/;"	l
f0101482	obj/kern/kernel.asm	/^f0101482:	c3                   	ret    $/;"	l
f0101483	obj/kern/kernel.asm	/^f0101483 <strcmp>:$/;"	l
f0101483	obj/kern/kernel.asm	/^f0101483:	55                   	push   %ebp$/;"	l
f0101484	obj/kern/kernel.asm	/^f0101484:	89 e5                	mov    %esp,%ebp$/;"	l
f0101486	obj/kern/kernel.asm	/^f0101486:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0101489	obj/kern/kernel.asm	/^f0101489:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010148c	obj/kern/kernel.asm	/^f010148c:	8a 01                	mov    (%ecx),%al$/;"	l
f010148e	obj/kern/kernel.asm	/^f010148e:	84 c0                	test   %al,%al$/;"	l
f0101490	obj/kern/kernel.asm	/^f0101490:	74 10                	je     f01014a2 <strcmp+0x1f>$/;"	l
f0101492	obj/kern/kernel.asm	/^f0101492:	3a 02                	cmp    (%edx),%al$/;"	l
f0101494	obj/kern/kernel.asm	/^f0101494:	75 0c                	jne    f01014a2 <strcmp+0x1f>$/;"	l
f0101496	obj/kern/kernel.asm	/^f0101496:	41                   	inc    %ecx$/;"	l
f0101497	obj/kern/kernel.asm	/^f0101497:	42                   	inc    %edx$/;"	l
f0101498	obj/kern/kernel.asm	/^f0101498:	8a 01                	mov    (%ecx),%al$/;"	l
f010149a	obj/kern/kernel.asm	/^f010149a:	84 c0                	test   %al,%al$/;"	l
f010149c	obj/kern/kernel.asm	/^f010149c:	74 04                	je     f01014a2 <strcmp+0x1f>$/;"	l
f010149e	obj/kern/kernel.asm	/^f010149e:	3a 02                	cmp    (%edx),%al$/;"	l
f01014a0	obj/kern/kernel.asm	/^f01014a0:	74 f4                	je     f0101496 <strcmp+0x13>$/;"	l
f01014a2	obj/kern/kernel.asm	/^f01014a2:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01014a5	obj/kern/kernel.asm	/^f01014a5:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f01014a8	obj/kern/kernel.asm	/^f01014a8:	29 d0                	sub    %edx,%eax$/;"	l
f01014aa	obj/kern/kernel.asm	/^f01014aa:	c9                   	leave  $/;"	l
f01014ab	obj/kern/kernel.asm	/^f01014ab:	c3                   	ret    $/;"	l
f01014ac	obj/kern/kernel.asm	/^f01014ac <strncmp>:$/;"	l
f01014ac	obj/kern/kernel.asm	/^f01014ac:	55                   	push   %ebp$/;"	l
f01014ad	obj/kern/kernel.asm	/^f01014ad:	89 e5                	mov    %esp,%ebp$/;"	l
f01014af	obj/kern/kernel.asm	/^f01014af:	53                   	push   %ebx$/;"	l
f01014b0	obj/kern/kernel.asm	/^f01014b0:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01014b3	obj/kern/kernel.asm	/^f01014b3:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01014b6	obj/kern/kernel.asm	/^f01014b6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01014b9	obj/kern/kernel.asm	/^f01014b9:	85 c0                	test   %eax,%eax$/;"	l
f01014bb	obj/kern/kernel.asm	/^f01014bb:	74 1b                	je     f01014d8 <strncmp+0x2c>$/;"	l
f01014bd	obj/kern/kernel.asm	/^f01014bd:	8a 1a                	mov    (%edx),%bl$/;"	l
f01014bf	obj/kern/kernel.asm	/^f01014bf:	84 db                	test   %bl,%bl$/;"	l
f01014c1	obj/kern/kernel.asm	/^f01014c1:	74 24                	je     f01014e7 <strncmp+0x3b>$/;"	l
f01014c3	obj/kern/kernel.asm	/^f01014c3:	3a 19                	cmp    (%ecx),%bl$/;"	l
f01014c5	obj/kern/kernel.asm	/^f01014c5:	75 20                	jne    f01014e7 <strncmp+0x3b>$/;"	l
f01014c7	obj/kern/kernel.asm	/^f01014c7:	48                   	dec    %eax$/;"	l
f01014c8	obj/kern/kernel.asm	/^f01014c8:	74 15                	je     f01014df <strncmp+0x33>$/;"	l
f01014ca	obj/kern/kernel.asm	/^f01014ca:	42                   	inc    %edx$/;"	l
f01014cb	obj/kern/kernel.asm	/^f01014cb:	41                   	inc    %ecx$/;"	l
f01014cc	obj/kern/kernel.asm	/^f01014cc:	8a 1a                	mov    (%edx),%bl$/;"	l
f01014ce	obj/kern/kernel.asm	/^f01014ce:	84 db                	test   %bl,%bl$/;"	l
f01014d0	obj/kern/kernel.asm	/^f01014d0:	74 15                	je     f01014e7 <strncmp+0x3b>$/;"	l
f01014d2	obj/kern/kernel.asm	/^f01014d2:	3a 19                	cmp    (%ecx),%bl$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	74 f1                	je     f01014c7 <strncmp+0x1b>$/;"	l
f01014d6	obj/kern/kernel.asm	/^f01014d6:	eb 0f                	jmp    f01014e7 <strncmp+0x3b>$/;"	l
f01014d8	obj/kern/kernel.asm	/^f01014d8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01014dd	obj/kern/kernel.asm	/^f01014dd:	eb 05                	jmp    f01014e4 <strncmp+0x38>$/;"	l
f01014df	obj/kern/kernel.asm	/^f01014df:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01014e4	obj/kern/kernel.asm	/^f01014e4:	5b                   	pop    %ebx$/;"	l
f01014e5	obj/kern/kernel.asm	/^f01014e5:	c9                   	leave  $/;"	l
f01014e6	obj/kern/kernel.asm	/^f01014e6:	c3                   	ret    $/;"	l
f01014e7	obj/kern/kernel.asm	/^f01014e7:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f01014ea	obj/kern/kernel.asm	/^f01014ea:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f01014ed	obj/kern/kernel.asm	/^f01014ed:	29 d0                	sub    %edx,%eax$/;"	l
f01014ef	obj/kern/kernel.asm	/^f01014ef:	eb f3                	jmp    f01014e4 <strncmp+0x38>$/;"	l
f01014f1	obj/kern/kernel.asm	/^f01014f1 <strchr>:$/;"	l
f01014f1	obj/kern/kernel.asm	/^f01014f1:	55                   	push   %ebp$/;"	l
f01014f2	obj/kern/kernel.asm	/^f01014f2:	89 e5                	mov    %esp,%ebp$/;"	l
f01014f4	obj/kern/kernel.asm	/^f01014f4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01014f7	obj/kern/kernel.asm	/^f01014f7:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
f01014fa	obj/kern/kernel.asm	/^f01014fa:	8a 10                	mov    (%eax),%dl$/;"	l
f01014fc	obj/kern/kernel.asm	/^f01014fc:	84 d2                	test   %dl,%dl$/;"	l
f01014fe	obj/kern/kernel.asm	/^f01014fe:	74 18                	je     f0101518 <strchr+0x27>$/;"	l
f0101500	obj/kern/kernel.asm	/^f0101500:	38 ca                	cmp    %cl,%dl$/;"	l
f0101502	obj/kern/kernel.asm	/^f0101502:	75 06                	jne    f010150a <strchr+0x19>$/;"	l
f0101504	obj/kern/kernel.asm	/^f0101504:	eb 17                	jmp    f010151d <strchr+0x2c>$/;"	l
f0101506	obj/kern/kernel.asm	/^f0101506:	38 ca                	cmp    %cl,%dl$/;"	l
f0101508	obj/kern/kernel.asm	/^f0101508:	74 13                	je     f010151d <strchr+0x2c>$/;"	l
f010150a	obj/kern/kernel.asm	/^f010150a:	40                   	inc    %eax$/;"	l
f010150b	obj/kern/kernel.asm	/^f010150b:	8a 10                	mov    (%eax),%dl$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	84 d2                	test   %dl,%dl$/;"	l
f010150f	obj/kern/kernel.asm	/^f010150f:	75 f5                	jne    f0101506 <strchr+0x15>$/;"	l
f0101511	obj/kern/kernel.asm	/^f0101511:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101516	obj/kern/kernel.asm	/^f0101516:	eb 05                	jmp    f010151d <strchr+0x2c>$/;"	l
f0101518	obj/kern/kernel.asm	/^f0101518:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010151d	obj/kern/kernel.asm	/^f010151d:	c9                   	leave  $/;"	l
f010151e	obj/kern/kernel.asm	/^f010151e:	c3                   	ret    $/;"	l
f010151f	obj/kern/kernel.asm	/^f010151f <strfind>:$/;"	l
f010151f	obj/kern/kernel.asm	/^f010151f:	55                   	push   %ebp$/;"	l
f0101520	obj/kern/kernel.asm	/^f0101520:	89 e5                	mov    %esp,%ebp$/;"	l
f0101522	obj/kern/kernel.asm	/^f0101522:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101525	obj/kern/kernel.asm	/^f0101525:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
f0101528	obj/kern/kernel.asm	/^f0101528:	8a 10                	mov    (%eax),%dl$/;"	l
f010152a	obj/kern/kernel.asm	/^f010152a:	84 d2                	test   %dl,%dl$/;"	l
f010152c	obj/kern/kernel.asm	/^f010152c:	74 11                	je     f010153f <strfind+0x20>$/;"	l
f010152e	obj/kern/kernel.asm	/^f010152e:	38 ca                	cmp    %cl,%dl$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	75 06                	jne    f0101538 <strfind+0x19>$/;"	l
f0101532	obj/kern/kernel.asm	/^f0101532:	eb 0b                	jmp    f010153f <strfind+0x20>$/;"	l
f0101534	obj/kern/kernel.asm	/^f0101534:	38 ca                	cmp    %cl,%dl$/;"	l
f0101536	obj/kern/kernel.asm	/^f0101536:	74 07                	je     f010153f <strfind+0x20>$/;"	l
f0101538	obj/kern/kernel.asm	/^f0101538:	40                   	inc    %eax$/;"	l
f0101539	obj/kern/kernel.asm	/^f0101539:	8a 10                	mov    (%eax),%dl$/;"	l
f010153b	obj/kern/kernel.asm	/^f010153b:	84 d2                	test   %dl,%dl$/;"	l
f010153d	obj/kern/kernel.asm	/^f010153d:	75 f5                	jne    f0101534 <strfind+0x15>$/;"	l
f010153f	obj/kern/kernel.asm	/^f010153f:	c9                   	leave  $/;"	l
f0101540	obj/kern/kernel.asm	/^f0101540:	c3                   	ret    $/;"	l
f0101541	obj/kern/kernel.asm	/^f0101541 <memset>:$/;"	l
f0101541	obj/kern/kernel.asm	/^f0101541:	55                   	push   %ebp$/;"	l
f0101542	obj/kern/kernel.asm	/^f0101542:	89 e5                	mov    %esp,%ebp$/;"	l
f0101544	obj/kern/kernel.asm	/^f0101544:	57                   	push   %edi$/;"	l
f0101545	obj/kern/kernel.asm	/^f0101545:	56                   	push   %esi$/;"	l
f0101546	obj/kern/kernel.asm	/^f0101546:	53                   	push   %ebx$/;"	l
f0101547	obj/kern/kernel.asm	/^f0101547:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010154a	obj/kern/kernel.asm	/^f010154a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010154d	obj/kern/kernel.asm	/^f010154d:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0101550	obj/kern/kernel.asm	/^f0101550:	85 c9                	test   %ecx,%ecx$/;"	l
f0101552	obj/kern/kernel.asm	/^f0101552:	74 30                	je     f0101584 <memset+0x43>$/;"	l
f0101554	obj/kern/kernel.asm	/^f0101554:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f010155a	obj/kern/kernel.asm	/^f010155a:	75 25                	jne    f0101581 <memset+0x40>$/;"	l
f010155c	obj/kern/kernel.asm	/^f010155c:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010155f	obj/kern/kernel.asm	/^f010155f:	75 20                	jne    f0101581 <memset+0x40>$/;"	l
f0101561	obj/kern/kernel.asm	/^f0101561:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0101564	obj/kern/kernel.asm	/^f0101564:	89 d3                	mov    %edx,%ebx$/;"	l
f0101566	obj/kern/kernel.asm	/^f0101566:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f0101569	obj/kern/kernel.asm	/^f0101569:	89 d6                	mov    %edx,%esi$/;"	l
f010156b	obj/kern/kernel.asm	/^f010156b:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f010156e	obj/kern/kernel.asm	/^f010156e:	89 d0                	mov    %edx,%eax$/;"	l
f0101570	obj/kern/kernel.asm	/^f0101570:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0101573	obj/kern/kernel.asm	/^f0101573:	09 f0                	or     %esi,%eax$/;"	l
f0101575	obj/kern/kernel.asm	/^f0101575:	09 d0                	or     %edx,%eax$/;"	l
f0101577	obj/kern/kernel.asm	/^f0101577:	09 d8                	or     %ebx,%eax$/;"	l
f0101579	obj/kern/kernel.asm	/^f0101579:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010157c	obj/kern/kernel.asm	/^f010157c:	fc                   	cld    $/;"	l
f010157d	obj/kern/kernel.asm	/^f010157d:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f010157f	obj/kern/kernel.asm	/^f010157f:	eb 03                	jmp    f0101584 <memset+0x43>$/;"	l
f0101581	obj/kern/kernel.asm	/^f0101581:	fc                   	cld    $/;"	l
f0101582	obj/kern/kernel.asm	/^f0101582:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0101584	obj/kern/kernel.asm	/^f0101584:	89 f8                	mov    %edi,%eax$/;"	l
f0101586	obj/kern/kernel.asm	/^f0101586:	5b                   	pop    %ebx$/;"	l
f0101587	obj/kern/kernel.asm	/^f0101587:	5e                   	pop    %esi$/;"	l
f0101588	obj/kern/kernel.asm	/^f0101588:	5f                   	pop    %edi$/;"	l
f0101589	obj/kern/kernel.asm	/^f0101589:	c9                   	leave  $/;"	l
f010158a	obj/kern/kernel.asm	/^f010158a:	c3                   	ret    $/;"	l
f010158b	obj/kern/kernel.asm	/^f010158b <memmove>:$/;"	l
f010158b	obj/kern/kernel.asm	/^f010158b:	55                   	push   %ebp$/;"	l
f010158c	obj/kern/kernel.asm	/^f010158c:	89 e5                	mov    %esp,%ebp$/;"	l
f010158e	obj/kern/kernel.asm	/^f010158e:	57                   	push   %edi$/;"	l
f010158f	obj/kern/kernel.asm	/^f010158f:	56                   	push   %esi$/;"	l
f0101590	obj/kern/kernel.asm	/^f0101590:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101593	obj/kern/kernel.asm	/^f0101593:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101596	obj/kern/kernel.asm	/^f0101596:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0101599	obj/kern/kernel.asm	/^f0101599:	39 c6                	cmp    %eax,%esi$/;"	l
f010159b	obj/kern/kernel.asm	/^f010159b:	73 34                	jae    f01015d1 <memmove+0x46>$/;"	l
f010159d	obj/kern/kernel.asm	/^f010159d:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f01015a0	obj/kern/kernel.asm	/^f01015a0:	39 d0                	cmp    %edx,%eax$/;"	l
f01015a2	obj/kern/kernel.asm	/^f01015a2:	73 2d                	jae    f01015d1 <memmove+0x46>$/;"	l
f01015a4	obj/kern/kernel.asm	/^f01015a4:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f01015a7	obj/kern/kernel.asm	/^f01015a7:	f6 c2 03             	test   $0x3,%dl$/;"	l
f01015aa	obj/kern/kernel.asm	/^f01015aa:	75 1b                	jne    f01015c7 <memmove+0x3c>$/;"	l
f01015ac	obj/kern/kernel.asm	/^f01015ac:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01015b2	obj/kern/kernel.asm	/^f01015b2:	75 13                	jne    f01015c7 <memmove+0x3c>$/;"	l
f01015b4	obj/kern/kernel.asm	/^f01015b4:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01015b7	obj/kern/kernel.asm	/^f01015b7:	75 0e                	jne    f01015c7 <memmove+0x3c>$/;"	l
f01015b9	obj/kern/kernel.asm	/^f01015b9:	83 ef 04             	sub    $0x4,%edi$/;"	l
f01015bc	obj/kern/kernel.asm	/^f01015bc:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f01015bf	obj/kern/kernel.asm	/^f01015bf:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01015c2	obj/kern/kernel.asm	/^f01015c2:	fd                   	std    $/;"	l
f01015c3	obj/kern/kernel.asm	/^f01015c3:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01015c5	obj/kern/kernel.asm	/^f01015c5:	eb 07                	jmp    f01015ce <memmove+0x43>$/;"	l
f01015c7	obj/kern/kernel.asm	/^f01015c7:	4f                   	dec    %edi$/;"	l
f01015c8	obj/kern/kernel.asm	/^f01015c8:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f01015cb	obj/kern/kernel.asm	/^f01015cb:	fd                   	std    $/;"	l
f01015cc	obj/kern/kernel.asm	/^f01015cc:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f01015ce	obj/kern/kernel.asm	/^f01015ce:	fc                   	cld    $/;"	l
f01015cf	obj/kern/kernel.asm	/^f01015cf:	eb 20                	jmp    f01015f1 <memmove+0x66>$/;"	l
f01015d1	obj/kern/kernel.asm	/^f01015d1:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f01015d7	obj/kern/kernel.asm	/^f01015d7:	75 13                	jne    f01015ec <memmove+0x61>$/;"	l
f01015d9	obj/kern/kernel.asm	/^f01015d9:	a8 03                	test   $0x3,%al$/;"	l
f01015db	obj/kern/kernel.asm	/^f01015db:	75 0f                	jne    f01015ec <memmove+0x61>$/;"	l
f01015dd	obj/kern/kernel.asm	/^f01015dd:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01015e0	obj/kern/kernel.asm	/^f01015e0:	75 0a                	jne    f01015ec <memmove+0x61>$/;"	l
f01015e2	obj/kern/kernel.asm	/^f01015e2:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01015e5	obj/kern/kernel.asm	/^f01015e5:	89 c7                	mov    %eax,%edi$/;"	l
f01015e7	obj/kern/kernel.asm	/^f01015e7:	fc                   	cld    $/;"	l
f01015e8	obj/kern/kernel.asm	/^f01015e8:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01015ea	obj/kern/kernel.asm	/^f01015ea:	eb 05                	jmp    f01015f1 <memmove+0x66>$/;"	l
f01015ec	obj/kern/kernel.asm	/^f01015ec:	89 c7                	mov    %eax,%edi$/;"	l
f01015ee	obj/kern/kernel.asm	/^f01015ee:	fc                   	cld    $/;"	l
f01015ef	obj/kern/kernel.asm	/^f01015ef:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f01015f1	obj/kern/kernel.asm	/^f01015f1:	5e                   	pop    %esi$/;"	l
f01015f2	obj/kern/kernel.asm	/^f01015f2:	5f                   	pop    %edi$/;"	l
f01015f3	obj/kern/kernel.asm	/^f01015f3:	c9                   	leave  $/;"	l
f01015f4	obj/kern/kernel.asm	/^f01015f4:	c3                   	ret    $/;"	l
f01015f5	obj/kern/kernel.asm	/^f01015f5 <memcpy>:$/;"	l
f01015f5	obj/kern/kernel.asm	/^f01015f5:	55                   	push   %ebp$/;"	l
f01015f6	obj/kern/kernel.asm	/^f01015f6:	89 e5                	mov    %esp,%ebp$/;"	l
f01015f8	obj/kern/kernel.asm	/^f01015f8:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01015fb	obj/kern/kernel.asm	/^f01015fb:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01015fe	obj/kern/kernel.asm	/^f01015fe:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101601	obj/kern/kernel.asm	/^f0101601:	e8 85 ff ff ff       	call   f010158b <memmove>$/;"	l
f0101606	obj/kern/kernel.asm	/^f0101606:	c9                   	leave  $/;"	l
f0101607	obj/kern/kernel.asm	/^f0101607:	c3                   	ret    $/;"	l
f0101608	obj/kern/kernel.asm	/^f0101608 <memcmp>:$/;"	l
f0101608	obj/kern/kernel.asm	/^f0101608:	55                   	push   %ebp$/;"	l
f0101609	obj/kern/kernel.asm	/^f0101609:	89 e5                	mov    %esp,%ebp$/;"	l
f010160b	obj/kern/kernel.asm	/^f010160b:	57                   	push   %edi$/;"	l
f010160c	obj/kern/kernel.asm	/^f010160c:	56                   	push   %esi$/;"	l
f010160d	obj/kern/kernel.asm	/^f010160d:	53                   	push   %ebx$/;"	l
f010160e	obj/kern/kernel.asm	/^f010160e:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0101611	obj/kern/kernel.asm	/^f0101611:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101614	obj/kern/kernel.asm	/^f0101614:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0101617	obj/kern/kernel.asm	/^f0101617:	85 ff                	test   %edi,%edi$/;"	l
f0101619	obj/kern/kernel.asm	/^f0101619:	74 32                	je     f010164d <memcmp+0x45>$/;"	l
f010161b	obj/kern/kernel.asm	/^f010161b:	8a 03                	mov    (%ebx),%al$/;"	l
f010161d	obj/kern/kernel.asm	/^f010161d:	8a 0e                	mov    (%esi),%cl$/;"	l
f010161f	obj/kern/kernel.asm	/^f010161f:	38 c8                	cmp    %cl,%al$/;"	l
f0101621	obj/kern/kernel.asm	/^f0101621:	74 19                	je     f010163c <memcmp+0x34>$/;"	l
f0101623	obj/kern/kernel.asm	/^f0101623:	eb 0d                	jmp    f0101632 <memcmp+0x2a>$/;"	l
f0101625	obj/kern/kernel.asm	/^f0101625:	8a 44 13 01          	mov    0x1(%ebx,%edx,1),%al$/;"	l
f0101629	obj/kern/kernel.asm	/^f0101629:	8a 4c 16 01          	mov    0x1(%esi,%edx,1),%cl$/;"	l
f010162d	obj/kern/kernel.asm	/^f010162d:	42                   	inc    %edx$/;"	l
f010162e	obj/kern/kernel.asm	/^f010162e:	38 c8                	cmp    %cl,%al$/;"	l
f0101630	obj/kern/kernel.asm	/^f0101630:	74 10                	je     f0101642 <memcmp+0x3a>$/;"	l
f0101632	obj/kern/kernel.asm	/^f0101632:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0101635	obj/kern/kernel.asm	/^f0101635:	0f b6 c9             	movzbl %cl,%ecx$/;"	l
f0101638	obj/kern/kernel.asm	/^f0101638:	29 c8                	sub    %ecx,%eax$/;"	l
f010163a	obj/kern/kernel.asm	/^f010163a:	eb 16                	jmp    f0101652 <memcmp+0x4a>$/;"	l
f010163c	obj/kern/kernel.asm	/^f010163c:	4f                   	dec    %edi$/;"	l
f010163d	obj/kern/kernel.asm	/^f010163d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101642	obj/kern/kernel.asm	/^f0101642:	39 fa                	cmp    %edi,%edx$/;"	l
f0101644	obj/kern/kernel.asm	/^f0101644:	75 df                	jne    f0101625 <memcmp+0x1d>$/;"	l
f0101646	obj/kern/kernel.asm	/^f0101646:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010164b	obj/kern/kernel.asm	/^f010164b:	eb 05                	jmp    f0101652 <memcmp+0x4a>$/;"	l
f010164d	obj/kern/kernel.asm	/^f010164d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101652	obj/kern/kernel.asm	/^f0101652:	5b                   	pop    %ebx$/;"	l
f0101653	obj/kern/kernel.asm	/^f0101653:	5e                   	pop    %esi$/;"	l
f0101654	obj/kern/kernel.asm	/^f0101654:	5f                   	pop    %edi$/;"	l
f0101655	obj/kern/kernel.asm	/^f0101655:	c9                   	leave  $/;"	l
f0101656	obj/kern/kernel.asm	/^f0101656:	c3                   	ret    $/;"	l
f0101657	obj/kern/kernel.asm	/^f0101657 <memfind>:$/;"	l
f0101657	obj/kern/kernel.asm	/^f0101657:	55                   	push   %ebp$/;"	l
f0101658	obj/kern/kernel.asm	/^f0101658:	89 e5                	mov    %esp,%ebp$/;"	l
f010165a	obj/kern/kernel.asm	/^f010165a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010165d	obj/kern/kernel.asm	/^f010165d:	89 c2                	mov    %eax,%edx$/;"	l
f010165f	obj/kern/kernel.asm	/^f010165f:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f0101662	obj/kern/kernel.asm	/^f0101662:	39 d0                	cmp    %edx,%eax$/;"	l
f0101664	obj/kern/kernel.asm	/^f0101664:	73 12                	jae    f0101678 <memfind+0x21>$/;"	l
f0101666	obj/kern/kernel.asm	/^f0101666:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
f0101669	obj/kern/kernel.asm	/^f0101669:	38 08                	cmp    %cl,(%eax)$/;"	l
f010166b	obj/kern/kernel.asm	/^f010166b:	75 06                	jne    f0101673 <memfind+0x1c>$/;"	l
f010166d	obj/kern/kernel.asm	/^f010166d:	eb 09                	jmp    f0101678 <memfind+0x21>$/;"	l
f010166f	obj/kern/kernel.asm	/^f010166f:	38 08                	cmp    %cl,(%eax)$/;"	l
f0101671	obj/kern/kernel.asm	/^f0101671:	74 05                	je     f0101678 <memfind+0x21>$/;"	l
f0101673	obj/kern/kernel.asm	/^f0101673:	40                   	inc    %eax$/;"	l
f0101674	obj/kern/kernel.asm	/^f0101674:	39 c2                	cmp    %eax,%edx$/;"	l
f0101676	obj/kern/kernel.asm	/^f0101676:	77 f7                	ja     f010166f <memfind+0x18>$/;"	l
f0101678	obj/kern/kernel.asm	/^f0101678:	c9                   	leave  $/;"	l
f0101679	obj/kern/kernel.asm	/^f0101679:	c3                   	ret    $/;"	l
f010167a	obj/kern/kernel.asm	/^f010167a <strtol>:$/;"	l
f010167a	obj/kern/kernel.asm	/^f010167a:	55                   	push   %ebp$/;"	l
f010167b	obj/kern/kernel.asm	/^f010167b:	89 e5                	mov    %esp,%ebp$/;"	l
f010167d	obj/kern/kernel.asm	/^f010167d:	57                   	push   %edi$/;"	l
f010167e	obj/kern/kernel.asm	/^f010167e:	56                   	push   %esi$/;"	l
f010167f	obj/kern/kernel.asm	/^f010167f:	53                   	push   %ebx$/;"	l
f0101680	obj/kern/kernel.asm	/^f0101680:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101683	obj/kern/kernel.asm	/^f0101683:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0101686	obj/kern/kernel.asm	/^f0101686:	eb 01                	jmp    f0101689 <strtol+0xf>$/;"	l
f0101688	obj/kern/kernel.asm	/^f0101688:	42                   	inc    %edx$/;"	l
f0101689	obj/kern/kernel.asm	/^f0101689:	8a 02                	mov    (%edx),%al$/;"	l
f010168b	obj/kern/kernel.asm	/^f010168b:	3c 20                	cmp    $0x20,%al$/;"	l
f010168d	obj/kern/kernel.asm	/^f010168d:	74 f9                	je     f0101688 <strtol+0xe>$/;"	l
f010168f	obj/kern/kernel.asm	/^f010168f:	3c 09                	cmp    $0x9,%al$/;"	l
f0101691	obj/kern/kernel.asm	/^f0101691:	74 f5                	je     f0101688 <strtol+0xe>$/;"	l
f0101693	obj/kern/kernel.asm	/^f0101693:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0101695	obj/kern/kernel.asm	/^f0101695:	75 08                	jne    f010169f <strtol+0x25>$/;"	l
f0101697	obj/kern/kernel.asm	/^f0101697:	42                   	inc    %edx$/;"	l
f0101698	obj/kern/kernel.asm	/^f0101698:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010169d	obj/kern/kernel.asm	/^f010169d:	eb 13                	jmp    f01016b2 <strtol+0x38>$/;"	l
f010169f	obj/kern/kernel.asm	/^f010169f:	3c 2d                	cmp    $0x2d,%al$/;"	l
f01016a1	obj/kern/kernel.asm	/^f01016a1:	75 0a                	jne    f01016ad <strtol+0x33>$/;"	l
f01016a3	obj/kern/kernel.asm	/^f01016a3:	8d 52 01             	lea    0x1(%edx),%edx$/;"	l
f01016a6	obj/kern/kernel.asm	/^f01016a6:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f01016ab	obj/kern/kernel.asm	/^f01016ab:	eb 05                	jmp    f01016b2 <strtol+0x38>$/;"	l
f01016ad	obj/kern/kernel.asm	/^f01016ad:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01016b2	obj/kern/kernel.asm	/^f01016b2:	85 db                	test   %ebx,%ebx$/;"	l
f01016b4	obj/kern/kernel.asm	/^f01016b4:	74 05                	je     f01016bb <strtol+0x41>$/;"	l
f01016b6	obj/kern/kernel.asm	/^f01016b6:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f01016b9	obj/kern/kernel.asm	/^f01016b9:	75 28                	jne    f01016e3 <strtol+0x69>$/;"	l
f01016bb	obj/kern/kernel.asm	/^f01016bb:	8a 02                	mov    (%edx),%al$/;"	l
f01016bd	obj/kern/kernel.asm	/^f01016bd:	3c 30                	cmp    $0x30,%al$/;"	l
f01016bf	obj/kern/kernel.asm	/^f01016bf:	75 10                	jne    f01016d1 <strtol+0x57>$/;"	l
f01016c1	obj/kern/kernel.asm	/^f01016c1:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f01016c5	obj/kern/kernel.asm	/^f01016c5:	75 0a                	jne    f01016d1 <strtol+0x57>$/;"	l
f01016c7	obj/kern/kernel.asm	/^f01016c7:	83 c2 02             	add    $0x2,%edx$/;"	l
f01016ca	obj/kern/kernel.asm	/^f01016ca:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f01016cf	obj/kern/kernel.asm	/^f01016cf:	eb 12                	jmp    f01016e3 <strtol+0x69>$/;"	l
f01016d1	obj/kern/kernel.asm	/^f01016d1:	85 db                	test   %ebx,%ebx$/;"	l
f01016d3	obj/kern/kernel.asm	/^f01016d3:	75 0e                	jne    f01016e3 <strtol+0x69>$/;"	l
f01016d5	obj/kern/kernel.asm	/^f01016d5:	3c 30                	cmp    $0x30,%al$/;"	l
f01016d7	obj/kern/kernel.asm	/^f01016d7:	75 05                	jne    f01016de <strtol+0x64>$/;"	l
f01016d9	obj/kern/kernel.asm	/^f01016d9:	42                   	inc    %edx$/;"	l
f01016da	obj/kern/kernel.asm	/^f01016da:	b3 08                	mov    $0x8,%bl$/;"	l
f01016dc	obj/kern/kernel.asm	/^f01016dc:	eb 05                	jmp    f01016e3 <strtol+0x69>$/;"	l
f01016de	obj/kern/kernel.asm	/^f01016de:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01016e8	obj/kern/kernel.asm	/^f01016e8:	89 de                	mov    %ebx,%esi$/;"	l
f01016ea	obj/kern/kernel.asm	/^f01016ea:	8a 0a                	mov    (%edx),%cl$/;"	l
f01016ec	obj/kern/kernel.asm	/^f01016ec:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f01016ef	obj/kern/kernel.asm	/^f01016ef:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f01016f2	obj/kern/kernel.asm	/^f01016f2:	77 08                	ja     f01016fc <strtol+0x82>$/;"	l
f01016f4	obj/kern/kernel.asm	/^f01016f4:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01016f7	obj/kern/kernel.asm	/^f01016f7:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f01016fa	obj/kern/kernel.asm	/^f01016fa:	eb 1e                	jmp    f010171a <strtol+0xa0>$/;"	l
f01016fc	obj/kern/kernel.asm	/^f01016fc:	8d 59 9f             	lea    -0x61(%ecx),%ebx$/;"	l
f01016ff	obj/kern/kernel.asm	/^f01016ff:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0101702	obj/kern/kernel.asm	/^f0101702:	77 08                	ja     f010170c <strtol+0x92>$/;"	l
f0101704	obj/kern/kernel.asm	/^f0101704:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0101707	obj/kern/kernel.asm	/^f0101707:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f010170a	obj/kern/kernel.asm	/^f010170a:	eb 0e                	jmp    f010171a <strtol+0xa0>$/;"	l
f010170c	obj/kern/kernel.asm	/^f010170c:	8d 59 bf             	lea    -0x41(%ecx),%ebx$/;"	l
f010170f	obj/kern/kernel.asm	/^f010170f:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0101712	obj/kern/kernel.asm	/^f0101712:	77 13                	ja     f0101727 <strtol+0xad>$/;"	l
f0101714	obj/kern/kernel.asm	/^f0101714:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0101717	obj/kern/kernel.asm	/^f0101717:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f010171a	obj/kern/kernel.asm	/^f010171a:	39 f1                	cmp    %esi,%ecx$/;"	l
f010171c	obj/kern/kernel.asm	/^f010171c:	7d 0d                	jge    f010172b <strtol+0xb1>$/;"	l
f010171e	obj/kern/kernel.asm	/^f010171e:	42                   	inc    %edx$/;"	l
f010171f	obj/kern/kernel.asm	/^f010171f:	0f af c6             	imul   %esi,%eax$/;"	l
f0101722	obj/kern/kernel.asm	/^f0101722:	8d 04 01             	lea    (%ecx,%eax,1),%eax$/;"	l
f0101725	obj/kern/kernel.asm	/^f0101725:	eb c3                	jmp    f01016ea <strtol+0x70>$/;"	l
f0101727	obj/kern/kernel.asm	/^f0101727:	89 c1                	mov    %eax,%ecx$/;"	l
f0101729	obj/kern/kernel.asm	/^f0101729:	eb 02                	jmp    f010172d <strtol+0xb3>$/;"	l
f010172b	obj/kern/kernel.asm	/^f010172b:	89 c1                	mov    %eax,%ecx$/;"	l
f010172d	obj/kern/kernel.asm	/^f010172d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0101731	obj/kern/kernel.asm	/^f0101731:	74 05                	je     f0101738 <strtol+0xbe>$/;"	l
f0101733	obj/kern/kernel.asm	/^f0101733:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101736	obj/kern/kernel.asm	/^f0101736:	89 13                	mov    %edx,(%ebx)$/;"	l
f0101738	obj/kern/kernel.asm	/^f0101738:	85 ff                	test   %edi,%edi$/;"	l
f010173a	obj/kern/kernel.asm	/^f010173a:	74 04                	je     f0101740 <strtol+0xc6>$/;"	l
f010173c	obj/kern/kernel.asm	/^f010173c:	89 c8                	mov    %ecx,%eax$/;"	l
f010173e	obj/kern/kernel.asm	/^f010173e:	f7 d8                	neg    %eax$/;"	l
f0101740	obj/kern/kernel.asm	/^f0101740:	5b                   	pop    %ebx$/;"	l
f0101741	obj/kern/kernel.asm	/^f0101741:	5e                   	pop    %esi$/;"	l
f0101742	obj/kern/kernel.asm	/^f0101742:	5f                   	pop    %edi$/;"	l
f0101743	obj/kern/kernel.asm	/^f0101743:	c9                   	leave  $/;"	l
f0101744	obj/kern/kernel.asm	/^f0101744:	c3                   	ret    $/;"	l
f0101745	obj/kern/kernel.asm	/^f0101745:	00 00                	add    %al,(%eax)$/;"	l
f0101748	obj/kern/kernel.asm	/^f0101748 <__udivdi3>:$/;"	l
f0101748	obj/kern/kernel.asm	/^f0101748:	55                   	push   %ebp$/;"	l
f0101749	obj/kern/kernel.asm	/^f0101749:	89 e5                	mov    %esp,%ebp$/;"	l
f010174b	obj/kern/kernel.asm	/^f010174b:	57                   	push   %edi$/;"	l
f010174c	obj/kern/kernel.asm	/^f010174c:	56                   	push   %esi$/;"	l
f010174d	obj/kern/kernel.asm	/^f010174d:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0101750	obj/kern/kernel.asm	/^f0101750:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0101753	obj/kern/kernel.asm	/^f0101753:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0101756	obj/kern/kernel.asm	/^f0101756:	89 7d f0             	mov    %edi,-0x10(%ebp)$/;"	l
f0101759	obj/kern/kernel.asm	/^f0101759:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010175c	obj/kern/kernel.asm	/^f010175c:	89 4d f4             	mov    %ecx,-0xc(%ebp)$/;"	l
f010175f	obj/kern/kernel.asm	/^f010175f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101762	obj/kern/kernel.asm	/^f0101762:	85 c0                	test   %eax,%eax$/;"	l
f0101764	obj/kern/kernel.asm	/^f0101764:	75 2e                	jne    f0101794 <__udivdi3+0x4c>$/;"	l
f0101766	obj/kern/kernel.asm	/^f0101766:	39 f1                	cmp    %esi,%ecx$/;"	l
f0101768	obj/kern/kernel.asm	/^f0101768:	77 5a                	ja     f01017c4 <__udivdi3+0x7c>$/;"	l
f010176a	obj/kern/kernel.asm	/^f010176a:	85 c9                	test   %ecx,%ecx$/;"	l
f010176c	obj/kern/kernel.asm	/^f010176c:	75 0b                	jne    f0101779 <__udivdi3+0x31>$/;"	l
f010176e	obj/kern/kernel.asm	/^f010176e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101773	obj/kern/kernel.asm	/^f0101773:	31 d2                	xor    %edx,%edx$/;"	l
f0101775	obj/kern/kernel.asm	/^f0101775:	f7 f1                	div    %ecx$/;"	l
f0101777	obj/kern/kernel.asm	/^f0101777:	89 c1                	mov    %eax,%ecx$/;"	l
f0101779	obj/kern/kernel.asm	/^f0101779:	31 d2                	xor    %edx,%edx$/;"	l
f010177b	obj/kern/kernel.asm	/^f010177b:	89 f0                	mov    %esi,%eax$/;"	l
f010177d	obj/kern/kernel.asm	/^f010177d:	f7 f1                	div    %ecx$/;"	l
f010177f	obj/kern/kernel.asm	/^f010177f:	89 c6                	mov    %eax,%esi$/;"	l
f0101781	obj/kern/kernel.asm	/^f0101781:	89 f8                	mov    %edi,%eax$/;"	l
f0101783	obj/kern/kernel.asm	/^f0101783:	f7 f1                	div    %ecx$/;"	l
f0101785	obj/kern/kernel.asm	/^f0101785:	89 c7                	mov    %eax,%edi$/;"	l
f0101787	obj/kern/kernel.asm	/^f0101787:	89 f8                	mov    %edi,%eax$/;"	l
f0101789	obj/kern/kernel.asm	/^f0101789:	89 f2                	mov    %esi,%edx$/;"	l
f010178b	obj/kern/kernel.asm	/^f010178b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010178e	obj/kern/kernel.asm	/^f010178e:	5e                   	pop    %esi$/;"	l
f010178f	obj/kern/kernel.asm	/^f010178f:	5f                   	pop    %edi$/;"	l
f0101790	obj/kern/kernel.asm	/^f0101790:	c9                   	leave  $/;"	l
f0101791	obj/kern/kernel.asm	/^f0101791:	c3                   	ret    $/;"	l
f0101792	obj/kern/kernel.asm	/^f0101792:	66 90                	xchg   %ax,%ax$/;"	l
f0101794	obj/kern/kernel.asm	/^f0101794:	39 f0                	cmp    %esi,%eax$/;"	l
f0101796	obj/kern/kernel.asm	/^f0101796:	77 1c                	ja     f01017b4 <__udivdi3+0x6c>$/;"	l
f0101798	obj/kern/kernel.asm	/^f0101798:	0f bd f8             	bsr    %eax,%edi$/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f010179e	obj/kern/kernel.asm	/^f010179e:	75 3c                	jne    f01017dc <__udivdi3+0x94>$/;"	l
f01017a0	obj/kern/kernel.asm	/^f01017a0:	39 f0                	cmp    %esi,%eax$/;"	l
f01017a2	obj/kern/kernel.asm	/^f01017a2:	0f 82 90 00 00 00    	jb     f0101838 <__udivdi3+0xf0>$/;"	l
f01017a8	obj/kern/kernel.asm	/^f01017a8:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01017ab	obj/kern/kernel.asm	/^f01017ab:	39 55 f4             	cmp    %edx,-0xc(%ebp)$/;"	l
f01017ae	obj/kern/kernel.asm	/^f01017ae:	0f 86 84 00 00 00    	jbe    f0101838 <__udivdi3+0xf0>$/;"	l
f01017b4	obj/kern/kernel.asm	/^f01017b4:	31 f6                	xor    %esi,%esi$/;"	l
f01017b6	obj/kern/kernel.asm	/^f01017b6:	31 ff                	xor    %edi,%edi$/;"	l
f01017b8	obj/kern/kernel.asm	/^f01017b8:	89 f8                	mov    %edi,%eax$/;"	l
f01017ba	obj/kern/kernel.asm	/^f01017ba:	89 f2                	mov    %esi,%edx$/;"	l
f01017bc	obj/kern/kernel.asm	/^f01017bc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01017bf	obj/kern/kernel.asm	/^f01017bf:	5e                   	pop    %esi$/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0:	5f                   	pop    %edi$/;"	l
f01017c1	obj/kern/kernel.asm	/^f01017c1:	c9                   	leave  $/;"	l
f01017c2	obj/kern/kernel.asm	/^f01017c2:	c3                   	ret    $/;"	l
f01017c3	obj/kern/kernel.asm	/^f01017c3:	90                   	nop$/;"	l
f01017c4	obj/kern/kernel.asm	/^f01017c4:	89 f2                	mov    %esi,%edx$/;"	l
f01017c6	obj/kern/kernel.asm	/^f01017c6:	89 f8                	mov    %edi,%eax$/;"	l
f01017c8	obj/kern/kernel.asm	/^f01017c8:	f7 f1                	div    %ecx$/;"	l
f01017ca	obj/kern/kernel.asm	/^f01017ca:	89 c7                	mov    %eax,%edi$/;"	l
f01017cc	obj/kern/kernel.asm	/^f01017cc:	31 f6                	xor    %esi,%esi$/;"	l
f01017ce	obj/kern/kernel.asm	/^f01017ce:	89 f8                	mov    %edi,%eax$/;"	l
f01017d0	obj/kern/kernel.asm	/^f01017d0:	89 f2                	mov    %esi,%edx$/;"	l
f01017d2	obj/kern/kernel.asm	/^f01017d2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01017d5	obj/kern/kernel.asm	/^f01017d5:	5e                   	pop    %esi$/;"	l
f01017d6	obj/kern/kernel.asm	/^f01017d6:	5f                   	pop    %edi$/;"	l
f01017d7	obj/kern/kernel.asm	/^f01017d7:	c9                   	leave  $/;"	l
f01017d8	obj/kern/kernel.asm	/^f01017d8:	c3                   	ret    $/;"	l
f01017d9	obj/kern/kernel.asm	/^f01017d9:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01017dc	obj/kern/kernel.asm	/^f01017dc:	89 f9                	mov    %edi,%ecx$/;"	l
f01017de	obj/kern/kernel.asm	/^f01017de:	d3 e0                	shl    %cl,%eax$/;"	d
f01017e0	obj/kern/kernel.asm	/^f01017e0:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f01017e3	obj/kern/kernel.asm	/^f01017e3:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01017e8	obj/kern/kernel.asm	/^f01017e8:	29 f8                	sub    %edi,%eax$/;"	l
f01017ea	obj/kern/kernel.asm	/^f01017ea:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01017ed	obj/kern/kernel.asm	/^f01017ed:	88 c1                	mov    %al,%cl$/;"	l
f01017ef	obj/kern/kernel.asm	/^f01017ef:	d3 ea                	shr    %cl,%edx$/;"	d
f01017f1	obj/kern/kernel.asm	/^f01017f1:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f01017f4	obj/kern/kernel.asm	/^f01017f4:	09 ca                	or     %ecx,%edx$/;"	l
f01017f6	obj/kern/kernel.asm	/^f01017f6:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
f01017f9	obj/kern/kernel.asm	/^f01017f9:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01017fc	obj/kern/kernel.asm	/^f01017fc:	89 f9                	mov    %edi,%ecx$/;"	l
f01017fe	obj/kern/kernel.asm	/^f01017fe:	d3 e2                	shl    %cl,%edx$/;"	d
f0101800	obj/kern/kernel.asm	/^f0101800:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0101803	obj/kern/kernel.asm	/^f0101803:	89 f2                	mov    %esi,%edx$/;"	l
f0101805	obj/kern/kernel.asm	/^f0101805:	88 c1                	mov    %al,%cl$/;"	l
f0101807	obj/kern/kernel.asm	/^f0101807:	d3 ea                	shr    %cl,%edx$/;"	d
f0101809	obj/kern/kernel.asm	/^f0101809:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
f010180c	obj/kern/kernel.asm	/^f010180c:	89 f2                	mov    %esi,%edx$/;"	l
f010180e	obj/kern/kernel.asm	/^f010180e:	89 f9                	mov    %edi,%ecx$/;"	l
f0101810	obj/kern/kernel.asm	/^f0101810:	d3 e2                	shl    %cl,%edx$/;"	d
f0101812	obj/kern/kernel.asm	/^f0101812:	8b 75 f0             	mov    -0x10(%ebp),%esi$/;"	l
f0101815	obj/kern/kernel.asm	/^f0101815:	88 c1                	mov    %al,%cl$/;"	l
f0101817	obj/kern/kernel.asm	/^f0101817:	d3 ee                	shr    %cl,%esi$/;"	d
f0101819	obj/kern/kernel.asm	/^f0101819:	09 d6                	or     %edx,%esi$/;"	l
f010181b	obj/kern/kernel.asm	/^f010181b:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f010181e	obj/kern/kernel.asm	/^f010181e:	89 f0                	mov    %esi,%eax$/;"	l
f0101820	obj/kern/kernel.asm	/^f0101820:	89 ca                	mov    %ecx,%edx$/;"	l
f0101822	obj/kern/kernel.asm	/^f0101822:	f7 75 ec             	divl   -0x14(%ebp)$/;"	l
f0101825	obj/kern/kernel.asm	/^f0101825:	89 d1                	mov    %edx,%ecx$/;"	l
f0101827	obj/kern/kernel.asm	/^f0101827:	89 c6                	mov    %eax,%esi$/;"	l
f0101829	obj/kern/kernel.asm	/^f0101829:	f7 65 f4             	mull   -0xc(%ebp)$/;"	l
f010182c	obj/kern/kernel.asm	/^f010182c:	39 d1                	cmp    %edx,%ecx$/;"	l
f010182e	obj/kern/kernel.asm	/^f010182e:	72 28                	jb     f0101858 <__udivdi3+0x110>$/;"	l
f0101830	obj/kern/kernel.asm	/^f0101830:	74 1a                	je     f010184c <__udivdi3+0x104>$/;"	l
f0101832	obj/kern/kernel.asm	/^f0101832:	89 f7                	mov    %esi,%edi$/;"	l
f0101834	obj/kern/kernel.asm	/^f0101834:	31 f6                	xor    %esi,%esi$/;"	l
f0101836	obj/kern/kernel.asm	/^f0101836:	eb 80                	jmp    f01017b8 <__udivdi3+0x70>$/;"	l
f0101838	obj/kern/kernel.asm	/^f0101838:	31 f6                	xor    %esi,%esi$/;"	l
f010183a	obj/kern/kernel.asm	/^f010183a:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f010183f	obj/kern/kernel.asm	/^f010183f:	89 f8                	mov    %edi,%eax$/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	89 f2                	mov    %esi,%edx$/;"	l
f0101843	obj/kern/kernel.asm	/^f0101843:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101846	obj/kern/kernel.asm	/^f0101846:	5e                   	pop    %esi$/;"	l
f0101847	obj/kern/kernel.asm	/^f0101847:	5f                   	pop    %edi$/;"	l
f0101848	obj/kern/kernel.asm	/^f0101848:	c9                   	leave  $/;"	l
f0101849	obj/kern/kernel.asm	/^f0101849:	c3                   	ret    $/;"	l
f010184a	obj/kern/kernel.asm	/^f010184a:	66 90                	xchg   %ax,%ax$/;"	l
f010184c	obj/kern/kernel.asm	/^f010184c:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f010184f	obj/kern/kernel.asm	/^f010184f:	89 f9                	mov    %edi,%ecx$/;"	l
f0101851	obj/kern/kernel.asm	/^f0101851:	d3 e2                	shl    %cl,%edx$/;"	d
f0101853	obj/kern/kernel.asm	/^f0101853:	39 c2                	cmp    %eax,%edx$/;"	l
f0101855	obj/kern/kernel.asm	/^f0101855:	73 db                	jae    f0101832 <__udivdi3+0xea>$/;"	l
f0101857	obj/kern/kernel.asm	/^f0101857:	90                   	nop$/;"	l
f0101858	obj/kern/kernel.asm	/^f0101858:	8d 7e ff             	lea    -0x1(%esi),%edi$/;"	l
f010185b	obj/kern/kernel.asm	/^f010185b:	31 f6                	xor    %esi,%esi$/;"	l
f010185d	obj/kern/kernel.asm	/^f010185d:	e9 56 ff ff ff       	jmp    f01017b8 <__udivdi3+0x70>$/;"	l
f0101864	obj/kern/kernel.asm	/^f0101864 <__umoddi3>:$/;"	l
f0101864	obj/kern/kernel.asm	/^f0101864:	55                   	push   %ebp$/;"	l
f0101865	obj/kern/kernel.asm	/^f0101865:	89 e5                	mov    %esp,%ebp$/;"	l
f0101867	obj/kern/kernel.asm	/^f0101867:	57                   	push   %edi$/;"	l
f0101868	obj/kern/kernel.asm	/^f0101868:	56                   	push   %esi$/;"	l
f0101869	obj/kern/kernel.asm	/^f0101869:	83 ec 20             	sub    $0x20,%esp$/;"	l
f010186c	obj/kern/kernel.asm	/^f010186c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010186f	obj/kern/kernel.asm	/^f010186f:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0101872	obj/kern/kernel.asm	/^f0101872:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0101875	obj/kern/kernel.asm	/^f0101875:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101878	obj/kern/kernel.asm	/^f0101878:	89 4d f4             	mov    %ecx,-0xc(%ebp)$/;"	l
f010187b	obj/kern/kernel.asm	/^f010187b:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f010187e	obj/kern/kernel.asm	/^f010187e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0101881	obj/kern/kernel.asm	/^f0101881:	89 f2                	mov    %esi,%edx$/;"	l
f0101883	obj/kern/kernel.asm	/^f0101883:	85 ff                	test   %edi,%edi$/;"	l
f0101885	obj/kern/kernel.asm	/^f0101885:	75 15                	jne    f010189c <__umoddi3+0x38>$/;"	l
f0101887	obj/kern/kernel.asm	/^f0101887:	39 f1                	cmp    %esi,%ecx$/;"	l
f0101889	obj/kern/kernel.asm	/^f0101889:	0f 86 99 00 00 00    	jbe    f0101928 <__umoddi3+0xc4>$/;"	l
f010188f	obj/kern/kernel.asm	/^f010188f:	f7 f1                	div    %ecx$/;"	l
f0101891	obj/kern/kernel.asm	/^f0101891:	89 d0                	mov    %edx,%eax$/;"	l
f0101893	obj/kern/kernel.asm	/^f0101893:	31 d2                	xor    %edx,%edx$/;"	l
f0101895	obj/kern/kernel.asm	/^f0101895:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101898	obj/kern/kernel.asm	/^f0101898:	5e                   	pop    %esi$/;"	l
f0101899	obj/kern/kernel.asm	/^f0101899:	5f                   	pop    %edi$/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	c9                   	leave  $/;"	l
f010189b	obj/kern/kernel.asm	/^f010189b:	c3                   	ret    $/;"	l
f010189c	obj/kern/kernel.asm	/^f010189c:	39 f7                	cmp    %esi,%edi$/;"	l
f010189e	obj/kern/kernel.asm	/^f010189e:	0f 87 a4 00 00 00    	ja     f0101948 <__umoddi3+0xe4>$/;"	l
f01018a4	obj/kern/kernel.asm	/^f01018a4:	0f bd c7             	bsr    %edi,%eax$/;"	l
f01018a7	obj/kern/kernel.asm	/^f01018a7:	83 f0 1f             	xor    $0x1f,%eax$/;"	l
f01018aa	obj/kern/kernel.asm	/^f01018aa:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01018ad	obj/kern/kernel.asm	/^f01018ad:	0f 84 a1 00 00 00    	je     f0101954 <__umoddi3+0xf0>$/;"	l
f01018b3	obj/kern/kernel.asm	/^f01018b3:	89 f8                	mov    %edi,%eax$/;"	l
f01018b5	obj/kern/kernel.asm	/^f01018b5:	8a 4d ec             	mov    -0x14(%ebp),%cl$/;"	l
f01018b8	obj/kern/kernel.asm	/^f01018b8:	d3 e0                	shl    %cl,%eax$/;"	d
f01018ba	obj/kern/kernel.asm	/^f01018ba:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f01018bf	obj/kern/kernel.asm	/^f01018bf:	2b 7d ec             	sub    -0x14(%ebp),%edi$/;"	l
f01018c2	obj/kern/kernel.asm	/^f01018c2:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01018c5	obj/kern/kernel.asm	/^f01018c5:	89 f9                	mov    %edi,%ecx$/;"	l
f01018c7	obj/kern/kernel.asm	/^f01018c7:	d3 ea                	shr    %cl,%edx$/;"	d
f01018c9	obj/kern/kernel.asm	/^f01018c9:	09 c2                	or     %eax,%edx$/;"	l
f01018cb	obj/kern/kernel.asm	/^f01018cb:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
f01018ce	obj/kern/kernel.asm	/^f01018ce:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01018d1	obj/kern/kernel.asm	/^f01018d1:	8a 4d ec             	mov    -0x14(%ebp),%cl$/;"	l
f01018d4	obj/kern/kernel.asm	/^f01018d4:	d3 e0                	shl    %cl,%eax$/;"	d
f01018d6	obj/kern/kernel.asm	/^f01018d6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01018d9	obj/kern/kernel.asm	/^f01018d9:	89 f2                	mov    %esi,%edx$/;"	l
f01018db	obj/kern/kernel.asm	/^f01018db:	d3 e2                	shl    %cl,%edx$/;"	d
f01018dd	obj/kern/kernel.asm	/^f01018dd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f01018e0	obj/kern/kernel.asm	/^f01018e0:	d3 e0                	shl    %cl,%eax$/;"	d
f01018e2	obj/kern/kernel.asm	/^f01018e2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01018e5	obj/kern/kernel.asm	/^f01018e5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f01018e8	obj/kern/kernel.asm	/^f01018e8:	89 f9                	mov    %edi,%ecx$/;"	l
f01018ea	obj/kern/kernel.asm	/^f01018ea:	d3 e8                	shr    %cl,%eax$/;"	d
f01018ec	obj/kern/kernel.asm	/^f01018ec:	09 d0                	or     %edx,%eax$/;"	l
f01018ee	obj/kern/kernel.asm	/^f01018ee:	d3 ee                	shr    %cl,%esi$/;"	d
f01018f0	obj/kern/kernel.asm	/^f01018f0:	89 f2                	mov    %esi,%edx$/;"	l
f01018f2	obj/kern/kernel.asm	/^f01018f2:	f7 75 f0             	divl   -0x10(%ebp)$/;"	l
f01018f5	obj/kern/kernel.asm	/^f01018f5:	89 d6                	mov    %edx,%esi$/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	f7 65 f4             	mull   -0xc(%ebp)$/;"	l
f01018fa	obj/kern/kernel.asm	/^f01018fa:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
f01018fd	obj/kern/kernel.asm	/^f01018fd:	89 c1                	mov    %eax,%ecx$/;"	l
f01018ff	obj/kern/kernel.asm	/^f01018ff:	39 d6                	cmp    %edx,%esi$/;"	l
f0101901	obj/kern/kernel.asm	/^f0101901:	72 71                	jb     f0101974 <__umoddi3+0x110>$/;"	l
f0101903	obj/kern/kernel.asm	/^f0101903:	74 7f                	je     f0101984 <__umoddi3+0x120>$/;"	l
f0101905	obj/kern/kernel.asm	/^f0101905:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101908	obj/kern/kernel.asm	/^f0101908:	29 c8                	sub    %ecx,%eax$/;"	l
f010190a	obj/kern/kernel.asm	/^f010190a:	19 d6                	sbb    %edx,%esi$/;"	l
f010190c	obj/kern/kernel.asm	/^f010190c:	8a 4d ec             	mov    -0x14(%ebp),%cl$/;"	l
f010190f	obj/kern/kernel.asm	/^f010190f:	d3 e8                	shr    %cl,%eax$/;"	d
f0101911	obj/kern/kernel.asm	/^f0101911:	89 f2                	mov    %esi,%edx$/;"	l
f0101913	obj/kern/kernel.asm	/^f0101913:	89 f9                	mov    %edi,%ecx$/;"	l
f0101915	obj/kern/kernel.asm	/^f0101915:	d3 e2                	shl    %cl,%edx$/;"	d
f0101917	obj/kern/kernel.asm	/^f0101917:	09 d0                	or     %edx,%eax$/;"	l
f0101919	obj/kern/kernel.asm	/^f0101919:	89 f2                	mov    %esi,%edx$/;"	l
f010191b	obj/kern/kernel.asm	/^f010191b:	8a 4d ec             	mov    -0x14(%ebp),%cl$/;"	l
f010191e	obj/kern/kernel.asm	/^f010191e:	d3 ea                	shr    %cl,%edx$/;"	d
f0101920	obj/kern/kernel.asm	/^f0101920:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101923	obj/kern/kernel.asm	/^f0101923:	5e                   	pop    %esi$/;"	l
f0101924	obj/kern/kernel.asm	/^f0101924:	5f                   	pop    %edi$/;"	l
f0101925	obj/kern/kernel.asm	/^f0101925:	c9                   	leave  $/;"	l
f0101926	obj/kern/kernel.asm	/^f0101926:	c3                   	ret    $/;"	l
f0101927	obj/kern/kernel.asm	/^f0101927:	90                   	nop$/;"	l
f0101928	obj/kern/kernel.asm	/^f0101928:	85 c9                	test   %ecx,%ecx$/;"	l
f010192a	obj/kern/kernel.asm	/^f010192a:	75 0b                	jne    f0101937 <__umoddi3+0xd3>$/;"	l
f010192c	obj/kern/kernel.asm	/^f010192c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101931	obj/kern/kernel.asm	/^f0101931:	31 d2                	xor    %edx,%edx$/;"	l
f0101933	obj/kern/kernel.asm	/^f0101933:	f7 f1                	div    %ecx$/;"	l
f0101935	obj/kern/kernel.asm	/^f0101935:	89 c1                	mov    %eax,%ecx$/;"	l
f0101937	obj/kern/kernel.asm	/^f0101937:	89 f0                	mov    %esi,%eax$/;"	l
f0101939	obj/kern/kernel.asm	/^f0101939:	31 d2                	xor    %edx,%edx$/;"	l
f010193b	obj/kern/kernel.asm	/^f010193b:	f7 f1                	div    %ecx$/;"	l
f010193d	obj/kern/kernel.asm	/^f010193d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0101940	obj/kern/kernel.asm	/^f0101940:	f7 f1                	div    %ecx$/;"	l
f0101942	obj/kern/kernel.asm	/^f0101942:	e9 4a ff ff ff       	jmp    f0101891 <__umoddi3+0x2d>$/;"	l
f0101947	obj/kern/kernel.asm	/^f0101947:	90                   	nop$/;"	l
f0101948	obj/kern/kernel.asm	/^f0101948:	89 f2                	mov    %esi,%edx$/;"	l
f010194a	obj/kern/kernel.asm	/^f010194a:	83 c4 20             	add    $0x20,%esp$/;"	l
f010194d	obj/kern/kernel.asm	/^f010194d:	5e                   	pop    %esi$/;"	l
f010194e	obj/kern/kernel.asm	/^f010194e:	5f                   	pop    %edi$/;"	l
f010194f	obj/kern/kernel.asm	/^f010194f:	c9                   	leave  $/;"	l
f0101950	obj/kern/kernel.asm	/^f0101950:	c3                   	ret    $/;"	l
f0101951	obj/kern/kernel.asm	/^f0101951:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0101954	obj/kern/kernel.asm	/^f0101954:	39 f7                	cmp    %esi,%edi$/;"	l
f0101956	obj/kern/kernel.asm	/^f0101956:	72 05                	jb     f010195d <__umoddi3+0xf9>$/;"	l
f0101958	obj/kern/kernel.asm	/^f0101958:	3b 4d f0             	cmp    -0x10(%ebp),%ecx$/;"	l
f010195b	obj/kern/kernel.asm	/^f010195b:	77 0c                	ja     f0101969 <__umoddi3+0x105>$/;"	l
f010195d	obj/kern/kernel.asm	/^f010195d:	89 f2                	mov    %esi,%edx$/;"	l
f010195f	obj/kern/kernel.asm	/^f010195f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0101962	obj/kern/kernel.asm	/^f0101962:	29 c8                	sub    %ecx,%eax$/;"	l
f0101964	obj/kern/kernel.asm	/^f0101964:	19 fa                	sbb    %edi,%edx$/;"	l
f0101966	obj/kern/kernel.asm	/^f0101966:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0101969	obj/kern/kernel.asm	/^f0101969:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010196c	obj/kern/kernel.asm	/^f010196c:	83 c4 20             	add    $0x20,%esp$/;"	l
f010196f	obj/kern/kernel.asm	/^f010196f:	5e                   	pop    %esi$/;"	l
f0101970	obj/kern/kernel.asm	/^f0101970:	5f                   	pop    %edi$/;"	l
f0101971	obj/kern/kernel.asm	/^f0101971:	c9                   	leave  $/;"	l
f0101972	obj/kern/kernel.asm	/^f0101972:	c3                   	ret    $/;"	l
f0101973	obj/kern/kernel.asm	/^f0101973:	90                   	nop$/;"	l
f0101974	obj/kern/kernel.asm	/^f0101974:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0101977	obj/kern/kernel.asm	/^f0101977:	89 c1                	mov    %eax,%ecx$/;"	l
f0101979	obj/kern/kernel.asm	/^f0101979:	2b 4d f4             	sub    -0xc(%ebp),%ecx$/;"	l
f010197c	obj/kern/kernel.asm	/^f010197c:	1b 55 f0             	sbb    -0x10(%ebp),%edx$/;"	l
f010197f	obj/kern/kernel.asm	/^f010197f:	eb 84                	jmp    f0101905 <__umoddi3+0xa1>$/;"	l
f0101981	obj/kern/kernel.asm	/^f0101981:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0101984	obj/kern/kernel.asm	/^f0101984:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
f0101987	obj/kern/kernel.asm	/^f0101987:	72 eb                	jb     f0101974 <__umoddi3+0x110>$/;"	l
f0101989	obj/kern/kernel.asm	/^f0101989:	89 f2                	mov    %esi,%edx$/;"	l
f010198b	obj/kern/kernel.asm	/^f010198b:	e9 75 ff ff ff       	jmp    f0101905 <__umoddi3+0xa1>$/;"	l
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon2
fileno	gradelib.py	/^    def fileno(self):$/;"	f	access:public
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient	access:public
fprintf	inc/stdio.h	/^int	fprintf(int fd, const char *fmt, ...);$/;"	p	signature:(int fd, const char *fmt, ...)
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
gdt	boot/boot.S	/^gdt:$/;"	l
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
get_current_test	gradelib.py	/^def get_current_test():$/;"	f	access:public
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f	access:public
getchar	inc/stdio.h	/^int	getchar(void);$/;"	p	signature:(void)
getchar	kern/console.c	/^getchar(void)$/;"	f	signature:(void)
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
handle_output	gradelib.py	/^        def handle_output(output, buf=buf):$/;"	f	function:call_on_line.setup_call_on_line	access:public
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f	access:public
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient	access:public
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i386_init	init.s	/^i386_init:$/;"	l
i386_init	kern/init.c	/^i386_init(void)$/;"	f	signature:(void)
inb	inc/x86.h	/^inb(int port)$/;"	f	signature:(int port)
inb	inc/x86.h	/^static __inline uint8_t inb(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
inl	inc/x86.h	/^inl(int port)$/;"	f	signature:(int port)
inl	inc/x86.h	/^static __inline uint32_t inl(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insb	inc/x86.h	/^static __inline void insb(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^static __inline void insl(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^static __inline void insw(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
int	obj/kern/kernel.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f	signature:(void *addr)
invlpg	inc/x86.h	/^static __inline void invlpg(void *addr) __attribute__((always_inline));$/;"	p	signature:(void *addr)
inw	inc/x86.h	/^inw(int port)$/;"	f	signature:(int port)
inw	inc/x86.h	/^static __inline uint16_t inw(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
iscons	inc/stdio.h	/^int	iscons(int fd);$/;"	p	signature:(int fd)
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f	signature:(int fdnum)
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:	signature:(void)
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f	signature:(void)
kbd_intr	kern/console.h	/^void kbd_intr(void); \/\/ irq 1$/;"	p	signature:(void)
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:	signature:(void)
kill	gradelib.py	/^    def kill(self):$/;"	m	class:GDBClient	access:public
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr0	inc/x86.h	/^static __inline void lcr0(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr3	inc/x86.h	/^static __inline void lcr3(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr4	inc/x86.h	/^static __inline void lcr4(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lfun	obj/kern/kernel.asm	/^    lfun = lline;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f	signature:(void *p)
lidt	inc/x86.h	/^lidt(void *p)$/;"	f	signature:(void *p)
lidt	inc/x86.h	/^static __inline void lidt(void *p) __attribute__((always_inline));$/;"	p	signature:(void *p)
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f	signature:(uint16_t sel)
lldt	inc/x86.h	/^static __inline void lldt(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
lline	obj/kern/kernel.asm	/^        lline = lfun;$/;"	d
long	obj/kern/kernel.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:	signature:(int c)
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f	signature:(uint16_t sel)
ltr	inc/x86.h	/^static __inline void ltr(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
make	gradelib.py	/^def make(*target):$/;"	f	access:public
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner	access:public
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f	access:public
memcmp	inc/string.h	/^int	memcmp(const void *s1, const void *s2, size_t len);$/;"	p	signature:(const void *s1, const void *s2, size_t len)
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f	signature:(const void *v1, const void *v2, size_t n)
memcpy	inc/string.h	/^void *	memcpy(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memfind	inc/string.h	/^void *	memfind(const void *s, int c, size_t len);$/;"	p	signature:(const void *s, int c, size_t len)
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f	signature:(const void *s, int c, size_t n)
memmove	inc/string.h	/^void *	memmove(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memset	inc/string.h	/^void *	memset(void *dst, int c, size_t len);$/;"	p	signature:(void *dst, int c, size_t len)
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f	signature:(void *v, int c, size_t n)
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_backtrace	kern/monitor.h	/^int mon_backtrace(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.h	/^int mon_help(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.h	/^int mon_kerninfo(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_setcolor	kern/monitor.c	/^mon_setcolor(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_setcolor	kern/monitor.h	/^int mon_setcolor(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
monitor	kern/monitor.h	/^void monitor(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
n0	obj/kern/kernel.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/kern/kernel.asm	/^  n0 = nn.s.low;$/;"	d
n1	obj/kern/kernel.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/kern/kernel.asm	/^  n1 = nn.s.high;$/;"	d
n2	obj/kern/kernel.asm	/^	      n2 = n1 >> b;$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^                num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^            num = getint(&ap, lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	71;"	d
os	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	signature:(int port, uint8_t data)
outb	inc/x86.h	/^static __inline void outb(int port, uint8_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint8_t data)
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	signature:(int port, uint32_t data)
outl	inc/x86.h	/^static __inline void outl(int port, uint32_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint32_t data)
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsb	inc/x86.h	/^static __inline void outsb(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^static __inline void outsl(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^static __inline void outsw(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	signature:(int port, uint16_t data)
outw	inc/x86.h	/^static __inline void outw(int port, uint16_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint16_t data)
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f	access:public
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f	access:public
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
printf	inc/stdio.h	/^int	printf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
printfmt	inc/stdio.h	/^void	printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	file:	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:	signature:(void (*putch)(int, void*), void *putdat, unsigned long long num, unsigned base, int width, int padc)
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:	signature:(int ch, int *cnt)
q0	obj/kern/kernel.asm	/^		  q0 = 1;$/;"	d
q1	obj/kern/kernel.asm	/^	      q1 = 0;$/;"	d
quote	gradelib.py	/^    from pipes import quote$/;"	i
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f	signature:(void)
rcr0	inc/x86.h	/^static __inline uint32_t rcr0(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr2	inc/x86.h	/^rcr2(void)$/;"	f	signature:(void)
rcr2	inc/x86.h	/^static __inline uint32_t rcr2(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr3	inc/x86.h	/^rcr3(void)$/;"	f	signature:(void)
rcr3	inc/x86.h	/^static __inline uint32_t rcr3(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr4	inc/x86.h	/^rcr4(void)$/;"	f	signature:(void)
rcr4	inc/x86.h	/^static __inline uint32_t rcr4(void) __attribute__((always_inline));$/;"	p	signature:(void)
re	grade-lab1	/^import re$/;"	i
re	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f	signature:(void)
read_ebp	inc/x86.h	/^static __inline uint32_t read_ebp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f	signature:(void)
read_eflags	inc/x86.h	/^static __inline uint32_t read_eflags(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_esp	inc/x86.h	/^read_esp(void)$/;"	f	signature:(void)
read_esp	inc/x86.h	/^static __inline uint32_t read_esp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f	signature:(void)
read_tsc	inc/x86.h	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	p	signature:(void)
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	inc/stdio.h	/^char*	readline(const char *prompt);$/;"	p	signature:(const char *prompt)
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f	signature:(const char *prompt)
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f	signature:(void *dst, uint32_t offset)
readsect	boot/main.c	/^void readsect(void*, uint32_t);$/;"	p	file:	signature:(void*, uint32_t)
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f	signature:(uint32_t pa, uint32_t count, uint32_t offset)
readseg	boot/main.c	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	p	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test	access:public
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reset_fs	gradelib.py	/^def reset_fs():$/;"	f	access:public
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rfun	obj/kern/kernel.asm	/^    rfun = rline;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rline	obj/kern/kernel.asm	/^        rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon1	file:	access:public
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner	access:public
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu	access:public
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test	access:public
run_tests	gradelib.py	/^def run_tests():$/;"	f	access:public
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:	signature:(char *buf, struct Trapframe *tf)
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f	access:public
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save	access:public
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
select	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:	signature:(void)
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f	signature:(void)
serial_intr	kern/console.h	/^void serial_intr(void); \/\/ irq 4$/;"	p	signature:(void)
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:	signature:(void)
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:	signature:(int c)
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint	access:public
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line	access:public
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save	access:public
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f	access:public
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part	access:public
shutil	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
snprintf	inc/stdio.h	/^int	snprintf(char *str, int size, const char *fmt, ...);$/;"	p	signature:(char *str, int size, const char *fmt, ...)
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f	signature:(char *buf, int n, const char *fmt, ...)
socket	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintbuf::buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:	signature:(int ch, struct sprintbuf *b)
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:	signature:(const struct Stab *stabs, int *region_left, int *region_right, int type, uintptr_t addr)
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void cons_putc(int c);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line	access:public
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f	access:public
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f	access:public
strcat	inc/string.h	/^char *	strcat(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strchr	inc/string.h	/^char *	strchr(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strcmp	inc/string.h	/^int	strcmp(const char *s1, const char *s2);$/;"	p	signature:(const char *s1, const char *s2)
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f	signature:(const char *p, const char *q)
strcpy	inc/string.h	/^char *	strcpy(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strfind	inc/string.h	/^char *	strfind(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strlcpy	inc/string.h	/^size_t	strlcpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f	signature:(char *dst, const char *src, size_t size)
strlen	inc/string.h	/^int	strlen(const char *s);$/;"	p	signature:(const char *s)
strlen	lib/string.c	/^strlen(const char *s)$/;"	f	signature:(const char *s)
strncmp	inc/string.h	/^int	strncmp(const char *s1, const char *s2, size_t size);$/;"	p	signature:(const char *s1, const char *s2, size_t size)
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f	signature:(const char *p, const char *q, size_t n)
strncpy	inc/string.h	/^char *	strncpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f	signature:(char *dst, const char *src, size_t size)
strnlen	inc/string.h	/^int	strnlen(const char *s, size_t size);$/;"	p	signature:(const char *s, size_t size)
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f	signature:(const char *s, size_t size)
strtol	inc/string.h	/^long	strtol(const char *s, char **endptr, int base);$/;"	p	signature:(const char *s, char **endptr, int base)
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f	signature:(const char *s, char **endptr, int base)
subprocess	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
sys	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f	access:public
test_backtrace	init.s	/^test_backtrace:$/;"	l
test_backtrace	kern/init.c	/^test_backtrace(int x)$/;"	f	signature:(int x)
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f	access:public
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f	access:public
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f	access:public
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f	access:public
test_jos	grade-lab1	/^def test_jos():$/;"	f	access:public
test_printf	grade-lab1	/^def test_printf():$/;"	f	access:public
time	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
tlbflush	inc/x86.h	/^static __inline void tlbflush(void) __attribute__((always_inline));$/;"	p	signature:(void)
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f	signature:(void)
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon2
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
user_setcolor	kern/console.c	/^int user_setcolor = 0x00;$/;"	v
user_setcolor	obj/kern/kernel.asm	/^        user_setcolor = colnum;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner	access:public
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
vcprintf	inc/stdio.h	/^int	vcprintf(const char *fmt, va_list);$/;"	p	signature:(const char *fmt, va_list)
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	signature:(const char *fmt, va_list ap)
vfprintf	inc/stdio.h	/^int	vfprintf(int fd, const char *fmt, va_list);$/;"	p	signature:(int fd, const char *fmt, va_list)
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
vprintfmt	inc/stdio.h	/^void	vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list)
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)
vsnprintf	inc/stdio.h	/^int	vsnprintf(char *str, int size, const char *fmt, va_list);$/;"	p	signature:(char *str, int size, const char *fmt, va_list)
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f	signature:(char *buf, int n, const char *fmt, va_list ap)
wait	gradelib.py	/^    def wait(self):$/;"	f	access:public
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f	signature:(void)
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon1	file:	access:public
write_eflags	inc/x86.h	/^static __inline void write_eflags(uint32_t eflags) __attribute__((always_inline));$/;"	p	signature:(uint32_t eflags)
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	signature:(uint32_t eflags)
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f	signature:(volatile uint32_t *addr, uint32_t newval)
